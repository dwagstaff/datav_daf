// **** Autogenerated file
package com.bsquare.datav.trucksidetool.re;
import com.bsquare.datav.trucksidetool.re.StepPerformed;
import com.bsquare.datav.trucksidetool.re.AdjustScore;
import com.bsquare.datav.trucksidetool.re.EYesNo;
rule "Yes Step Rule for P0045/1A"
	when
		StepPerformed(stepId=="P0045/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/1A"));
end
rule "No Step Rule for P0045/1A"
	when
		StepPerformed(stepId=="P0045/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/1B",$sum.doubleValue() + 100.0,"Answered No to step P0045/1A"));
end
rule "Yes Step Rule for P0045/1A-YES"
	when
		StepPerformed(stepId=="P0045/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/1A-YES"));
end
rule "No Step Rule for P0045/1A-YES"
	when
		StepPerformed(stepId=="P0045/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/1A-YES"));
end
rule "Yes Step Rule for P0045/1A-NO"
	when
		StepPerformed(stepId=="P0045/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/1A-NO"));
end
rule "No Step Rule for P0045/1A-NO"
	when
		StepPerformed(stepId=="P0045/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/1A-NO"));
end
rule "Yes Step Rule for P0045/1B"
	when
		StepPerformed(stepId=="P0045/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/1B"));
end
rule "No Step Rule for P0045/1B"
	when
		StepPerformed(stepId=="P0045/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0045/1B"));
end
rule "Yes Step Rule for P0045/1B-YES"
	when
		StepPerformed(stepId=="P0045/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/1B-YES"));
end
rule "No Step Rule for P0045/1B-YES"
	when
		StepPerformed(stepId=="P0045/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/1B-YES"));
end
rule "Yes Step Rule for P0045/1B-NO"
	when
		StepPerformed(stepId=="P0045/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/1B-NO"));
end
rule "No Step Rule for P0045/1B-NO"
	when
		StepPerformed(stepId=="P0045/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/1B-NO"));
end
rule "Yes Step Rule for P0045/2A"
	when
		StepPerformed(stepId=="P0045/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/2A"));
end
rule "No Step Rule for P0045/2A"
	when
		StepPerformed(stepId=="P0045/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0045/2A"));
end
rule "Yes Step Rule for P0045/2A-YES"
	when
		StepPerformed(stepId=="P0045/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/2A-YES"));
end
rule "No Step Rule for P0045/2A-YES"
	when
		StepPerformed(stepId=="P0045/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/2A-YES"));
end
rule "Yes Step Rule for P0045/2A-NO"
	when
		StepPerformed(stepId=="P0045/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/2A-NO"));
end
rule "No Step Rule for P0045/2A-NO"
	when
		StepPerformed(stepId=="P0045/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/2A-NO"));
end
rule "Yes Step Rule for P0045/3A"
	when
		StepPerformed(stepId=="P0045/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/3A"));
end
rule "No Step Rule for P0045/3A"
	when
		StepPerformed(stepId=="P0045/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0045/3A"));
end
rule "Yes Step Rule for P0045/3A-YES"
	when
		StepPerformed(stepId=="P0045/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/3A-YES"));
end
rule "No Step Rule for P0045/3A-YES"
	when
		StepPerformed(stepId=="P0045/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/3A-YES"));
end
rule "Yes Step Rule for P0045/3A-NO"
	when
		StepPerformed(stepId=="P0045/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/3A-NO"));
end
rule "No Step Rule for P0045/3A-NO"
	when
		StepPerformed(stepId=="P0045/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/3A-NO"));
end
rule "Yes Step Rule for P0045/3B"
	when
		StepPerformed(stepId=="P0045/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/3B"));
end
rule "No Step Rule for P0045/3B"
	when
		StepPerformed(stepId=="P0045/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/3C",$sum.doubleValue() + 100.0,"Answered No to step P0045/3B"));
end
rule "Yes Step Rule for P0045/3B-YES"
	when
		StepPerformed(stepId=="P0045/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/3B-YES"));
end
rule "No Step Rule for P0045/3B-YES"
	when
		StepPerformed(stepId=="P0045/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/3B-YES"));
end
rule "Yes Step Rule for P0045/3B-NO"
	when
		StepPerformed(stepId=="P0045/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/3B-NO"));
end
rule "No Step Rule for P0045/3B-NO"
	when
		StepPerformed(stepId=="P0045/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/3B-NO"));
end
rule "Yes Step Rule for P0045/3C"
	when
		StepPerformed(stepId=="P0045/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/3C"));
end
rule "No Step Rule for P0045/3C"
	when
		StepPerformed(stepId=="P0045/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/4A",$sum.doubleValue() + 100.0,"Answered No to step P0045/3C"));
end
rule "Yes Step Rule for P0045/3C-YES"
	when
		StepPerformed(stepId=="P0045/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/3C-YES"));
end
rule "No Step Rule for P0045/3C-YES"
	when
		StepPerformed(stepId=="P0045/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/3C-YES"));
end
rule "Yes Step Rule for P0045/3C-NO"
	when
		StepPerformed(stepId=="P0045/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/3C-NO"));
end
rule "No Step Rule for P0045/3C-NO"
	when
		StepPerformed(stepId=="P0045/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/3C-NO"));
end
rule "Yes Step Rule for P0045/4A"
	when
		StepPerformed(stepId=="P0045/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/4A"));
end
rule "No Step Rule for P0045/4A"
	when
		StepPerformed(stepId=="P0045/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0045/4A"));
end
rule "Yes Step Rule for P0045/4A-YES"
	when
		StepPerformed(stepId=="P0045/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/4A-YES"));
end
rule "No Step Rule for P0045/4A-YES"
	when
		StepPerformed(stepId=="P0045/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/4A-YES"));
end
rule "Yes Step Rule for P0045/4A-NO"
	when
		StepPerformed(stepId=="P0045/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0045/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P0045/4A-NO"));
end
rule "No Step Rule for P0045/4A-NO"
	when
		StepPerformed(stepId=="P0045/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0045/4A-NO"));
end
rule "Yes Step Rule for P0046/1A"
	when
		StepPerformed(stepId=="P0046/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/1A"));
end
rule "No Step Rule for P0046/1A"
	when
		StepPerformed(stepId=="P0046/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/1B",$sum.doubleValue() + 100.0,"Answered No to step P0046/1A"));
end
rule "Yes Step Rule for P0046/1A-YES"
	when
		StepPerformed(stepId=="P0046/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/1A-YES"));
end
rule "No Step Rule for P0046/1A-YES"
	when
		StepPerformed(stepId=="P0046/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/1A-YES"));
end
rule "Yes Step Rule for P0046/1A-NO"
	when
		StepPerformed(stepId=="P0046/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/1A-NO"));
end
rule "No Step Rule for P0046/1A-NO"
	when
		StepPerformed(stepId=="P0046/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/1A-NO"));
end
rule "Yes Step Rule for P0046/1B"
	when
		StepPerformed(stepId=="P0046/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/1B"));
end
rule "No Step Rule for P0046/1B"
	when
		StepPerformed(stepId=="P0046/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0046/1B"));
end
rule "Yes Step Rule for P0046/1B-YES"
	when
		StepPerformed(stepId=="P0046/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/1B-YES"));
end
rule "No Step Rule for P0046/1B-YES"
	when
		StepPerformed(stepId=="P0046/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/1B-YES"));
end
rule "Yes Step Rule for P0046/1B-NO"
	when
		StepPerformed(stepId=="P0046/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/1B-NO"));
end
rule "No Step Rule for P0046/1B-NO"
	when
		StepPerformed(stepId=="P0046/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/1B-NO"));
end
rule "Yes Step Rule for P0046/2A"
	when
		StepPerformed(stepId=="P0046/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/2A"));
end
rule "No Step Rule for P0046/2A"
	when
		StepPerformed(stepId=="P0046/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0046/2A"));
end
rule "Yes Step Rule for P0046/2A-YES"
	when
		StepPerformed(stepId=="P0046/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/2A-YES"));
end
rule "No Step Rule for P0046/2A-YES"
	when
		StepPerformed(stepId=="P0046/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/2A-YES"));
end
rule "Yes Step Rule for P0046/2A-NO"
	when
		StepPerformed(stepId=="P0046/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/2A-NO"));
end
rule "No Step Rule for P0046/2A-NO"
	when
		StepPerformed(stepId=="P0046/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/2A-NO"));
end
rule "Yes Step Rule for P0046/3A"
	when
		StepPerformed(stepId=="P0046/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/3A"));
end
rule "No Step Rule for P0046/3A"
	when
		StepPerformed(stepId=="P0046/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0046/3A"));
end
rule "Yes Step Rule for P0046/3A-YES"
	when
		StepPerformed(stepId=="P0046/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/3A-YES"));
end
rule "No Step Rule for P0046/3A-YES"
	when
		StepPerformed(stepId=="P0046/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/3A-YES"));
end
rule "Yes Step Rule for P0046/3A-NO"
	when
		StepPerformed(stepId=="P0046/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/3A-NO"));
end
rule "No Step Rule for P0046/3A-NO"
	when
		StepPerformed(stepId=="P0046/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/3A-NO"));
end
rule "Yes Step Rule for P0046/3B"
	when
		StepPerformed(stepId=="P0046/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/3B"));
end
rule "No Step Rule for P0046/3B"
	when
		StepPerformed(stepId=="P0046/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3C",$sum.doubleValue() + 100.0,"Answered No to step P0046/3B"));
end
rule "Yes Step Rule for P0046/3B-YES"
	when
		StepPerformed(stepId=="P0046/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/3B-YES"));
end
rule "No Step Rule for P0046/3B-YES"
	when
		StepPerformed(stepId=="P0046/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/3B-YES"));
end
rule "Yes Step Rule for P0046/3B-NO"
	when
		StepPerformed(stepId=="P0046/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/3B-NO"));
end
rule "No Step Rule for P0046/3B-NO"
	when
		StepPerformed(stepId=="P0046/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/3B-NO"));
end
rule "Yes Step Rule for P0046/3C"
	when
		StepPerformed(stepId=="P0046/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/3C"));
end
rule "No Step Rule for P0046/3C"
	when
		StepPerformed(stepId=="P0046/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/3C-NO",$sum.doubleValue() + 100.0,"Answered No to step P0046/3C"));
end
rule "Yes Step Rule for P0046/3C-YES"
	when
		StepPerformed(stepId=="P0046/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/3C-YES"));
end
rule "No Step Rule for P0046/3C-YES"
	when
		StepPerformed(stepId=="P0046/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/3C-YES"));
end
rule "Yes Step Rule for P0046/3C-NO"
	when
		StepPerformed(stepId=="P0046/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/3C-NO"));
end
rule "No Step Rule for P0046/3C-NO"
	when
		StepPerformed(stepId=="P0046/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/3C-NO"));
end
rule "Yes Step Rule for P0046/4A"
	when
		StepPerformed(stepId=="P0046/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/4A"));
end
rule "No Step Rule for P0046/4A"
	when
		StepPerformed(stepId=="P0046/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0046/4A"));
end
rule "Yes Step Rule for P0046/4A-YES"
	when
		StepPerformed(stepId=="P0046/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/4A-YES"));
end
rule "No Step Rule for P0046/4A-YES"
	when
		StepPerformed(stepId=="P0046/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/4A-YES"));
end
rule "Yes Step Rule for P0046/4A-NO"
	when
		StepPerformed(stepId=="P0046/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/4A-NO"));
end
rule "No Step Rule for P0046/4A-NO"
	when
		StepPerformed(stepId=="P0046/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/4A-NO"));
end
rule "Yes Step Rule for P0046/5A"
	when
		StepPerformed(stepId=="P0046/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/5A"));
end
rule "No Step Rule for P0046/5A"
	when
		StepPerformed(stepId=="P0046/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0046/5A"));
end
rule "Yes Step Rule for P0046/5A-YES"
	when
		StepPerformed(stepId=="P0046/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/5A-YES"));
end
rule "No Step Rule for P0046/5A-YES"
	when
		StepPerformed(stepId=="P0046/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/5A-YES"));
end
rule "Yes Step Rule for P0046/5A-NO"
	when
		StepPerformed(stepId=="P0046/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0046/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P0046/5A-NO"));
end
rule "No Step Rule for P0046/5A-NO"
	when
		StepPerformed(stepId=="P0046/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0046/5A-NO"));
end
rule "Yes Step Rule for P0088/1A"
	when
		StepPerformed(stepId=="P0088/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0088/1A"));
end
rule "No Step Rule for P0088/1A"
	when
		StepPerformed(stepId=="P0088/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0088/1A"));
end
rule "Yes Step Rule for P0088/1A-YES"
	when
		StepPerformed(stepId=="P0088/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0088/1A-YES"));
end
rule "No Step Rule for P0088/1A-YES"
	when
		StepPerformed(stepId=="P0088/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0088/1A-YES"));
end
rule "Yes Step Rule for P0088/1A-NO"
	when
		StepPerformed(stepId=="P0088/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0088/1A-NO"));
end
rule "No Step Rule for P0088/1A-NO"
	when
		StepPerformed(stepId=="P0088/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0088/1A-NO"));
end
rule "Yes Step Rule for P0088/2A"
	when
		StepPerformed(stepId=="P0088/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0088/2A"));
end
rule "No Step Rule for P0088/2A"
	when
		StepPerformed(stepId=="P0088/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0088/2A"));
end
rule "Yes Step Rule for P0088/2A-YES"
	when
		StepPerformed(stepId=="P0088/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0088/2A-YES"));
end
rule "No Step Rule for P0088/2A-YES"
	when
		StepPerformed(stepId=="P0088/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0088/2A-YES"));
end
rule "Yes Step Rule for P0088/2A-NO"
	when
		StepPerformed(stepId=="P0088/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0088/2A-NO"));
end
rule "No Step Rule for P0088/2A-NO"
	when
		StepPerformed(stepId=="P0088/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0088/2A-NO"));
end
rule "Yes Step Rule for P0088/3A"
	when
		StepPerformed(stepId=="P0088/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0088/3A"));
end
rule "No Step Rule for P0088/3A"
	when
		StepPerformed(stepId=="P0088/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0088/3A"));
end
rule "Yes Step Rule for P0088/3A-YES"
	when
		StepPerformed(stepId=="P0088/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P0088/3A-YES"));
end
rule "No Step Rule for P0088/3A-YES"
	when
		StepPerformed(stepId=="P0088/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0088/3A-YES"));
end
rule "Yes Step Rule for P0088/3A-NO"
	when
		StepPerformed(stepId=="P0088/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0088/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P0088/3A-NO"));
end
rule "No Step Rule for P0088/3A-NO"
	when
		StepPerformed(stepId=="P0088/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0088/3A-NO"));
end
rule "Yes Step Rule for P0093/1A"
	when
		StepPerformed(stepId=="P0093/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/1A"));
end
rule "No Step Rule for P0093/1A"
	when
		StepPerformed(stepId=="P0093/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/3A",$sum.doubleValue() + 100.0,"Answered No to step P0093/1A"));
end
rule "Yes Step Rule for P0093/1A-YES"
	when
		StepPerformed(stepId=="P0093/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/1A-YES"));
end
rule "No Step Rule for P0093/1A-YES"
	when
		StepPerformed(stepId=="P0093/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/1A-YES"));
end
rule "Yes Step Rule for P0093/1A-NO"
	when
		StepPerformed(stepId=="P0093/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/1A-NO"));
end
rule "No Step Rule for P0093/1A-NO"
	when
		StepPerformed(stepId=="P0093/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/1A-NO"));
end
rule "Yes Step Rule for P0093/2A"
	when
		StepPerformed(stepId=="P0093/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/2A"));
end
rule "No Step Rule for P0093/2A"
	when
		StepPerformed(stepId=="P0093/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/3A",$sum.doubleValue() + 100.0,"Answered No to step P0093/2A"));
end
rule "Yes Step Rule for P0093/2A-YES"
	when
		StepPerformed(stepId=="P0093/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/2A-YES"));
end
rule "No Step Rule for P0093/2A-YES"
	when
		StepPerformed(stepId=="P0093/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/2A-YES"));
end
rule "Yes Step Rule for P0093/2A-NO"
	when
		StepPerformed(stepId=="P0093/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/2A-NO"));
end
rule "No Step Rule for P0093/2A-NO"
	when
		StepPerformed(stepId=="P0093/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/2A-NO"));
end
rule "Yes Step Rule for P0093/3A"
	when
		StepPerformed(stepId=="P0093/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/3A"));
end
rule "No Step Rule for P0093/3A"
	when
		StepPerformed(stepId=="P0093/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0093/3A"));
end
rule "Yes Step Rule for P0093/3A-YES"
	when
		StepPerformed(stepId=="P0093/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/3A-YES"));
end
rule "No Step Rule for P0093/3A-YES"
	when
		StepPerformed(stepId=="P0093/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/3A-YES"));
end
rule "Yes Step Rule for P0093/3A-NO"
	when
		StepPerformed(stepId=="P0093/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/3A-NO"));
end
rule "No Step Rule for P0093/3A-NO"
	when
		StepPerformed(stepId=="P0093/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/3A-NO"));
end
rule "Yes Step Rule for P0093/4A"
	when
		StepPerformed(stepId=="P0093/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4A"));
end
rule "No Step Rule for P0093/4A"
	when
		StepPerformed(stepId=="P0093/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4C",$sum.doubleValue() + 100.0,"Answered No to step P0093/4A"));
end
rule "Yes Step Rule for P0093/4A-YES"
	when
		StepPerformed(stepId=="P0093/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4A-YES"));
end
rule "No Step Rule for P0093/4A-YES"
	when
		StepPerformed(stepId=="P0093/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4A-YES"));
end
rule "Yes Step Rule for P0093/4A-NO"
	when
		StepPerformed(stepId=="P0093/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4C",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4A-NO"));
end
rule "No Step Rule for P0093/4A-NO"
	when
		StepPerformed(stepId=="P0093/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4A-NO"));
end
rule "Yes Step Rule for P0093/4B"
	when
		StepPerformed(stepId=="P0093/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4B"));
end
rule "No Step Rule for P0093/4B"
	when
		StepPerformed(stepId=="P0093/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0093/4B"));
end
rule "Yes Step Rule for P0093/4B-YES"
	when
		StepPerformed(stepId=="P0093/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4E",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4B-YES"));
end
rule "No Step Rule for P0093/4B-YES"
	when
		StepPerformed(stepId=="P0093/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4B-YES"));
end
rule "Yes Step Rule for P0093/4B-NO"
	when
		StepPerformed(stepId=="P0093/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4B-NO"));
end
rule "No Step Rule for P0093/4B-NO"
	when
		StepPerformed(stepId=="P0093/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4B-NO"));
end
rule "Yes Step Rule for P0093/4C"
	when
		StepPerformed(stepId=="P0093/4C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4C"));
end
rule "No Step Rule for P0093/4C"
	when
		StepPerformed(stepId=="P0093/4C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4D",$sum.doubleValue() + 100.0,"Answered No to step P0093/4C"));
end
rule "Yes Step Rule for P0093/4C-YES"
	when
		StepPerformed(stepId=="P0093/4C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4C-YES"));
end
rule "No Step Rule for P0093/4C-YES"
	when
		StepPerformed(stepId=="P0093/4C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4C-YES"));
end
rule "Yes Step Rule for P0093/4C-NO"
	when
		StepPerformed(stepId=="P0093/4C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4D",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4C-NO"));
end
rule "No Step Rule for P0093/4C-NO"
	when
		StepPerformed(stepId=="P0093/4C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4C-NO"));
end
rule "Yes Step Rule for P0093/4D"
	when
		StepPerformed(stepId=="P0093/4D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4E",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4D"));
end
rule "No Step Rule for P0093/4D"
	when
		StepPerformed(stepId=="P0093/4D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4F",$sum.doubleValue() + 100.0,"Answered No to step P0093/4D"));
end
rule "Yes Step Rule for P0093/4D-YES"
	when
		StepPerformed(stepId=="P0093/4D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4E",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4D-YES"));
end
rule "No Step Rule for P0093/4D-YES"
	when
		StepPerformed(stepId=="P0093/4D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4D-YES"));
end
rule "Yes Step Rule for P0093/4D-NO"
	when
		StepPerformed(stepId=="P0093/4D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4F",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4D-NO"));
end
rule "No Step Rule for P0093/4D-NO"
	when
		StepPerformed(stepId=="P0093/4D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4D-NO"));
end
rule "Yes Step Rule for P0093/4E"
	when
		StepPerformed(stepId=="P0093/4E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4E"));
end
rule "No Step Rule for P0093/4E"
	when
		StepPerformed(stepId=="P0093/4E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4E-NO",$sum.doubleValue() + 100.0,"Answered No to step P0093/4E"));
end
rule "Yes Step Rule for P0093/4E-YES"
	when
		StepPerformed(stepId=="P0093/4E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4E-YES"));
end
rule "No Step Rule for P0093/4E-YES"
	when
		StepPerformed(stepId=="P0093/4E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4E-YES"));
end
rule "Yes Step Rule for P0093/4E-NO"
	when
		StepPerformed(stepId=="P0093/4E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4E-NO"));
end
rule "No Step Rule for P0093/4E-NO"
	when
		StepPerformed(stepId=="P0093/4E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4E-NO"));
end
rule "Yes Step Rule for P0093/4F"
	when
		StepPerformed(stepId=="P0093/4F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4F"));
end
rule "No Step Rule for P0093/4F"
	when
		StepPerformed(stepId=="P0093/4F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4G",$sum.doubleValue() + 100.0,"Answered No to step P0093/4F"));
end
rule "Yes Step Rule for P0093/4F-YES"
	when
		StepPerformed(stepId=="P0093/4F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4F-YES"));
end
rule "No Step Rule for P0093/4F-YES"
	when
		StepPerformed(stepId=="P0093/4F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4F-YES"));
end
rule "Yes Step Rule for P0093/4F-NO"
	when
		StepPerformed(stepId=="P0093/4F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4G",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4F-NO"));
end
rule "No Step Rule for P0093/4F-NO"
	when
		StepPerformed(stepId=="P0093/4F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4F-NO"));
end
rule "Yes Step Rule for P0093/4G"
	when
		StepPerformed(stepId=="P0093/4G", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4G-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4G"));
end
rule "No Step Rule for P0093/4G"
	when
		StepPerformed(stepId=="P0093/4G", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/4G-NO",$sum.doubleValue() + 100.0,"Answered No to step P0093/4G"));
end
rule "Yes Step Rule for P0093/4G-YES"
	when
		StepPerformed(stepId=="P0093/4G-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4G-YES"));
end
rule "No Step Rule for P0093/4G-YES"
	when
		StepPerformed(stepId=="P0093/4G-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4G-YES"));
end
rule "Yes Step Rule for P0093/4G-NO"
	when
		StepPerformed(stepId=="P0093/4G-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/4G-NO"));
end
rule "No Step Rule for P0093/4G-NO"
	when
		StepPerformed(stepId=="P0093/4G-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/4G-NO"));
end
rule "Yes Step Rule for P0093/5A"
	when
		StepPerformed(stepId=="P0093/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/5A"));
end
rule "No Step Rule for P0093/5A"
	when
		StepPerformed(stepId=="P0093/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/6A",$sum.doubleValue() + 100.0,"Answered No to step P0093/5A"));
end
rule "Yes Step Rule for P0093/5A-YES"
	when
		StepPerformed(stepId=="P0093/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/5A-YES"));
end
rule "No Step Rule for P0093/5A-YES"
	when
		StepPerformed(stepId=="P0093/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/5A-YES"));
end
rule "Yes Step Rule for P0093/5A-NO"
	when
		StepPerformed(stepId=="P0093/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/5A-NO"));
end
rule "No Step Rule for P0093/5A-NO"
	when
		StepPerformed(stepId=="P0093/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/5A-NO"));
end
rule "Yes Step Rule for P0093/6A"
	when
		StepPerformed(stepId=="P0093/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/6A"));
end
rule "No Step Rule for P0093/6A"
	when
		StepPerformed(stepId=="P0093/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0093/6A"));
end
rule "Yes Step Rule for P0093/6A-YES"
	when
		StepPerformed(stepId=="P0093/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/6A-YES"));
end
rule "No Step Rule for P0093/6A-YES"
	when
		StepPerformed(stepId=="P0093/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/6A-YES"));
end
rule "Yes Step Rule for P0093/6A-NO"
	when
		StepPerformed(stepId=="P0093/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0093/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P0093/6A-NO"));
end
rule "No Step Rule for P0093/6A-NO"
	when
		StepPerformed(stepId=="P0093/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0093/6A-NO"));
end
rule "Yes Step Rule for P0094/1A"
	when
		StepPerformed(stepId=="P0094/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/1A"));
end
rule "No Step Rule for P0094/1A"
	when
		StepPerformed(stepId=="P0094/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/2A",$sum.doubleValue() + 100.0,"Answered No to step P0094/1A"));
end
rule "Yes Step Rule for P0094/1A-YES"
	when
		StepPerformed(stepId=="P0094/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/1A-YES"));
end
rule "No Step Rule for P0094/1A-YES"
	when
		StepPerformed(stepId=="P0094/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/1A-YES"));
end
rule "Yes Step Rule for P0094/1A-NO"
	when
		StepPerformed(stepId=="P0094/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/1A-NO"));
end
rule "No Step Rule for P0094/1A-NO"
	when
		StepPerformed(stepId=="P0094/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/1A-NO"));
end
rule "Yes Step Rule for P0094/2A"
	when
		StepPerformed(stepId=="P0094/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/2A"));
end
rule "No Step Rule for P0094/2A"
	when
		StepPerformed(stepId=="P0094/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/3A",$sum.doubleValue() + 100.0,"Answered No to step P0094/2A"));
end
rule "Yes Step Rule for P0094/2A-YES"
	when
		StepPerformed(stepId=="P0094/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/2A-YES"));
end
rule "No Step Rule for P0094/2A-YES"
	when
		StepPerformed(stepId=="P0094/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/2A-YES"));
end
rule "Yes Step Rule for P0094/2A-NO"
	when
		StepPerformed(stepId=="P0094/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/2A-NO"));
end
rule "No Step Rule for P0094/2A-NO"
	when
		StepPerformed(stepId=="P0094/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/2A-NO"));
end
rule "Yes Step Rule for P0094/3A"
	when
		StepPerformed(stepId=="P0094/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/3A"));
end
rule "No Step Rule for P0094/3A"
	when
		StepPerformed(stepId=="P0094/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/4A",$sum.doubleValue() + 100.0,"Answered No to step P0094/3A"));
end
rule "Yes Step Rule for P0094/3A-YES"
	when
		StepPerformed(stepId=="P0094/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/3A-YES"));
end
rule "No Step Rule for P0094/3A-YES"
	when
		StepPerformed(stepId=="P0094/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/3A-YES"));
end
rule "Yes Step Rule for P0094/3A-NO"
	when
		StepPerformed(stepId=="P0094/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/3A-NO"));
end
rule "No Step Rule for P0094/3A-NO"
	when
		StepPerformed(stepId=="P0094/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/3A-NO"));
end
rule "Yes Step Rule for P0094/4A"
	when
		StepPerformed(stepId=="P0094/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/4A"));
end
rule "No Step Rule for P0094/4A"
	when
		StepPerformed(stepId=="P0094/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0094/4A"));
end
rule "Yes Step Rule for P0094/4A-YES"
	when
		StepPerformed(stepId=="P0094/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/4A-YES"));
end
rule "No Step Rule for P0094/4A-YES"
	when
		StepPerformed(stepId=="P0094/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/4A-YES"));
end
rule "Yes Step Rule for P0094/4A-NO"
	when
		StepPerformed(stepId=="P0094/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/4A-NO"));
end
rule "No Step Rule for P0094/4A-NO"
	when
		StepPerformed(stepId=="P0094/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/4A-NO"));
end
rule "Yes Step Rule for P0094/4B"
	when
		StepPerformed(stepId=="P0094/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/4B"));
end
rule "No Step Rule for P0094/4B"
	when
		StepPerformed(stepId=="P0094/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0094/4B"));
end
rule "Yes Step Rule for P0094/4B-YES"
	when
		StepPerformed(stepId=="P0094/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/4B-YES"));
end
rule "No Step Rule for P0094/4B-YES"
	when
		StepPerformed(stepId=="P0094/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/4B-YES"));
end
rule "Yes Step Rule for P0094/4B-NO"
	when
		StepPerformed(stepId=="P0094/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/4B-NO"));
end
rule "No Step Rule for P0094/4B-NO"
	when
		StepPerformed(stepId=="P0094/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/4B-NO"));
end
rule "Yes Step Rule for P0094/5A"
	when
		StepPerformed(stepId=="P0094/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/5A"));
end
rule "No Step Rule for P0094/5A"
	when
		StepPerformed(stepId=="P0094/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0094/5A"));
end
rule "Yes Step Rule for P0094/5A-YES"
	when
		StepPerformed(stepId=="P0094/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/5A-YES"));
end
rule "No Step Rule for P0094/5A-YES"
	when
		StepPerformed(stepId=="P0094/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/5A-YES"));
end
rule "Yes Step Rule for P0094/5A-NO"
	when
		StepPerformed(stepId=="P0094/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0094/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P0094/5A-NO"));
end
rule "No Step Rule for P0094/5A-NO"
	when
		StepPerformed(stepId=="P0094/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0094/5A-NO"));
end
rule "Yes Step Rule for P00B7/1A"
	when
		StepPerformed(stepId=="P00B7/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/1A"));
end
rule "No Step Rule for P00B7/1A"
	when
		StepPerformed(stepId=="P00B7/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/1B",$sum.doubleValue() + 100.0,"Answered No to step P00B7/1A"));
end
rule "Yes Step Rule for P00B7/1A-YES"
	when
		StepPerformed(stepId=="P00B7/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/1A-YES"));
end
rule "No Step Rule for P00B7/1A-YES"
	when
		StepPerformed(stepId=="P00B7/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/1A-YES"));
end
rule "Yes Step Rule for P00B7/1A-NO"
	when
		StepPerformed(stepId=="P00B7/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/1A-NO"));
end
rule "No Step Rule for P00B7/1A-NO"
	when
		StepPerformed(stepId=="P00B7/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/1A-NO"));
end
rule "Yes Step Rule for P00B7/1B"
	when
		StepPerformed(stepId=="P00B7/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/1B"));
end
rule "No Step Rule for P00B7/1B"
	when
		StepPerformed(stepId=="P00B7/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/2A",$sum.doubleValue() + 100.0,"Answered No to step P00B7/1B"));
end
rule "Yes Step Rule for P00B7/1B-YES"
	when
		StepPerformed(stepId=="P00B7/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/1B-YES"));
end
rule "No Step Rule for P00B7/1B-YES"
	when
		StepPerformed(stepId=="P00B7/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/1B-YES"));
end
rule "Yes Step Rule for P00B7/1B-NO"
	when
		StepPerformed(stepId=="P00B7/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/1B-NO"));
end
rule "No Step Rule for P00B7/1B-NO"
	when
		StepPerformed(stepId=="P00B7/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/1B-NO"));
end
rule "Yes Step Rule for P00B7/2A"
	when
		StepPerformed(stepId=="P00B7/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/2A"));
end
rule "No Step Rule for P00B7/2A"
	when
		StepPerformed(stepId=="P00B7/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/3A",$sum.doubleValue() + 100.0,"Answered No to step P00B7/2A"));
end
rule "Yes Step Rule for P00B7/2A-YES"
	when
		StepPerformed(stepId=="P00B7/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/2A-YES"));
end
rule "No Step Rule for P00B7/2A-YES"
	when
		StepPerformed(stepId=="P00B7/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/2A-YES"));
end
rule "Yes Step Rule for P00B7/2A-NO"
	when
		StepPerformed(stepId=="P00B7/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/2A-NO"));
end
rule "No Step Rule for P00B7/2A-NO"
	when
		StepPerformed(stepId=="P00B7/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/2A-NO"));
end
rule "Yes Step Rule for P00B7/3A"
	when
		StepPerformed(stepId=="P00B7/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/3A"));
end
rule "No Step Rule for P00B7/3A"
	when
		StepPerformed(stepId=="P00B7/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P00B7/3A"));
end
rule "Yes Step Rule for P00B7/3A-YES"
	when
		StepPerformed(stepId=="P00B7/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/3A-YES"));
end
rule "No Step Rule for P00B7/3A-YES"
	when
		StepPerformed(stepId=="P00B7/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/3A-YES"));
end
rule "Yes Step Rule for P00B7/3A-NO"
	when
		StepPerformed(stepId=="P00B7/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/3A-NO"));
end
rule "No Step Rule for P00B7/3A-NO"
	when
		StepPerformed(stepId=="P00B7/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/3A-NO"));
end
rule "Yes Step Rule for P00B7/3B"
	when
		StepPerformed(stepId=="P00B7/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/3B"));
end
rule "No Step Rule for P00B7/3B"
	when
		StepPerformed(stepId=="P00B7/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P00B7/3B"));
end
rule "Yes Step Rule for P00B7/3B-YES"
	when
		StepPerformed(stepId=="P00B7/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/3B-YES"));
end
rule "No Step Rule for P00B7/3B-YES"
	when
		StepPerformed(stepId=="P00B7/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/3B-YES"));
end
rule "Yes Step Rule for P00B7/3B-NO"
	when
		StepPerformed(stepId=="P00B7/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/3B-NO"));
end
rule "No Step Rule for P00B7/3B-NO"
	when
		StepPerformed(stepId=="P00B7/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/3B-NO"));
end
rule "Yes Step Rule for P00B7/3C"
	when
		StepPerformed(stepId=="P00B7/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/3C"));
end
rule "No Step Rule for P00B7/3C"
	when
		StepPerformed(stepId=="P00B7/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/4A",$sum.doubleValue() + 100.0,"Answered No to step P00B7/3C"));
end
rule "Yes Step Rule for P00B7/3C-YES"
	when
		StepPerformed(stepId=="P00B7/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/3C-YES"));
end
rule "No Step Rule for P00B7/3C-YES"
	when
		StepPerformed(stepId=="P00B7/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/3C-YES"));
end
rule "Yes Step Rule for P00B7/3C-NO"
	when
		StepPerformed(stepId=="P00B7/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/3C-NO"));
end
rule "No Step Rule for P00B7/3C-NO"
	when
		StepPerformed(stepId=="P00B7/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/3C-NO"));
end
rule "Yes Step Rule for P00B7/4A"
	when
		StepPerformed(stepId=="P00B7/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/4A"));
end
rule "No Step Rule for P00B7/4A"
	when
		StepPerformed(stepId=="P00B7/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P00B7/4A"));
end
rule "Yes Step Rule for P00B7/4A-YES"
	when
		StepPerformed(stepId=="P00B7/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/4A-YES"));
end
rule "No Step Rule for P00B7/4A-YES"
	when
		StepPerformed(stepId=="P00B7/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/4A-YES"));
end
rule "Yes Step Rule for P00B7/4A-NO"
	when
		StepPerformed(stepId=="P00B7/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/4A-NO"));
end
rule "No Step Rule for P00B7/4A-NO"
	when
		StepPerformed(stepId=="P00B7/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/4A-NO"));
end
rule "Yes Step Rule for P00B7/5A"
	when
		StepPerformed(stepId=="P00B7/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/5A"));
end
rule "No Step Rule for P00B7/5A"
	when
		StepPerformed(stepId=="P00B7/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P00B7/5A"));
end
rule "Yes Step Rule for P00B7/5A-YES"
	when
		StepPerformed(stepId=="P00B7/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/5A-YES"));
end
rule "No Step Rule for P00B7/5A-YES"
	when
		StepPerformed(stepId=="P00B7/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/5A-YES"));
end
rule "Yes Step Rule for P00B7/5A-NO"
	when
		StepPerformed(stepId=="P00B7/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00B7/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P00B7/5A-NO"));
end
rule "No Step Rule for P00B7/5A-NO"
	when
		StepPerformed(stepId=="P00B7/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00B7/5A-NO"));
end
rule "Yes Step Rule for P00BA/1A"
	when
		StepPerformed(stepId=="P00BA/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/1A"));
end
rule "No Step Rule for P00BA/1A"
	when
		StepPerformed(stepId=="P00BA/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/3A",$sum.doubleValue() + 100.0,"Answered No to step P00BA/1A"));
end
rule "Yes Step Rule for P00BA/1A-YES"
	when
		StepPerformed(stepId=="P00BA/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/1A-YES"));
end
rule "No Step Rule for P00BA/1A-YES"
	when
		StepPerformed(stepId=="P00BA/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/1A-YES"));
end
rule "Yes Step Rule for P00BA/1A-NO"
	when
		StepPerformed(stepId=="P00BA/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/1A-NO"));
end
rule "No Step Rule for P00BA/1A-NO"
	when
		StepPerformed(stepId=="P00BA/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/1A-NO"));
end
rule "Yes Step Rule for P00BA/2A"
	when
		StepPerformed(stepId=="P00BA/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/2A"));
end
rule "No Step Rule for P00BA/2A"
	when
		StepPerformed(stepId=="P00BA/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/3A",$sum.doubleValue() + 100.0,"Answered No to step P00BA/2A"));
end
rule "Yes Step Rule for P00BA/2A-YES"
	when
		StepPerformed(stepId=="P00BA/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/2A-YES"));
end
rule "No Step Rule for P00BA/2A-YES"
	when
		StepPerformed(stepId=="P00BA/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/2A-YES"));
end
rule "Yes Step Rule for P00BA/2A-NO"
	when
		StepPerformed(stepId=="P00BA/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/2A-NO"));
end
rule "No Step Rule for P00BA/2A-NO"
	when
		StepPerformed(stepId=="P00BA/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/2A-NO"));
end
rule "Yes Step Rule for P00BA/3A"
	when
		StepPerformed(stepId=="P00BA/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/3A"));
end
rule "No Step Rule for P00BA/3A"
	when
		StepPerformed(stepId=="P00BA/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P00BA/3A"));
end
rule "Yes Step Rule for P00BA/3A-YES"
	when
		StepPerformed(stepId=="P00BA/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/3A-YES"));
end
rule "No Step Rule for P00BA/3A-YES"
	when
		StepPerformed(stepId=="P00BA/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/3A-YES"));
end
rule "Yes Step Rule for P00BA/3A-NO"
	when
		StepPerformed(stepId=="P00BA/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/3A-NO"));
end
rule "No Step Rule for P00BA/3A-NO"
	when
		StepPerformed(stepId=="P00BA/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/3A-NO"));
end
rule "Yes Step Rule for P00BA/4A"
	when
		StepPerformed(stepId=="P00BA/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4A"));
end
rule "No Step Rule for P00BA/4A"
	when
		StepPerformed(stepId=="P00BA/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4C",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4A"));
end
rule "Yes Step Rule for P00BA/4A-YES"
	when
		StepPerformed(stepId=="P00BA/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4A-YES"));
end
rule "No Step Rule for P00BA/4A-YES"
	when
		StepPerformed(stepId=="P00BA/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4A-YES"));
end
rule "Yes Step Rule for P00BA/4A-NO"
	when
		StepPerformed(stepId=="P00BA/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4C",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4A-NO"));
end
rule "No Step Rule for P00BA/4A-NO"
	when
		StepPerformed(stepId=="P00BA/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4A-NO"));
end
rule "Yes Step Rule for P00BA/4B"
	when
		StepPerformed(stepId=="P00BA/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4B"));
end
rule "No Step Rule for P00BA/4B"
	when
		StepPerformed(stepId=="P00BA/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4B"));
end
rule "Yes Step Rule for P00BA/4B-YES"
	when
		StepPerformed(stepId=="P00BA/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4E",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4B-YES"));
end
rule "No Step Rule for P00BA/4B-YES"
	when
		StepPerformed(stepId=="P00BA/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4B-YES"));
end
rule "Yes Step Rule for P00BA/4B-NO"
	when
		StepPerformed(stepId=="P00BA/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4B-NO"));
end
rule "No Step Rule for P00BA/4B-NO"
	when
		StepPerformed(stepId=="P00BA/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4B-NO"));
end
rule "Yes Step Rule for P00BA/4C"
	when
		StepPerformed(stepId=="P00BA/4C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4C"));
end
rule "No Step Rule for P00BA/4C"
	when
		StepPerformed(stepId=="P00BA/4C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4D",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4C"));
end
rule "Yes Step Rule for P00BA/4C-YES"
	when
		StepPerformed(stepId=="P00BA/4C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4C-YES"));
end
rule "No Step Rule for P00BA/4C-YES"
	when
		StepPerformed(stepId=="P00BA/4C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4C-YES"));
end
rule "Yes Step Rule for P00BA/4C-NO"
	when
		StepPerformed(stepId=="P00BA/4C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4D",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4C-NO"));
end
rule "No Step Rule for P00BA/4C-NO"
	when
		StepPerformed(stepId=="P00BA/4C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4C-NO"));
end
rule "Yes Step Rule for P00BA/4D"
	when
		StepPerformed(stepId=="P00BA/4D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4E",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4D"));
end
rule "No Step Rule for P00BA/4D"
	when
		StepPerformed(stepId=="P00BA/4D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4F",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4D"));
end
rule "Yes Step Rule for P00BA/4D-YES"
	when
		StepPerformed(stepId=="P00BA/4D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4E",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4D-YES"));
end
rule "No Step Rule for P00BA/4D-YES"
	when
		StepPerformed(stepId=="P00BA/4D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4D-YES"));
end
rule "Yes Step Rule for P00BA/4D-NO"
	when
		StepPerformed(stepId=="P00BA/4D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4F",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4D-NO"));
end
rule "No Step Rule for P00BA/4D-NO"
	when
		StepPerformed(stepId=="P00BA/4D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4D-NO"));
end
rule "Yes Step Rule for P00BA/4E"
	when
		StepPerformed(stepId=="P00BA/4E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4E"));
end
rule "No Step Rule for P00BA/4E"
	when
		StepPerformed(stepId=="P00BA/4E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4E-NO",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4E"));
end
rule "Yes Step Rule for P00BA/4E-YES"
	when
		StepPerformed(stepId=="P00BA/4E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4E-YES"));
end
rule "No Step Rule for P00BA/4E-YES"
	when
		StepPerformed(stepId=="P00BA/4E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4E-YES"));
end
rule "Yes Step Rule for P00BA/4E-NO"
	when
		StepPerformed(stepId=="P00BA/4E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4E-NO"));
end
rule "No Step Rule for P00BA/4E-NO"
	when
		StepPerformed(stepId=="P00BA/4E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4E-NO"));
end
rule "Yes Step Rule for P00BA/4F"
	when
		StepPerformed(stepId=="P00BA/4F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4F"));
end
rule "No Step Rule for P00BA/4F"
	when
		StepPerformed(stepId=="P00BA/4F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4G",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4F"));
end
rule "Yes Step Rule for P00BA/4F-YES"
	when
		StepPerformed(stepId=="P00BA/4F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4F-YES"));
end
rule "No Step Rule for P00BA/4F-YES"
	when
		StepPerformed(stepId=="P00BA/4F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4F-YES"));
end
rule "Yes Step Rule for P00BA/4F-NO"
	when
		StepPerformed(stepId=="P00BA/4F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4G",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4F-NO"));
end
rule "No Step Rule for P00BA/4F-NO"
	when
		StepPerformed(stepId=="P00BA/4F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4F-NO"));
end
rule "Yes Step Rule for P00BA/4G"
	when
		StepPerformed(stepId=="P00BA/4G", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4G-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4G"));
end
rule "No Step Rule for P00BA/4G"
	when
		StepPerformed(stepId=="P00BA/4G", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/4G-NO",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4G"));
end
rule "Yes Step Rule for P00BA/4G-YES"
	when
		StepPerformed(stepId=="P00BA/4G-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4G-YES"));
end
rule "No Step Rule for P00BA/4G-YES"
	when
		StepPerformed(stepId=="P00BA/4G-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4G-YES"));
end
rule "Yes Step Rule for P00BA/4G-NO"
	when
		StepPerformed(stepId=="P00BA/4G-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/4G-NO"));
end
rule "No Step Rule for P00BA/4G-NO"
	when
		StepPerformed(stepId=="P00BA/4G-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/4G-NO"));
end
rule "Yes Step Rule for P00BA/5A"
	when
		StepPerformed(stepId=="P00BA/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/5A"));
end
rule "No Step Rule for P00BA/5A"
	when
		StepPerformed(stepId=="P00BA/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/6A",$sum.doubleValue() + 100.0,"Answered No to step P00BA/5A"));
end
rule "Yes Step Rule for P00BA/5A-YES"
	when
		StepPerformed(stepId=="P00BA/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/5A-YES"));
end
rule "No Step Rule for P00BA/5A-YES"
	when
		StepPerformed(stepId=="P00BA/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/5A-YES"));
end
rule "Yes Step Rule for P00BA/5A-NO"
	when
		StepPerformed(stepId=="P00BA/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/5A-NO"));
end
rule "No Step Rule for P00BA/5A-NO"
	when
		StepPerformed(stepId=="P00BA/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/5A-NO"));
end
rule "Yes Step Rule for P00BA/6A"
	when
		StepPerformed(stepId=="P00BA/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/6A"));
end
rule "No Step Rule for P00BA/6A"
	when
		StepPerformed(stepId=="P00BA/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P00BA/6A"));
end
rule "Yes Step Rule for P00BA/6A-YES"
	when
		StepPerformed(stepId=="P00BA/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/6A-YES"));
end
rule "No Step Rule for P00BA/6A-YES"
	when
		StepPerformed(stepId=="P00BA/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/6A-YES"));
end
rule "Yes Step Rule for P00BA/6A-NO"
	when
		StepPerformed(stepId=="P00BA/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/6A-NO"));
end
rule "No Step Rule for P00BA/6A-NO"
	when
		StepPerformed(stepId=="P00BA/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/6A-NO"));
end
rule "Yes Step Rule for P00BA/6B"
	when
		StepPerformed(stepId=="P00BA/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/6B"));
end
rule "No Step Rule for P00BA/6B"
	when
		StepPerformed(stepId=="P00BA/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/6B-NO",$sum.doubleValue() + 100.0,"Answered No to step P00BA/6B"));
end
rule "Yes Step Rule for P00BA/6B-YES"
	when
		StepPerformed(stepId=="P00BA/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/6B-YES"));
end
rule "No Step Rule for P00BA/6B-YES"
	when
		StepPerformed(stepId=="P00BA/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/6B-YES"));
end
rule "Yes Step Rule for P00BA/6B-NO"
	when
		StepPerformed(stepId=="P00BA/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/6B-NO"));
end
rule "No Step Rule for P00BA/6B-NO"
	when
		StepPerformed(stepId=="P00BA/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/6B-NO"));
end
rule "Yes Step Rule for P00BA/7A"
	when
		StepPerformed(stepId=="P00BA/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/7A"));
end
rule "No Step Rule for P00BA/7A"
	when
		StepPerformed(stepId=="P00BA/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step P00BA/7A"));
end
rule "Yes Step Rule for P00BA/7A-YES"
	when
		StepPerformed(stepId=="P00BA/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/7A-YES"));
end
rule "No Step Rule for P00BA/7A-YES"
	when
		StepPerformed(stepId=="P00BA/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/7A-YES"));
end
rule "Yes Step Rule for P00BA/7A-NO"
	when
		StepPerformed(stepId=="P00BA/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P00BA/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P00BA/7A-NO"));
end
rule "No Step Rule for P00BA/7A-NO"
	when
		StepPerformed(stepId=="P00BA/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P00BA/7A-NO"));
end
rule "Yes Step Rule for P011A/1A"
	when
		StepPerformed(stepId=="P011A/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/1A"));
end
rule "No Step Rule for P011A/1A"
	when
		StepPerformed(stepId=="P011A/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/2B",$sum.doubleValue() + 100.0,"Answered No to step P011A/1A"));
end
rule "Yes Step Rule for P011A/1A-YES"
	when
		StepPerformed(stepId=="P011A/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/1A-YES"));
end
rule "No Step Rule for P011A/1A-YES"
	when
		StepPerformed(stepId=="P011A/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/1A-YES"));
end
rule "Yes Step Rule for P011A/1A-NO"
	when
		StepPerformed(stepId=="P011A/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/1A-NO"));
end
rule "No Step Rule for P011A/1A-NO"
	when
		StepPerformed(stepId=="P011A/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/1A-NO"));
end
rule "Yes Step Rule for P011A/2A"
	when
		StepPerformed(stepId=="P011A/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/2A"));
end
rule "No Step Rule for P011A/2A"
	when
		StepPerformed(stepId=="P011A/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/2B",$sum.doubleValue() + 100.0,"Answered No to step P011A/2A"));
end
rule "Yes Step Rule for P011A/2A-YES"
	when
		StepPerformed(stepId=="P011A/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/2A-YES"));
end
rule "No Step Rule for P011A/2A-YES"
	when
		StepPerformed(stepId=="P011A/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/2A-YES"));
end
rule "Yes Step Rule for P011A/2A-NO"
	when
		StepPerformed(stepId=="P011A/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/2A-NO"));
end
rule "No Step Rule for P011A/2A-NO"
	when
		StepPerformed(stepId=="P011A/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/2A-NO"));
end
rule "Yes Step Rule for P011A/2B"
	when
		StepPerformed(stepId=="P011A/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/2B"));
end
rule "No Step Rule for P011A/2B"
	when
		StepPerformed(stepId=="P011A/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P011A/2B"));
end
rule "Yes Step Rule for P011A/2B-YES"
	when
		StepPerformed(stepId=="P011A/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/2B-YES"));
end
rule "No Step Rule for P011A/2B-YES"
	when
		StepPerformed(stepId=="P011A/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/2B-YES"));
end
rule "Yes Step Rule for P011A/2B-NO"
	when
		StepPerformed(stepId=="P011A/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/2B-NO"));
end
rule "No Step Rule for P011A/2B-NO"
	when
		StepPerformed(stepId=="P011A/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/2B-NO"));
end
rule "Yes Step Rule for P011A/3A"
	when
		StepPerformed(stepId=="P011A/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/3A"));
end
rule "No Step Rule for P011A/3A"
	when
		StepPerformed(stepId=="P011A/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/3B",$sum.doubleValue() + 100.0,"Answered No to step P011A/3A"));
end
rule "Yes Step Rule for P011A/3A-YES"
	when
		StepPerformed(stepId=="P011A/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/3A-YES"));
end
rule "No Step Rule for P011A/3A-YES"
	when
		StepPerformed(stepId=="P011A/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/3A-YES"));
end
rule "Yes Step Rule for P011A/3A-NO"
	when
		StepPerformed(stepId=="P011A/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/3A-NO"));
end
rule "No Step Rule for P011A/3A-NO"
	when
		StepPerformed(stepId=="P011A/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/3A-NO"));
end
rule "Yes Step Rule for P011A/3B"
	when
		StepPerformed(stepId=="P011A/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/3B"));
end
rule "No Step Rule for P011A/3B"
	when
		StepPerformed(stepId=="P011A/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/3C",$sum.doubleValue() + 100.0,"Answered No to step P011A/3B"));
end
rule "Yes Step Rule for P011A/3B-YES"
	when
		StepPerformed(stepId=="P011A/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/3B-YES"));
end
rule "No Step Rule for P011A/3B-YES"
	when
		StepPerformed(stepId=="P011A/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/3B-YES"));
end
rule "Yes Step Rule for P011A/3B-NO"
	when
		StepPerformed(stepId=="P011A/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/3B-NO"));
end
rule "No Step Rule for P011A/3B-NO"
	when
		StepPerformed(stepId=="P011A/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/3B-NO"));
end
rule "Yes Step Rule for P011A/3C"
	when
		StepPerformed(stepId=="P011A/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/3C"));
end
rule "No Step Rule for P011A/3C"
	when
		StepPerformed(stepId=="P011A/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/3C-NO",$sum.doubleValue() + 100.0,"Answered No to step P011A/3C"));
end
rule "Yes Step Rule for P011A/3C-YES"
	when
		StepPerformed(stepId=="P011A/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/3C-YES"));
end
rule "No Step Rule for P011A/3C-YES"
	when
		StepPerformed(stepId=="P011A/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/3C-YES"));
end
rule "Yes Step Rule for P011A/3C-NO"
	when
		StepPerformed(stepId=="P011A/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/3C-NO"));
end
rule "No Step Rule for P011A/3C-NO"
	when
		StepPerformed(stepId=="P011A/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/3C-NO"));
end
rule "Yes Step Rule for P011A/4A"
	when
		StepPerformed(stepId=="P011A/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/4A"));
end
rule "No Step Rule for P011A/4A"
	when
		StepPerformed(stepId=="P011A/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/4B",$sum.doubleValue() + 100.0,"Answered No to step P011A/4A"));
end
rule "Yes Step Rule for P011A/4A-YES"
	when
		StepPerformed(stepId=="P011A/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/4A-YES"));
end
rule "No Step Rule for P011A/4A-YES"
	when
		StepPerformed(stepId=="P011A/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/4A-YES"));
end
rule "Yes Step Rule for P011A/4A-NO"
	when
		StepPerformed(stepId=="P011A/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/4A-NO"));
end
rule "No Step Rule for P011A/4A-NO"
	when
		StepPerformed(stepId=="P011A/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/4A-NO"));
end
rule "Yes Step Rule for P011A/4B"
	when
		StepPerformed(stepId=="P011A/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/4B"));
end
rule "No Step Rule for P011A/4B"
	when
		StepPerformed(stepId=="P011A/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P011A/4B"));
end
rule "Yes Step Rule for P011A/4B-YES"
	when
		StepPerformed(stepId=="P011A/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/4B-YES"));
end
rule "No Step Rule for P011A/4B-YES"
	when
		StepPerformed(stepId=="P011A/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/4B-YES"));
end
rule "Yes Step Rule for P011A/4B-NO"
	when
		StepPerformed(stepId=="P011A/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/4B-NO"));
end
rule "No Step Rule for P011A/4B-NO"
	when
		StepPerformed(stepId=="P011A/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/4B-NO"));
end
rule "Yes Step Rule for P011A/5A"
	when
		StepPerformed(stepId=="P011A/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/5A"));
end
rule "No Step Rule for P011A/5A"
	when
		StepPerformed(stepId=="P011A/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P011A/5A"));
end
rule "Yes Step Rule for P011A/5A-YES"
	when
		StepPerformed(stepId=="P011A/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/5A-YES"));
end
rule "No Step Rule for P011A/5A-YES"
	when
		StepPerformed(stepId=="P011A/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/5A-YES"));
end
rule "Yes Step Rule for P011A/5A-NO"
	when
		StepPerformed(stepId=="P011A/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P011A/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P011A/5A-NO"));
end
rule "No Step Rule for P011A/5A-NO"
	when
		StepPerformed(stepId=="P011A/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P011A/5A-NO"));
end
rule "Yes Step Rule for P0197/1A"
	when
		StepPerformed(stepId=="P0197/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1A"));
end
rule "No Step Rule for P0197/1A"
	when
		StepPerformed(stepId=="P0197/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1B",$sum.doubleValue() + 100.0,"Answered No to step P0197/1A"));
end
rule "Yes Step Rule for P0197/1A-YES"
	when
		StepPerformed(stepId=="P0197/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1A-YES"));
end
rule "No Step Rule for P0197/1A-YES"
	when
		StepPerformed(stepId=="P0197/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/1A-YES"));
end
rule "Yes Step Rule for P0197/1A-NO"
	when
		StepPerformed(stepId=="P0197/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1A-NO"));
end
rule "No Step Rule for P0197/1A-NO"
	when
		StepPerformed(stepId=="P0197/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/1A-NO"));
end
rule "Yes Step Rule for P0197/1B"
	when
		StepPerformed(stepId=="P0197/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1B"));
end
rule "No Step Rule for P0197/1B"
	when
		StepPerformed(stepId=="P0197/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0197/1B"));
end
rule "Yes Step Rule for P0197/1B-YES"
	when
		StepPerformed(stepId=="P0197/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1B-YES"));
end
rule "No Step Rule for P0197/1B-YES"
	when
		StepPerformed(stepId=="P0197/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/1B-YES"));
end
rule "Yes Step Rule for P0197/1B-NO"
	when
		StepPerformed(stepId=="P0197/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1B-NO"));
end
rule "No Step Rule for P0197/1B-NO"
	when
		StepPerformed(stepId=="P0197/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/1B-NO"));
end
rule "Yes Step Rule for P0197/1C"
	when
		StepPerformed(stepId=="P0197/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1C"));
end
rule "No Step Rule for P0197/1C"
	when
		StepPerformed(stepId=="P0197/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/2A",$sum.doubleValue() + 100.0,"Answered No to step P0197/1C"));
end
rule "Yes Step Rule for P0197/1C-YES"
	when
		StepPerformed(stepId=="P0197/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1D",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1C-YES"));
end
rule "No Step Rule for P0197/1C-YES"
	when
		StepPerformed(stepId=="P0197/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/1C-YES"));
end
rule "Yes Step Rule for P0197/1C-NO"
	when
		StepPerformed(stepId=="P0197/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1C-NO"));
end
rule "No Step Rule for P0197/1C-NO"
	when
		StepPerformed(stepId=="P0197/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/1C-NO"));
end
rule "Yes Step Rule for P0197/1D"
	when
		StepPerformed(stepId=="P0197/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1D"));
end
rule "No Step Rule for P0197/1D"
	when
		StepPerformed(stepId=="P0197/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/1D-NO",$sum.doubleValue() + 100.0,"Answered No to step P0197/1D"));
end
rule "Yes Step Rule for P0197/1D-YES"
	when
		StepPerformed(stepId=="P0197/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1D-YES"));
end
rule "No Step Rule for P0197/1D-YES"
	when
		StepPerformed(stepId=="P0197/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/1D-YES"));
end
rule "Yes Step Rule for P0197/1D-NO"
	when
		StepPerformed(stepId=="P0197/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/1D-NO"));
end
rule "No Step Rule for P0197/1D-NO"
	when
		StepPerformed(stepId=="P0197/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/1D-NO"));
end
rule "Yes Step Rule for P0197/2A"
	when
		StepPerformed(stepId=="P0197/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/2A"));
end
rule "No Step Rule for P0197/2A"
	when
		StepPerformed(stepId=="P0197/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/2B",$sum.doubleValue() + 100.0,"Answered No to step P0197/2A"));
end
rule "Yes Step Rule for P0197/2A-YES"
	when
		StepPerformed(stepId=="P0197/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/2A-YES"));
end
rule "No Step Rule for P0197/2A-YES"
	when
		StepPerformed(stepId=="P0197/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/2A-YES"));
end
rule "Yes Step Rule for P0197/2A-NO"
	when
		StepPerformed(stepId=="P0197/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/2A-NO"));
end
rule "No Step Rule for P0197/2A-NO"
	when
		StepPerformed(stepId=="P0197/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/2A-NO"));
end
rule "Yes Step Rule for P0197/2B"
	when
		StepPerformed(stepId=="P0197/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/2B"));
end
rule "No Step Rule for P0197/2B"
	when
		StepPerformed(stepId=="P0197/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0197/2B"));
end
rule "Yes Step Rule for P0197/2B-YES"
	when
		StepPerformed(stepId=="P0197/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/2B-YES"));
end
rule "No Step Rule for P0197/2B-YES"
	when
		StepPerformed(stepId=="P0197/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/2B-YES"));
end
rule "Yes Step Rule for P0197/2B-NO"
	when
		StepPerformed(stepId=="P0197/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/2B-NO"));
end
rule "No Step Rule for P0197/2B-NO"
	when
		StepPerformed(stepId=="P0197/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/2B-NO"));
end
rule "Yes Step Rule for P0197/3A"
	when
		StepPerformed(stepId=="P0197/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/3A"));
end
rule "No Step Rule for P0197/3A"
	when
		StepPerformed(stepId=="P0197/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0197/3A"));
end
rule "Yes Step Rule for P0197/3A-YES"
	when
		StepPerformed(stepId=="P0197/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/3A-YES"));
end
rule "No Step Rule for P0197/3A-YES"
	when
		StepPerformed(stepId=="P0197/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/3A-YES"));
end
rule "Yes Step Rule for P0197/3A-NO"
	when
		StepPerformed(stepId=="P0197/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/3A-NO"));
end
rule "No Step Rule for P0197/3A-NO"
	when
		StepPerformed(stepId=="P0197/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/3A-NO"));
end
rule "Yes Step Rule for P0197/3B"
	when
		StepPerformed(stepId=="P0197/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/3B"));
end
rule "No Step Rule for P0197/3B"
	when
		StepPerformed(stepId=="P0197/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0197/3B"));
end
rule "Yes Step Rule for P0197/3B-YES"
	when
		StepPerformed(stepId=="P0197/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/3B-YES"));
end
rule "No Step Rule for P0197/3B-YES"
	when
		StepPerformed(stepId=="P0197/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/3B-YES"));
end
rule "Yes Step Rule for P0197/3B-NO"
	when
		StepPerformed(stepId=="P0197/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0197/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0197/3B-NO"));
end
rule "No Step Rule for P0197/3B-NO"
	when
		StepPerformed(stepId=="P0197/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0197/3B-NO"));
end
rule "Yes Step Rule for P0198/1A"
	when
		StepPerformed(stepId=="P0198/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1A"));
end
rule "No Step Rule for P0198/1A"
	when
		StepPerformed(stepId=="P0198/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1B",$sum.doubleValue() + 100.0,"Answered No to step P0198/1A"));
end
rule "Yes Step Rule for P0198/1A-YES"
	when
		StepPerformed(stepId=="P0198/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1A-YES"));
end
rule "No Step Rule for P0198/1A-YES"
	when
		StepPerformed(stepId=="P0198/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/1A-YES"));
end
rule "Yes Step Rule for P0198/1A-NO"
	when
		StepPerformed(stepId=="P0198/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1A-NO"));
end
rule "No Step Rule for P0198/1A-NO"
	when
		StepPerformed(stepId=="P0198/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/1A-NO"));
end
rule "Yes Step Rule for P0198/1B"
	when
		StepPerformed(stepId=="P0198/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1B"));
end
rule "No Step Rule for P0198/1B"
	when
		StepPerformed(stepId=="P0198/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0198/1B"));
end
rule "Yes Step Rule for P0198/1B-YES"
	when
		StepPerformed(stepId=="P0198/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1B-YES"));
end
rule "No Step Rule for P0198/1B-YES"
	when
		StepPerformed(stepId=="P0198/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/1B-YES"));
end
rule "Yes Step Rule for P0198/1B-NO"
	when
		StepPerformed(stepId=="P0198/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1B-NO"));
end
rule "No Step Rule for P0198/1B-NO"
	when
		StepPerformed(stepId=="P0198/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/1B-NO"));
end
rule "Yes Step Rule for P0198/1C"
	when
		StepPerformed(stepId=="P0198/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1C"));
end
rule "No Step Rule for P0198/1C"
	when
		StepPerformed(stepId=="P0198/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2A",$sum.doubleValue() + 100.0,"Answered No to step P0198/1C"));
end
rule "Yes Step Rule for P0198/1C-YES"
	when
		StepPerformed(stepId=="P0198/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1D",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1C-YES"));
end
rule "No Step Rule for P0198/1C-YES"
	when
		StepPerformed(stepId=="P0198/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/1C-YES"));
end
rule "Yes Step Rule for P0198/1C-NO"
	when
		StepPerformed(stepId=="P0198/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1C-NO"));
end
rule "No Step Rule for P0198/1C-NO"
	when
		StepPerformed(stepId=="P0198/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/1C-NO"));
end
rule "Yes Step Rule for P0198/1D"
	when
		StepPerformed(stepId=="P0198/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1D"));
end
rule "No Step Rule for P0198/1D"
	when
		StepPerformed(stepId=="P0198/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/1D-NO",$sum.doubleValue() + 100.0,"Answered No to step P0198/1D"));
end
rule "Yes Step Rule for P0198/1D-YES"
	when
		StepPerformed(stepId=="P0198/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1D-YES"));
end
rule "No Step Rule for P0198/1D-YES"
	when
		StepPerformed(stepId=="P0198/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/1D-YES"));
end
rule "Yes Step Rule for P0198/1D-NO"
	when
		StepPerformed(stepId=="P0198/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/1D-NO"));
end
rule "No Step Rule for P0198/1D-NO"
	when
		StepPerformed(stepId=="P0198/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/1D-NO"));
end
rule "Yes Step Rule for P0198/2A"
	when
		StepPerformed(stepId=="P0198/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/2A"));
end
rule "No Step Rule for P0198/2A"
	when
		StepPerformed(stepId=="P0198/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2B",$sum.doubleValue() + 100.0,"Answered No to step P0198/2A"));
end
rule "Yes Step Rule for P0198/2A-YES"
	when
		StepPerformed(stepId=="P0198/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/2A-YES"));
end
rule "No Step Rule for P0198/2A-YES"
	when
		StepPerformed(stepId=="P0198/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/2A-YES"));
end
rule "Yes Step Rule for P0198/2A-NO"
	when
		StepPerformed(stepId=="P0198/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/2A-NO"));
end
rule "No Step Rule for P0198/2A-NO"
	when
		StepPerformed(stepId=="P0198/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/2A-NO"));
end
rule "Yes Step Rule for P0198/2B"
	when
		StepPerformed(stepId=="P0198/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/2B"));
end
rule "No Step Rule for P0198/2B"
	when
		StepPerformed(stepId=="P0198/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0198/2B"));
end
rule "Yes Step Rule for P0198/2B-YES"
	when
		StepPerformed(stepId=="P0198/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/2B-YES"));
end
rule "No Step Rule for P0198/2B-YES"
	when
		StepPerformed(stepId=="P0198/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/2B-YES"));
end
rule "Yes Step Rule for P0198/2B-NO"
	when
		StepPerformed(stepId=="P0198/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/2B-NO"));
end
rule "No Step Rule for P0198/2B-NO"
	when
		StepPerformed(stepId=="P0198/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/2B-NO"));
end
rule "Yes Step Rule for P0198/2C"
	when
		StepPerformed(stepId=="P0198/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/2C"));
end
rule "No Step Rule for P0198/2C"
	when
		StepPerformed(stepId=="P0198/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P0198/2C"));
end
rule "Yes Step Rule for P0198/2C-YES"
	when
		StepPerformed(stepId=="P0198/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/2C-YES"));
end
rule "No Step Rule for P0198/2C-YES"
	when
		StepPerformed(stepId=="P0198/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/2C-YES"));
end
rule "Yes Step Rule for P0198/2C-NO"
	when
		StepPerformed(stepId=="P0198/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/2C-NO"));
end
rule "No Step Rule for P0198/2C-NO"
	when
		StepPerformed(stepId=="P0198/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/2C-NO"));
end
rule "Yes Step Rule for P0198/3A"
	when
		StepPerformed(stepId=="P0198/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/3A"));
end
rule "No Step Rule for P0198/3A"
	when
		StepPerformed(stepId=="P0198/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0198/3A"));
end
rule "Yes Step Rule for P0198/3A-YES"
	when
		StepPerformed(stepId=="P0198/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/3A-YES"));
end
rule "No Step Rule for P0198/3A-YES"
	when
		StepPerformed(stepId=="P0198/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/3A-YES"));
end
rule "Yes Step Rule for P0198/3A-NO"
	when
		StepPerformed(stepId=="P0198/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/3A-NO"));
end
rule "No Step Rule for P0198/3A-NO"
	when
		StepPerformed(stepId=="P0198/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/3A-NO"));
end
rule "Yes Step Rule for P0198/3B"
	when
		StepPerformed(stepId=="P0198/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/3B"));
end
rule "No Step Rule for P0198/3B"
	when
		StepPerformed(stepId=="P0198/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0198/3B"));
end
rule "Yes Step Rule for P0198/3B-YES"
	when
		StepPerformed(stepId=="P0198/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/3B-YES"));
end
rule "No Step Rule for P0198/3B-YES"
	when
		StepPerformed(stepId=="P0198/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/3B-YES"));
end
rule "Yes Step Rule for P0198/3B-NO"
	when
		StepPerformed(stepId=="P0198/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0198/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0198/3B-NO"));
end
rule "No Step Rule for P0198/3B-NO"
	when
		StepPerformed(stepId=="P0198/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0198/3B-NO"));
end
rule "Yes Step Rule for P0513/1A"
	when
		StepPerformed(stepId=="P0513/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/1A"));
end
rule "No Step Rule for P0513/1A"
	when
		StepPerformed(stepId=="P0513/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/2A",$sum.doubleValue() + 100.0,"Answered No to step P0513/1A"));
end
rule "Yes Step Rule for P0513/1A-YES"
	when
		StepPerformed(stepId=="P0513/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/1A-YES"));
end
rule "No Step Rule for P0513/1A-YES"
	when
		StepPerformed(stepId=="P0513/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0513/1A-YES"));
end
rule "Yes Step Rule for P0513/1A-NO"
	when
		StepPerformed(stepId=="P0513/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/1A-NO"));
end
rule "No Step Rule for P0513/1A-NO"
	when
		StepPerformed(stepId=="P0513/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0513/1A-NO"));
end
rule "Yes Step Rule for P0513/2A"
	when
		StepPerformed(stepId=="P0513/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/2A"));
end
rule "No Step Rule for P0513/2A"
	when
		StepPerformed(stepId=="P0513/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/3A",$sum.doubleValue() + 100.0,"Answered No to step P0513/2A"));
end
rule "Yes Step Rule for P0513/2A-YES"
	when
		StepPerformed(stepId=="P0513/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/2A-YES"));
end
rule "No Step Rule for P0513/2A-YES"
	when
		StepPerformed(stepId=="P0513/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0513/2A-YES"));
end
rule "Yes Step Rule for P0513/2A-NO"
	when
		StepPerformed(stepId=="P0513/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/2A-NO"));
end
rule "No Step Rule for P0513/2A-NO"
	when
		StepPerformed(stepId=="P0513/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0513/2A-NO"));
end
rule "Yes Step Rule for P0513/3A"
	when
		StepPerformed(stepId=="P0513/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/3A"));
end
rule "No Step Rule for P0513/3A"
	when
		StepPerformed(stepId=="P0513/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0513/3A"));
end
rule "Yes Step Rule for P0513/3A-YES"
	when
		StepPerformed(stepId=="P0513/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/3A-YES"));
end
rule "No Step Rule for P0513/3A-YES"
	when
		StepPerformed(stepId=="P0513/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0513/3A-YES"));
end
rule "Yes Step Rule for P0513/3A-NO"
	when
		StepPerformed(stepId=="P0513/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/3A-NO"));
end
rule "No Step Rule for P0513/3A-NO"
	when
		StepPerformed(stepId=="P0513/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0513/3A-NO"));
end
rule "Yes Step Rule for P0513/4A"
	when
		StepPerformed(stepId=="P0513/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/4A"));
end
rule "No Step Rule for P0513/4A"
	when
		StepPerformed(stepId=="P0513/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0513/4A"));
end
rule "Yes Step Rule for P0513/4A-YES"
	when
		StepPerformed(stepId=="P0513/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/4A-YES"));
end
rule "No Step Rule for P0513/4A-YES"
	when
		StepPerformed(stepId=="P0513/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0513/4A-YES"));
end
rule "Yes Step Rule for P0513/4A-NO"
	when
		StepPerformed(stepId=="P0513/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0513/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P0513/4A-NO"));
end
rule "No Step Rule for P0513/4A-NO"
	when
		StepPerformed(stepId=="P0513/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0513/4A-NO"));
end
rule "Yes Step Rule for P0524/1A"
	when
		StepPerformed(stepId=="P0524/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/1A"));
end
rule "No Step Rule for P0524/1A"
	when
		StepPerformed(stepId=="P0524/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0524/1A"));
end
rule "Yes Step Rule for P0524/1A-YES"
	when
		StepPerformed(stepId=="P0524/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/1A-YES"));
end
rule "No Step Rule for P0524/1A-YES"
	when
		StepPerformed(stepId=="P0524/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/1A-YES"));
end
rule "Yes Step Rule for P0524/1A-NO"
	when
		StepPerformed(stepId=="P0524/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/1A-NO"));
end
rule "No Step Rule for P0524/1A-NO"
	when
		StepPerformed(stepId=="P0524/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/1A-NO"));
end
rule "Yes Step Rule for P0524/2A"
	when
		StepPerformed(stepId=="P0524/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/2A"));
end
rule "No Step Rule for P0524/2A"
	when
		StepPerformed(stepId=="P0524/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/2B",$sum.doubleValue() + 100.0,"Answered No to step P0524/2A"));
end
rule "Yes Step Rule for P0524/2A-YES"
	when
		StepPerformed(stepId=="P0524/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/2A-YES"));
end
rule "No Step Rule for P0524/2A-YES"
	when
		StepPerformed(stepId=="P0524/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/2A-YES"));
end
rule "Yes Step Rule for P0524/2A-NO"
	when
		StepPerformed(stepId=="P0524/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/2A-NO"));
end
rule "No Step Rule for P0524/2A-NO"
	when
		StepPerformed(stepId=="P0524/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/2A-NO"));
end
rule "Yes Step Rule for P0524/2B"
	when
		StepPerformed(stepId=="P0524/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/2B"));
end
rule "No Step Rule for P0524/2B"
	when
		StepPerformed(stepId=="P0524/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0524/2B"));
end
rule "Yes Step Rule for P0524/2B-YES"
	when
		StepPerformed(stepId=="P0524/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/2B-YES"));
end
rule "No Step Rule for P0524/2B-YES"
	when
		StepPerformed(stepId=="P0524/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/2B-YES"));
end
rule "Yes Step Rule for P0524/2B-NO"
	when
		StepPerformed(stepId=="P0524/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/2B-NO"));
end
rule "No Step Rule for P0524/2B-NO"
	when
		StepPerformed(stepId=="P0524/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/2B-NO"));
end
rule "Yes Step Rule for P0524/3A"
	when
		StepPerformed(stepId=="P0524/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/3A"));
end
rule "No Step Rule for P0524/3A"
	when
		StepPerformed(stepId=="P0524/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/5A",$sum.doubleValue() + 100.0,"Answered No to step P0524/3A"));
end
rule "Yes Step Rule for P0524/3A-YES"
	when
		StepPerformed(stepId=="P0524/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/3A-YES"));
end
rule "No Step Rule for P0524/3A-YES"
	when
		StepPerformed(stepId=="P0524/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/3A-YES"));
end
rule "Yes Step Rule for P0524/3A-NO"
	when
		StepPerformed(stepId=="P0524/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/3A-NO"));
end
rule "No Step Rule for P0524/3A-NO"
	when
		StepPerformed(stepId=="P0524/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/3A-NO"));
end
rule "Yes Step Rule for P0524/4A"
	when
		StepPerformed(stepId=="P0524/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/4A"));
end
rule "No Step Rule for P0524/4A"
	when
		StepPerformed(stepId=="P0524/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/4B",$sum.doubleValue() + 100.0,"Answered No to step P0524/4A"));
end
rule "Yes Step Rule for P0524/4A-YES"
	when
		StepPerformed(stepId=="P0524/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/4A-YES"));
end
rule "No Step Rule for P0524/4A-YES"
	when
		StepPerformed(stepId=="P0524/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/4A-YES"));
end
rule "Yes Step Rule for P0524/4A-NO"
	when
		StepPerformed(stepId=="P0524/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/4A-NO"));
end
rule "No Step Rule for P0524/4A-NO"
	when
		StepPerformed(stepId=="P0524/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/4A-NO"));
end
rule "Yes Step Rule for P0524/4B"
	when
		StepPerformed(stepId=="P0524/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/4B"));
end
rule "No Step Rule for P0524/4B"
	when
		StepPerformed(stepId=="P0524/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0524/4B"));
end
rule "Yes Step Rule for P0524/4B-YES"
	when
		StepPerformed(stepId=="P0524/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/4B-YES"));
end
rule "No Step Rule for P0524/4B-YES"
	when
		StepPerformed(stepId=="P0524/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/4B-YES"));
end
rule "Yes Step Rule for P0524/4B-NO"
	when
		StepPerformed(stepId=="P0524/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/4B-NO"));
end
rule "No Step Rule for P0524/4B-NO"
	when
		StepPerformed(stepId=="P0524/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/4B-NO"));
end
rule "Yes Step Rule for P0524/5A"
	when
		StepPerformed(stepId=="P0524/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/5A"));
end
rule "No Step Rule for P0524/5A"
	when
		StepPerformed(stepId=="P0524/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/6A",$sum.doubleValue() + 100.0,"Answered No to step P0524/5A"));
end
rule "Yes Step Rule for P0524/5A-YES"
	when
		StepPerformed(stepId=="P0524/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/5A-YES"));
end
rule "No Step Rule for P0524/5A-YES"
	when
		StepPerformed(stepId=="P0524/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/5A-YES"));
end
rule "Yes Step Rule for P0524/5A-NO"
	when
		StepPerformed(stepId=="P0524/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/5A-NO"));
end
rule "No Step Rule for P0524/5A-NO"
	when
		StepPerformed(stepId=="P0524/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/5A-NO"));
end
rule "Yes Step Rule for P0524/6A"
	when
		StepPerformed(stepId=="P0524/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/6A"));
end
rule "No Step Rule for P0524/6A"
	when
		StepPerformed(stepId=="P0524/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/6B",$sum.doubleValue() + 100.0,"Answered No to step P0524/6A"));
end
rule "Yes Step Rule for P0524/6A-YES"
	when
		StepPerformed(stepId=="P0524/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/6A-YES"));
end
rule "No Step Rule for P0524/6A-YES"
	when
		StepPerformed(stepId=="P0524/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/6A-YES"));
end
rule "Yes Step Rule for P0524/6A-NO"
	when
		StepPerformed(stepId=="P0524/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/6B",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/6A-NO"));
end
rule "No Step Rule for P0524/6A-NO"
	when
		StepPerformed(stepId=="P0524/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/6A-NO"));
end
rule "Yes Step Rule for P0524/6B"
	when
		StepPerformed(stepId=="P0524/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/6B"));
end
rule "No Step Rule for P0524/6B"
	when
		StepPerformed(stepId=="P0524/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/6B-NO",$sum.doubleValue() + 100.0,"Answered No to step P0524/6B"));
end
rule "Yes Step Rule for P0524/6B-YES"
	when
		StepPerformed(stepId=="P0524/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/6B-YES"));
end
rule "No Step Rule for P0524/6B-YES"
	when
		StepPerformed(stepId=="P0524/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/6B-YES"));
end
rule "Yes Step Rule for P0524/6B-NO"
	when
		StepPerformed(stepId=="P0524/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/7A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/6B-NO"));
end
rule "No Step Rule for P0524/6B-NO"
	when
		StepPerformed(stepId=="P0524/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/6B-NO"));
end
rule "Yes Step Rule for P0524/7A"
	when
		StepPerformed(stepId=="P0524/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/7A"));
end
rule "No Step Rule for P0524/7A"
	when
		StepPerformed(stepId=="P0524/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step P0524/7A"));
end
rule "Yes Step Rule for P0524/7A-YES"
	when
		StepPerformed(stepId=="P0524/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/7A-YES"));
end
rule "No Step Rule for P0524/7A-YES"
	when
		StepPerformed(stepId=="P0524/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/7A-YES"));
end
rule "Yes Step Rule for P0524/7A-NO"
	when
		StepPerformed(stepId=="P0524/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P0524/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P0524/7A-NO"));
end
rule "No Step Rule for P0524/7A-NO"
	when
		StepPerformed(stepId=="P0524/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P0524/7A-NO"));
end
rule "Yes Step Rule for P101E/1A"
	when
		StepPerformed(stepId=="P101E/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/1A"));
end
rule "No Step Rule for P101E/1A"
	when
		StepPerformed(stepId=="P101E/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2B",$sum.doubleValue() + 100.0,"Answered No to step P101E/1A"));
end
rule "Yes Step Rule for P101E/1A-YES"
	when
		StepPerformed(stepId=="P101E/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/1A-YES"));
end
rule "No Step Rule for P101E/1A-YES"
	when
		StepPerformed(stepId=="P101E/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/1A-YES"));
end
rule "Yes Step Rule for P101E/1A-NO"
	when
		StepPerformed(stepId=="P101E/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/1A-NO"));
end
rule "No Step Rule for P101E/1A-NO"
	when
		StepPerformed(stepId=="P101E/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/1A-NO"));
end
rule "Yes Step Rule for P101E/2A"
	when
		StepPerformed(stepId=="P101E/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2A"));
end
rule "No Step Rule for P101E/2A"
	when
		StepPerformed(stepId=="P101E/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P101E/2A"));
end
rule "Yes Step Rule for P101E/2A-YES"
	when
		StepPerformed(stepId=="P101E/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2A-YES"));
end
rule "No Step Rule for P101E/2A-YES"
	when
		StepPerformed(stepId=="P101E/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/2A-YES"));
end
rule "Yes Step Rule for P101E/2A-NO"
	when
		StepPerformed(stepId=="P101E/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2A-NO"));
end
rule "No Step Rule for P101E/2A-NO"
	when
		StepPerformed(stepId=="P101E/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/2A-NO"));
end
rule "Yes Step Rule for P101E/2B"
	when
		StepPerformed(stepId=="P101E/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2B"));
end
rule "No Step Rule for P101E/2B"
	when
		StepPerformed(stepId=="P101E/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P101E/2B"));
end
rule "Yes Step Rule for P101E/2B-YES"
	when
		StepPerformed(stepId=="P101E/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2B-YES"));
end
rule "No Step Rule for P101E/2B-YES"
	when
		StepPerformed(stepId=="P101E/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/2B-YES"));
end
rule "Yes Step Rule for P101E/2B-NO"
	when
		StepPerformed(stepId=="P101E/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2B-NO"));
end
rule "No Step Rule for P101E/2B-NO"
	when
		StepPerformed(stepId=="P101E/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/2B-NO"));
end
rule "Yes Step Rule for P101E/2C"
	when
		StepPerformed(stepId=="P101E/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2C"));
end
rule "No Step Rule for P101E/2C"
	when
		StepPerformed(stepId=="P101E/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P101E/2C"));
end
rule "Yes Step Rule for P101E/2C-YES"
	when
		StepPerformed(stepId=="P101E/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2C-YES"));
end
rule "No Step Rule for P101E/2C-YES"
	when
		StepPerformed(stepId=="P101E/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/2C-YES"));
end
rule "Yes Step Rule for P101E/2C-NO"
	when
		StepPerformed(stepId=="P101E/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2C-NO"));
end
rule "No Step Rule for P101E/2C-NO"
	when
		StepPerformed(stepId=="P101E/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/2C-NO"));
end
rule "Yes Step Rule for P101E/2D"
	when
		StepPerformed(stepId=="P101E/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2D"));
end
rule "No Step Rule for P101E/2D"
	when
		StepPerformed(stepId=="P101E/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step P101E/2D"));
end
rule "Yes Step Rule for P101E/2D-YES"
	when
		StepPerformed(stepId=="P101E/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2D-YES"));
end
rule "No Step Rule for P101E/2D-YES"
	when
		StepPerformed(stepId=="P101E/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/2D-YES"));
end
rule "Yes Step Rule for P101E/2D-NO"
	when
		StepPerformed(stepId=="P101E/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/2D-NO"));
end
rule "No Step Rule for P101E/2D-NO"
	when
		StepPerformed(stepId=="P101E/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/2D-NO"));
end
rule "Yes Step Rule for P101E/3A"
	when
		StepPerformed(stepId=="P101E/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/3A"));
end
rule "No Step Rule for P101E/3A"
	when
		StepPerformed(stepId=="P101E/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P101E/3A"));
end
rule "Yes Step Rule for P101E/3A-YES"
	when
		StepPerformed(stepId=="P101E/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/3A-YES"));
end
rule "No Step Rule for P101E/3A-YES"
	when
		StepPerformed(stepId=="P101E/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/3A-YES"));
end
rule "Yes Step Rule for P101E/3A-NO"
	when
		StepPerformed(stepId=="P101E/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/3A-NO"));
end
rule "No Step Rule for P101E/3A-NO"
	when
		StepPerformed(stepId=="P101E/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/3A-NO"));
end
rule "Yes Step Rule for P101E/4A"
	when
		StepPerformed(stepId=="P101E/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/4A"));
end
rule "No Step Rule for P101E/4A"
	when
		StepPerformed(stepId=="P101E/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P101E/4A"));
end
rule "Yes Step Rule for P101E/4A-YES"
	when
		StepPerformed(stepId=="P101E/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/4A-YES"));
end
rule "No Step Rule for P101E/4A-YES"
	when
		StepPerformed(stepId=="P101E/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/4A-YES"));
end
rule "Yes Step Rule for P101E/4A-NO"
	when
		StepPerformed(stepId=="P101E/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P101E/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P101E/4A-NO"));
end
rule "No Step Rule for P101E/4A-NO"
	when
		StepPerformed(stepId=="P101E/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P101E/4A-NO"));
end
rule "Yes Step Rule for P1020/1A"
	when
		StepPerformed(stepId=="P1020/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/1A"));
end
rule "No Step Rule for P1020/1A"
	when
		StepPerformed(stepId=="P1020/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/2A",$sum.doubleValue() + 100.0,"Answered No to step P1020/1A"));
end
rule "Yes Step Rule for P1020/1A-YES"
	when
		StepPerformed(stepId=="P1020/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/1A-YES"));
end
rule "No Step Rule for P1020/1A-YES"
	when
		StepPerformed(stepId=="P1020/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1020/1A-YES"));
end
rule "Yes Step Rule for P1020/1A-NO"
	when
		StepPerformed(stepId=="P1020/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/1A-NO"));
end
rule "No Step Rule for P1020/1A-NO"
	when
		StepPerformed(stepId=="P1020/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1020/1A-NO"));
end
rule "Yes Step Rule for P1020/2A"
	when
		StepPerformed(stepId=="P1020/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/2A"));
end
rule "No Step Rule for P1020/2A"
	when
		StepPerformed(stepId=="P1020/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/4A",$sum.doubleValue() + 100.0,"Answered No to step P1020/2A"));
end
rule "Yes Step Rule for P1020/2A-YES"
	when
		StepPerformed(stepId=="P1020/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/2A-YES"));
end
rule "No Step Rule for P1020/2A-YES"
	when
		StepPerformed(stepId=="P1020/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1020/2A-YES"));
end
rule "Yes Step Rule for P1020/2A-NO"
	when
		StepPerformed(stepId=="P1020/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/2A-NO"));
end
rule "No Step Rule for P1020/2A-NO"
	when
		StepPerformed(stepId=="P1020/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1020/2A-NO"));
end
rule "Yes Step Rule for P1020/3A"
	when
		StepPerformed(stepId=="P1020/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/3A"));
end
rule "No Step Rule for P1020/3A"
	when
		StepPerformed(stepId=="P1020/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1020/3A"));
end
rule "Yes Step Rule for P1020/3A-YES"
	when
		StepPerformed(stepId=="P1020/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/3A-YES"));
end
rule "No Step Rule for P1020/3A-YES"
	when
		StepPerformed(stepId=="P1020/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1020/3A-YES"));
end
rule "Yes Step Rule for P1020/3A-NO"
	when
		StepPerformed(stepId=="P1020/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/3A-NO"));
end
rule "No Step Rule for P1020/3A-NO"
	when
		StepPerformed(stepId=="P1020/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1020/3A-NO"));
end
rule "Yes Step Rule for P1020/4A"
	when
		StepPerformed(stepId=="P1020/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/4A"));
end
rule "No Step Rule for P1020/4A"
	when
		StepPerformed(stepId=="P1020/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1020/4A"));
end
rule "Yes Step Rule for P1020/4A-YES"
	when
		StepPerformed(stepId=="P1020/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/4A-YES"));
end
rule "No Step Rule for P1020/4A-YES"
	when
		StepPerformed(stepId=="P1020/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1020/4A-YES"));
end
rule "Yes Step Rule for P1020/4A-NO"
	when
		StepPerformed(stepId=="P1020/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1020/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1020/4A-NO"));
end
rule "No Step Rule for P1020/4A-NO"
	when
		StepPerformed(stepId=="P1020/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1020/4A-NO"));
end
rule "Yes Step Rule for P1021/1A"
	when
		StepPerformed(stepId=="P1021/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/1A"));
end
rule "No Step Rule for P1021/1A"
	when
		StepPerformed(stepId=="P1021/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/5A",$sum.doubleValue() + 100.0,"Answered No to step P1021/1A"));
end
rule "Yes Step Rule for P1021/1A-YES"
	when
		StepPerformed(stepId=="P1021/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/1A-YES"));
end
rule "No Step Rule for P1021/1A-YES"
	when
		StepPerformed(stepId=="P1021/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/1A-YES"));
end
rule "Yes Step Rule for P1021/1A-NO"
	when
		StepPerformed(stepId=="P1021/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/1A-NO"));
end
rule "No Step Rule for P1021/1A-NO"
	when
		StepPerformed(stepId=="P1021/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/1A-NO"));
end
rule "Yes Step Rule for P1021/2A"
	when
		StepPerformed(stepId=="P1021/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/2A"));
end
rule "No Step Rule for P1021/2A"
	when
		StepPerformed(stepId=="P1021/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/5A",$sum.doubleValue() + 100.0,"Answered No to step P1021/2A"));
end
rule "Yes Step Rule for P1021/2A-YES"
	when
		StepPerformed(stepId=="P1021/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/2A-YES"));
end
rule "No Step Rule for P1021/2A-YES"
	when
		StepPerformed(stepId=="P1021/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/2A-YES"));
end
rule "Yes Step Rule for P1021/2A-NO"
	when
		StepPerformed(stepId=="P1021/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/2A-NO"));
end
rule "No Step Rule for P1021/2A-NO"
	when
		StepPerformed(stepId=="P1021/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/2A-NO"));
end
rule "Yes Step Rule for P1021/3A"
	when
		StepPerformed(stepId=="P1021/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/3A"));
end
rule "No Step Rule for P1021/3A"
	when
		StepPerformed(stepId=="P1021/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1021/3A"));
end
rule "Yes Step Rule for P1021/3A-YES"
	when
		StepPerformed(stepId=="P1021/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/3A-YES"));
end
rule "No Step Rule for P1021/3A-YES"
	when
		StepPerformed(stepId=="P1021/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/3A-YES"));
end
rule "Yes Step Rule for P1021/3A-NO"
	when
		StepPerformed(stepId=="P1021/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/3A-NO"));
end
rule "No Step Rule for P1021/3A-NO"
	when
		StepPerformed(stepId=="P1021/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/3A-NO"));
end
rule "Yes Step Rule for P1021/4A"
	when
		StepPerformed(stepId=="P1021/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/4A"));
end
rule "No Step Rule for P1021/4A"
	when
		StepPerformed(stepId=="P1021/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1021/4A"));
end
rule "Yes Step Rule for P1021/4A-YES"
	when
		StepPerformed(stepId=="P1021/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/4A-YES"));
end
rule "No Step Rule for P1021/4A-YES"
	when
		StepPerformed(stepId=="P1021/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/4A-YES"));
end
rule "Yes Step Rule for P1021/4A-NO"
	when
		StepPerformed(stepId=="P1021/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/4A-NO"));
end
rule "No Step Rule for P1021/4A-NO"
	when
		StepPerformed(stepId=="P1021/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/4A-NO"));
end
rule "Yes Step Rule for P1021/5A"
	when
		StepPerformed(stepId=="P1021/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/5A"));
end
rule "No Step Rule for P1021/5A"
	when
		StepPerformed(stepId=="P1021/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1021/5A"));
end
rule "Yes Step Rule for P1021/5A-YES"
	when
		StepPerformed(stepId=="P1021/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/5A-YES"));
end
rule "No Step Rule for P1021/5A-YES"
	when
		StepPerformed(stepId=="P1021/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/5A-YES"));
end
rule "Yes Step Rule for P1021/5A-NO"
	when
		StepPerformed(stepId=="P1021/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1021/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1021/5A-NO"));
end
rule "No Step Rule for P1021/5A-NO"
	when
		StepPerformed(stepId=="P1021/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1021/5A-NO"));
end
rule "Yes Step Rule for P1022/1A"
	when
		StepPerformed(stepId=="P1022/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/1A"));
end
rule "No Step Rule for P1022/1A"
	when
		StepPerformed(stepId=="P1022/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2B",$sum.doubleValue() + 100.0,"Answered No to step P1022/1A"));
end
rule "Yes Step Rule for P1022/1A-YES"
	when
		StepPerformed(stepId=="P1022/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/1A-YES"));
end
rule "No Step Rule for P1022/1A-YES"
	when
		StepPerformed(stepId=="P1022/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/1A-YES"));
end
rule "Yes Step Rule for P1022/1A-NO"
	when
		StepPerformed(stepId=="P1022/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/1A-NO"));
end
rule "No Step Rule for P1022/1A-NO"
	when
		StepPerformed(stepId=="P1022/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/1A-NO"));
end
rule "Yes Step Rule for P1022/2A"
	when
		StepPerformed(stepId=="P1022/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2A"));
end
rule "No Step Rule for P1022/2A"
	when
		StepPerformed(stepId=="P1022/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1022/2A"));
end
rule "Yes Step Rule for P1022/2A-YES"
	when
		StepPerformed(stepId=="P1022/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2A-YES"));
end
rule "No Step Rule for P1022/2A-YES"
	when
		StepPerformed(stepId=="P1022/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/2A-YES"));
end
rule "Yes Step Rule for P1022/2A-NO"
	when
		StepPerformed(stepId=="P1022/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2A-NO"));
end
rule "No Step Rule for P1022/2A-NO"
	when
		StepPerformed(stepId=="P1022/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/2A-NO"));
end
rule "Yes Step Rule for P1022/2B"
	when
		StepPerformed(stepId=="P1022/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2B"));
end
rule "No Step Rule for P1022/2B"
	when
		StepPerformed(stepId=="P1022/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1022/2B"));
end
rule "Yes Step Rule for P1022/2B-YES"
	when
		StepPerformed(stepId=="P1022/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2B-YES"));
end
rule "No Step Rule for P1022/2B-YES"
	when
		StepPerformed(stepId=="P1022/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/2B-YES"));
end
rule "Yes Step Rule for P1022/2B-NO"
	when
		StepPerformed(stepId=="P1022/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2B-NO"));
end
rule "No Step Rule for P1022/2B-NO"
	when
		StepPerformed(stepId=="P1022/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/2B-NO"));
end
rule "Yes Step Rule for P1022/2C"
	when
		StepPerformed(stepId=="P1022/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2C"));
end
rule "No Step Rule for P1022/2C"
	when
		StepPerformed(stepId=="P1022/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1022/2C"));
end
rule "Yes Step Rule for P1022/2C-YES"
	when
		StepPerformed(stepId=="P1022/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2C-YES"));
end
rule "No Step Rule for P1022/2C-YES"
	when
		StepPerformed(stepId=="P1022/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/2C-YES"));
end
rule "Yes Step Rule for P1022/2C-NO"
	when
		StepPerformed(stepId=="P1022/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2C-NO"));
end
rule "No Step Rule for P1022/2C-NO"
	when
		StepPerformed(stepId=="P1022/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/2C-NO"));
end
rule "Yes Step Rule for P1022/2D"
	when
		StepPerformed(stepId=="P1022/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2D"));
end
rule "No Step Rule for P1022/2D"
	when
		StepPerformed(stepId=="P1022/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step P1022/2D"));
end
rule "Yes Step Rule for P1022/2D-YES"
	when
		StepPerformed(stepId=="P1022/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2D-YES"));
end
rule "No Step Rule for P1022/2D-YES"
	when
		StepPerformed(stepId=="P1022/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/2D-YES"));
end
rule "Yes Step Rule for P1022/2D-NO"
	when
		StepPerformed(stepId=="P1022/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/2D-NO"));
end
rule "No Step Rule for P1022/2D-NO"
	when
		StepPerformed(stepId=="P1022/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/2D-NO"));
end
rule "Yes Step Rule for P1022/3A"
	when
		StepPerformed(stepId=="P1022/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/3A"));
end
rule "No Step Rule for P1022/3A"
	when
		StepPerformed(stepId=="P1022/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1022/3A"));
end
rule "Yes Step Rule for P1022/3A-YES"
	when
		StepPerformed(stepId=="P1022/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/3A-YES"));
end
rule "No Step Rule for P1022/3A-YES"
	when
		StepPerformed(stepId=="P1022/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/3A-YES"));
end
rule "Yes Step Rule for P1022/3A-NO"
	when
		StepPerformed(stepId=="P1022/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/3A-NO"));
end
rule "No Step Rule for P1022/3A-NO"
	when
		StepPerformed(stepId=="P1022/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/3A-NO"));
end
rule "Yes Step Rule for P1022/4A"
	when
		StepPerformed(stepId=="P1022/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/4A"));
end
rule "No Step Rule for P1022/4A"
	when
		StepPerformed(stepId=="P1022/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1022/4A"));
end
rule "Yes Step Rule for P1022/4A-YES"
	when
		StepPerformed(stepId=="P1022/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/4A-YES"));
end
rule "No Step Rule for P1022/4A-YES"
	when
		StepPerformed(stepId=="P1022/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/4A-YES"));
end
rule "Yes Step Rule for P1022/4A-NO"
	when
		StepPerformed(stepId=="P1022/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1022/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1022/4A-NO"));
end
rule "No Step Rule for P1022/4A-NO"
	when
		StepPerformed(stepId=="P1022/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1022/4A-NO"));
end
rule "Yes Step Rule for P1023/1A"
	when
		StepPerformed(stepId=="P1023/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/1A"));
end
rule "No Step Rule for P1023/1A"
	when
		StepPerformed(stepId=="P1023/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/2A",$sum.doubleValue() + 100.0,"Answered No to step P1023/1A"));
end
rule "Yes Step Rule for P1023/1A-YES"
	when
		StepPerformed(stepId=="P1023/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/1A-YES"));
end
rule "No Step Rule for P1023/1A-YES"
	when
		StepPerformed(stepId=="P1023/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/1A-YES"));
end
rule "Yes Step Rule for P1023/1A-NO"
	when
		StepPerformed(stepId=="P1023/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/1A-NO"));
end
rule "No Step Rule for P1023/1A-NO"
	when
		StepPerformed(stepId=="P1023/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/1A-NO"));
end
rule "Yes Step Rule for P1023/2A"
	when
		StepPerformed(stepId=="P1023/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/2A"));
end
rule "No Step Rule for P1023/2A"
	when
		StepPerformed(stepId=="P1023/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/5A",$sum.doubleValue() + 100.0,"Answered No to step P1023/2A"));
end
rule "Yes Step Rule for P1023/2A-YES"
	when
		StepPerformed(stepId=="P1023/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/2A-YES"));
end
rule "No Step Rule for P1023/2A-YES"
	when
		StepPerformed(stepId=="P1023/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/2A-YES"));
end
rule "Yes Step Rule for P1023/2A-NO"
	when
		StepPerformed(stepId=="P1023/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/2A-NO"));
end
rule "No Step Rule for P1023/2A-NO"
	when
		StepPerformed(stepId=="P1023/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/2A-NO"));
end
rule "Yes Step Rule for P1023/3A"
	when
		StepPerformed(stepId=="P1023/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/3A"));
end
rule "No Step Rule for P1023/3A"
	when
		StepPerformed(stepId=="P1023/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1023/3A"));
end
rule "Yes Step Rule for P1023/3A-YES"
	when
		StepPerformed(stepId=="P1023/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/3A-YES"));
end
rule "No Step Rule for P1023/3A-YES"
	when
		StepPerformed(stepId=="P1023/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/3A-YES"));
end
rule "Yes Step Rule for P1023/3A-NO"
	when
		StepPerformed(stepId=="P1023/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/3A-NO"));
end
rule "No Step Rule for P1023/3A-NO"
	when
		StepPerformed(stepId=="P1023/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/3A-NO"));
end
rule "Yes Step Rule for P1023/3B"
	when
		StepPerformed(stepId=="P1023/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/3B"));
end
rule "No Step Rule for P1023/3B"
	when
		StepPerformed(stepId=="P1023/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1023/3B"));
end
rule "Yes Step Rule for P1023/3B-YES"
	when
		StepPerformed(stepId=="P1023/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/3B-YES"));
end
rule "No Step Rule for P1023/3B-YES"
	when
		StepPerformed(stepId=="P1023/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/3B-YES"));
end
rule "Yes Step Rule for P1023/3B-NO"
	when
		StepPerformed(stepId=="P1023/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/3B-NO"));
end
rule "No Step Rule for P1023/3B-NO"
	when
		StepPerformed(stepId=="P1023/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/3B-NO"));
end
rule "Yes Step Rule for P1023/4A"
	when
		StepPerformed(stepId=="P1023/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/4A"));
end
rule "No Step Rule for P1023/4A"
	when
		StepPerformed(stepId=="P1023/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1023/4A"));
end
rule "Yes Step Rule for P1023/4A-YES"
	when
		StepPerformed(stepId=="P1023/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/4A-YES"));
end
rule "No Step Rule for P1023/4A-YES"
	when
		StepPerformed(stepId=="P1023/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/4A-YES"));
end
rule "Yes Step Rule for P1023/4A-NO"
	when
		StepPerformed(stepId=="P1023/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/4A-NO"));
end
rule "No Step Rule for P1023/4A-NO"
	when
		StepPerformed(stepId=="P1023/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/4A-NO"));
end
rule "Yes Step Rule for P1023/5A"
	when
		StepPerformed(stepId=="P1023/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/5A"));
end
rule "No Step Rule for P1023/5A"
	when
		StepPerformed(stepId=="P1023/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1023/5A"));
end
rule "Yes Step Rule for P1023/5A-YES"
	when
		StepPerformed(stepId=="P1023/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/5A-YES"));
end
rule "No Step Rule for P1023/5A-YES"
	when
		StepPerformed(stepId=="P1023/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/5A-YES"));
end
rule "Yes Step Rule for P1023/5A-NO"
	when
		StepPerformed(stepId=="P1023/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1023/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1023/5A-NO"));
end
rule "No Step Rule for P1023/5A-NO"
	when
		StepPerformed(stepId=="P1023/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1023/5A-NO"));
end
rule "Yes Step Rule for P1024/1A"
	when
		StepPerformed(stepId=="P1024/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/1A"));
end
rule "No Step Rule for P1024/1A"
	when
		StepPerformed(stepId=="P1024/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/4A",$sum.doubleValue() + 100.0,"Answered No to step P1024/1A"));
end
rule "Yes Step Rule for P1024/1A-YES"
	when
		StepPerformed(stepId=="P1024/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/1A-YES"));
end
rule "No Step Rule for P1024/1A-YES"
	when
		StepPerformed(stepId=="P1024/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/1A-YES"));
end
rule "Yes Step Rule for P1024/1A-NO"
	when
		StepPerformed(stepId=="P1024/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/1A-NO"));
end
rule "No Step Rule for P1024/1A-NO"
	when
		StepPerformed(stepId=="P1024/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/1A-NO"));
end
rule "Yes Step Rule for P1024/2A"
	when
		StepPerformed(stepId=="P1024/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/2A"));
end
rule "No Step Rule for P1024/2A"
	when
		StepPerformed(stepId=="P1024/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/2B",$sum.doubleValue() + 100.0,"Answered No to step P1024/2A"));
end
rule "Yes Step Rule for P1024/2A-YES"
	when
		StepPerformed(stepId=="P1024/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/2A-YES"));
end
rule "No Step Rule for P1024/2A-YES"
	when
		StepPerformed(stepId=="P1024/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/2A-YES"));
end
rule "Yes Step Rule for P1024/2A-NO"
	when
		StepPerformed(stepId=="P1024/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/2A-NO"));
end
rule "No Step Rule for P1024/2A-NO"
	when
		StepPerformed(stepId=="P1024/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/2A-NO"));
end
rule "Yes Step Rule for P1024/2B"
	when
		StepPerformed(stepId=="P1024/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/2B"));
end
rule "No Step Rule for P1024/2B"
	when
		StepPerformed(stepId=="P1024/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1024/2B"));
end
rule "Yes Step Rule for P1024/2B-YES"
	when
		StepPerformed(stepId=="P1024/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/2B-YES"));
end
rule "No Step Rule for P1024/2B-YES"
	when
		StepPerformed(stepId=="P1024/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/2B-YES"));
end
rule "Yes Step Rule for P1024/2B-NO"
	when
		StepPerformed(stepId=="P1024/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/2B-NO"));
end
rule "No Step Rule for P1024/2B-NO"
	when
		StepPerformed(stepId=="P1024/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/2B-NO"));
end
rule "Yes Step Rule for P1024/3A"
	when
		StepPerformed(stepId=="P1024/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/3A"));
end
rule "No Step Rule for P1024/3A"
	when
		StepPerformed(stepId=="P1024/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1024/3A"));
end
rule "Yes Step Rule for P1024/3A-YES"
	when
		StepPerformed(stepId=="P1024/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/3A-YES"));
end
rule "No Step Rule for P1024/3A-YES"
	when
		StepPerformed(stepId=="P1024/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/3A-YES"));
end
rule "Yes Step Rule for P1024/3A-NO"
	when
		StepPerformed(stepId=="P1024/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/3A-NO"));
end
rule "No Step Rule for P1024/3A-NO"
	when
		StepPerformed(stepId=="P1024/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/3A-NO"));
end
rule "Yes Step Rule for P1024/4A"
	when
		StepPerformed(stepId=="P1024/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/4A"));
end
rule "No Step Rule for P1024/4A"
	when
		StepPerformed(stepId=="P1024/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1024/4A"));
end
rule "Yes Step Rule for P1024/4A-YES"
	when
		StepPerformed(stepId=="P1024/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/4A-YES"));
end
rule "No Step Rule for P1024/4A-YES"
	when
		StepPerformed(stepId=="P1024/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/4A-YES"));
end
rule "Yes Step Rule for P1024/4A-NO"
	when
		StepPerformed(stepId=="P1024/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1024/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1024/4A-NO"));
end
rule "No Step Rule for P1024/4A-NO"
	when
		StepPerformed(stepId=="P1024/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1024/4A-NO"));
end
rule "Yes Step Rule for P1025/1A"
	when
		StepPerformed(stepId=="P1025/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/1A"));
end
rule "No Step Rule for P1025/1A"
	when
		StepPerformed(stepId=="P1025/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2B",$sum.doubleValue() + 100.0,"Answered No to step P1025/1A"));
end
rule "Yes Step Rule for P1025/1A-YES"
	when
		StepPerformed(stepId=="P1025/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/1A-YES"));
end
rule "No Step Rule for P1025/1A-YES"
	when
		StepPerformed(stepId=="P1025/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/1A-YES"));
end
rule "Yes Step Rule for P1025/1A-NO"
	when
		StepPerformed(stepId=="P1025/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/1A-NO"));
end
rule "No Step Rule for P1025/1A-NO"
	when
		StepPerformed(stepId=="P1025/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/1A-NO"));
end
rule "Yes Step Rule for P1025/2A"
	when
		StepPerformed(stepId=="P1025/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/2A"));
end
rule "No Step Rule for P1025/2A"
	when
		StepPerformed(stepId=="P1025/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1025/2A"));
end
rule "Yes Step Rule for P1025/2A-YES"
	when
		StepPerformed(stepId=="P1025/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/2A-YES"));
end
rule "No Step Rule for P1025/2A-YES"
	when
		StepPerformed(stepId=="P1025/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/2A-YES"));
end
rule "Yes Step Rule for P1025/2A-NO"
	when
		StepPerformed(stepId=="P1025/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/2A-NO"));
end
rule "No Step Rule for P1025/2A-NO"
	when
		StepPerformed(stepId=="P1025/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/2A-NO"));
end
rule "Yes Step Rule for P1025/2B"
	when
		StepPerformed(stepId=="P1025/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/2B"));
end
rule "No Step Rule for P1025/2B"
	when
		StepPerformed(stepId=="P1025/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1025/2B"));
end
rule "Yes Step Rule for P1025/2B-YES"
	when
		StepPerformed(stepId=="P1025/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/2B-YES"));
end
rule "No Step Rule for P1025/2B-YES"
	when
		StepPerformed(stepId=="P1025/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/2B-YES"));
end
rule "Yes Step Rule for P1025/2B-NO"
	when
		StepPerformed(stepId=="P1025/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/2B-NO"));
end
rule "No Step Rule for P1025/2B-NO"
	when
		StepPerformed(stepId=="P1025/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/2B-NO"));
end
rule "Yes Step Rule for P1025/2C"
	when
		StepPerformed(stepId=="P1025/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/2C"));
end
rule "No Step Rule for P1025/2C"
	when
		StepPerformed(stepId=="P1025/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1025/2C"));
end
rule "Yes Step Rule for P1025/2C-YES"
	when
		StepPerformed(stepId=="P1025/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/2C-YES"));
end
rule "No Step Rule for P1025/2C-YES"
	when
		StepPerformed(stepId=="P1025/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/2C-YES"));
end
rule "Yes Step Rule for P1025/2C-NO"
	when
		StepPerformed(stepId=="P1025/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/2C-NO"));
end
rule "No Step Rule for P1025/2C-NO"
	when
		StepPerformed(stepId=="P1025/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/2C-NO"));
end
rule "Yes Step Rule for P1025/3A"
	when
		StepPerformed(stepId=="P1025/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/3A"));
end
rule "No Step Rule for P1025/3A"
	when
		StepPerformed(stepId=="P1025/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1025/3A"));
end
rule "Yes Step Rule for P1025/3A-YES"
	when
		StepPerformed(stepId=="P1025/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/3A-YES"));
end
rule "No Step Rule for P1025/3A-YES"
	when
		StepPerformed(stepId=="P1025/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/3A-YES"));
end
rule "Yes Step Rule for P1025/3A-NO"
	when
		StepPerformed(stepId=="P1025/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/3A-NO"));
end
rule "No Step Rule for P1025/3A-NO"
	when
		StepPerformed(stepId=="P1025/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/3A-NO"));
end
rule "Yes Step Rule for P1025/4A"
	when
		StepPerformed(stepId=="P1025/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/4A"));
end
rule "No Step Rule for P1025/4A"
	when
		StepPerformed(stepId=="P1025/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1025/4A"));
end
rule "Yes Step Rule for P1025/4A-YES"
	when
		StepPerformed(stepId=="P1025/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/4A-YES"));
end
rule "No Step Rule for P1025/4A-YES"
	when
		StepPerformed(stepId=="P1025/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/4A-YES"));
end
rule "Yes Step Rule for P1025/4A-NO"
	when
		StepPerformed(stepId=="P1025/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1025/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1025/4A-NO"));
end
rule "No Step Rule for P1025/4A-NO"
	when
		StepPerformed(stepId=="P1025/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1025/4A-NO"));
end
rule "Yes Step Rule for P1026/1A"
	when
		StepPerformed(stepId=="P1026/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/1A"));
end
rule "No Step Rule for P1026/1A"
	when
		StepPerformed(stepId=="P1026/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2B",$sum.doubleValue() + 100.0,"Answered No to step P1026/1A"));
end
rule "Yes Step Rule for P1026/1A-YES"
	when
		StepPerformed(stepId=="P1026/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/1A-YES"));
end
rule "No Step Rule for P1026/1A-YES"
	when
		StepPerformed(stepId=="P1026/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/1A-YES"));
end
rule "Yes Step Rule for P1026/1A-NO"
	when
		StepPerformed(stepId=="P1026/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/1A-NO"));
end
rule "No Step Rule for P1026/1A-NO"
	when
		StepPerformed(stepId=="P1026/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/1A-NO"));
end
rule "Yes Step Rule for P1026/2A"
	when
		StepPerformed(stepId=="P1026/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2A"));
end
rule "No Step Rule for P1026/2A"
	when
		StepPerformed(stepId=="P1026/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1026/2A"));
end
rule "Yes Step Rule for P1026/2A-YES"
	when
		StepPerformed(stepId=="P1026/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2A-YES"));
end
rule "No Step Rule for P1026/2A-YES"
	when
		StepPerformed(stepId=="P1026/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2A-YES"));
end
rule "Yes Step Rule for P1026/2A-NO"
	when
		StepPerformed(stepId=="P1026/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2A-NO"));
end
rule "No Step Rule for P1026/2A-NO"
	when
		StepPerformed(stepId=="P1026/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2A-NO"));
end
rule "Yes Step Rule for P1026/2B"
	when
		StepPerformed(stepId=="P1026/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2B"));
end
rule "No Step Rule for P1026/2B"
	when
		StepPerformed(stepId=="P1026/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2C",$sum.doubleValue() + 100.0,"Answered No to step P1026/2B"));
end
rule "Yes Step Rule for P1026/2B-YES"
	when
		StepPerformed(stepId=="P1026/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2B-YES"));
end
rule "No Step Rule for P1026/2B-YES"
	when
		StepPerformed(stepId=="P1026/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2B-YES"));
end
rule "Yes Step Rule for P1026/2B-NO"
	when
		StepPerformed(stepId=="P1026/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2B-NO"));
end
rule "No Step Rule for P1026/2B-NO"
	when
		StepPerformed(stepId=="P1026/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2B-NO"));
end
rule "Yes Step Rule for P1026/2C"
	when
		StepPerformed(stepId=="P1026/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2C"));
end
rule "No Step Rule for P1026/2C"
	when
		StepPerformed(stepId=="P1026/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1026/2C"));
end
rule "Yes Step Rule for P1026/2C-YES"
	when
		StepPerformed(stepId=="P1026/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2C-YES"));
end
rule "No Step Rule for P1026/2C-YES"
	when
		StepPerformed(stepId=="P1026/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2C-YES"));
end
rule "Yes Step Rule for P1026/2C-NO"
	when
		StepPerformed(stepId=="P1026/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2F",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2C-NO"));
end
rule "No Step Rule for P1026/2C-NO"
	when
		StepPerformed(stepId=="P1026/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2C-NO"));
end
rule "Yes Step Rule for P1026/2D"
	when
		StepPerformed(stepId=="P1026/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2D"));
end
rule "No Step Rule for P1026/2D"
	when
		StepPerformed(stepId=="P1026/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2E",$sum.doubleValue() + 100.0,"Answered No to step P1026/2D"));
end
rule "Yes Step Rule for P1026/2D-YES"
	when
		StepPerformed(stepId=="P1026/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2D-YES"));
end
rule "No Step Rule for P1026/2D-YES"
	when
		StepPerformed(stepId=="P1026/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2D-YES"));
end
rule "Yes Step Rule for P1026/2D-NO"
	when
		StepPerformed(stepId=="P1026/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2E",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2D-NO"));
end
rule "No Step Rule for P1026/2D-NO"
	when
		StepPerformed(stepId=="P1026/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2D-NO"));
end
rule "Yes Step Rule for P1026/2E"
	when
		StepPerformed(stepId=="P1026/2E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2E"));
end
rule "No Step Rule for P1026/2E"
	when
		StepPerformed(stepId=="P1026/2E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2E-NO",$sum.doubleValue() + 100.0,"Answered No to step P1026/2E"));
end
rule "Yes Step Rule for P1026/2E-YES"
	when
		StepPerformed(stepId=="P1026/2E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2E-YES"));
end
rule "No Step Rule for P1026/2E-YES"
	when
		StepPerformed(stepId=="P1026/2E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2E-YES"));
end
rule "Yes Step Rule for P1026/2E-NO"
	when
		StepPerformed(stepId=="P1026/2E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2E-NO"));
end
rule "No Step Rule for P1026/2E-NO"
	when
		StepPerformed(stepId=="P1026/2E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2E-NO"));
end
rule "Yes Step Rule for P1026/2F"
	when
		StepPerformed(stepId=="P1026/2F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2F"));
end
rule "No Step Rule for P1026/2F"
	when
		StepPerformed(stepId=="P1026/2F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/2F-NO",$sum.doubleValue() + 100.0,"Answered No to step P1026/2F"));
end
rule "Yes Step Rule for P1026/2F-YES"
	when
		StepPerformed(stepId=="P1026/2F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2F-YES"));
end
rule "No Step Rule for P1026/2F-YES"
	when
		StepPerformed(stepId=="P1026/2F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2F-YES"));
end
rule "Yes Step Rule for P1026/2F-NO"
	when
		StepPerformed(stepId=="P1026/2F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/2F-NO"));
end
rule "No Step Rule for P1026/2F-NO"
	when
		StepPerformed(stepId=="P1026/2F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/2F-NO"));
end
rule "Yes Step Rule for P1026/3A"
	when
		StepPerformed(stepId=="P1026/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/3A"));
end
rule "No Step Rule for P1026/3A"
	when
		StepPerformed(stepId=="P1026/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1026/3A"));
end
rule "Yes Step Rule for P1026/3A-YES"
	when
		StepPerformed(stepId=="P1026/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/3A-YES"));
end
rule "No Step Rule for P1026/3A-YES"
	when
		StepPerformed(stepId=="P1026/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/3A-YES"));
end
rule "Yes Step Rule for P1026/3A-NO"
	when
		StepPerformed(stepId=="P1026/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/3A-NO"));
end
rule "No Step Rule for P1026/3A-NO"
	when
		StepPerformed(stepId=="P1026/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/3A-NO"));
end
rule "Yes Step Rule for P1026/4A"
	when
		StepPerformed(stepId=="P1026/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/4A"));
end
rule "No Step Rule for P1026/4A"
	when
		StepPerformed(stepId=="P1026/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1026/4A"));
end
rule "Yes Step Rule for P1026/4A-YES"
	when
		StepPerformed(stepId=="P1026/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/4A-YES"));
end
rule "No Step Rule for P1026/4A-YES"
	when
		StepPerformed(stepId=="P1026/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/4A-YES"));
end
rule "Yes Step Rule for P1026/4A-NO"
	when
		StepPerformed(stepId=="P1026/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1026/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1026/4A-NO"));
end
rule "No Step Rule for P1026/4A-NO"
	when
		StepPerformed(stepId=="P1026/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1026/4A-NO"));
end
rule "Yes Step Rule for P1048/1A"
	when
		StepPerformed(stepId=="P1048/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1048/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1048/1A"));
end
rule "No Step Rule for P1048/1A"
	when
		StepPerformed(stepId=="P1048/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1048/1B",$sum.doubleValue() + 100.0,"Answered No to step P1048/1A"));
end
rule "Yes Step Rule for P1048/1A-YES"
	when
		StepPerformed(stepId=="P1048/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1048/1A-YES"));
end
rule "No Step Rule for P1048/1A-YES"
	when
		StepPerformed(stepId=="P1048/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1048/1A-YES"));
end
rule "Yes Step Rule for P1048/1A-NO"
	when
		StepPerformed(stepId=="P1048/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1048/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1048/1A-NO"));
end
rule "No Step Rule for P1048/1A-NO"
	when
		StepPerformed(stepId=="P1048/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1048/1A-NO"));
end
rule "Yes Step Rule for P1048/1B"
	when
		StepPerformed(stepId=="P1048/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1048/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1048/1B"));
end
rule "No Step Rule for P1048/1B"
	when
		StepPerformed(stepId=="P1048/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1048/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1048/1B"));
end
rule "Yes Step Rule for P1048/1B-YES"
	when
		StepPerformed(stepId=="P1048/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1048/1B-YES"));
end
rule "No Step Rule for P1048/1B-YES"
	when
		StepPerformed(stepId=="P1048/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1048/1B-YES"));
end
rule "Yes Step Rule for P1048/1B-NO"
	when
		StepPerformed(stepId=="P1048/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1048/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1048/1B-NO"));
end
rule "No Step Rule for P1048/1B-NO"
	when
		StepPerformed(stepId=="P1048/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1048/1B-NO"));
end
rule "Yes Step Rule for P1048/2A"
	when
		StepPerformed(stepId=="P1048/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1048/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1048/2A"));
end
rule "No Step Rule for P1048/2A"
	when
		StepPerformed(stepId=="P1048/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1048/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1048/2A"));
end
rule "Yes Step Rule for P1048/2A-YES"
	when
		StepPerformed(stepId=="P1048/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1048/2A-YES"));
end
rule "No Step Rule for P1048/2A-YES"
	when
		StepPerformed(stepId=="P1048/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1048/2A-YES"));
end
rule "Yes Step Rule for P1048/2A-NO"
	when
		StepPerformed(stepId=="P1048/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1048/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1048/2A-NO"));
end
rule "No Step Rule for P1048/2A-NO"
	when
		StepPerformed(stepId=="P1048/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1048/2A-NO"));
end
rule "Yes Step Rule for P1049/1A"
	when
		StepPerformed(stepId=="P1049/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1049/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1049/1A"));
end
rule "No Step Rule for P1049/1A"
	when
		StepPerformed(stepId=="P1049/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1049/1B",$sum.doubleValue() + 100.0,"Answered No to step P1049/1A"));
end
rule "Yes Step Rule for P1049/1A-YES"
	when
		StepPerformed(stepId=="P1049/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1049/1A-YES"));
end
rule "No Step Rule for P1049/1A-YES"
	when
		StepPerformed(stepId=="P1049/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1049/1A-YES"));
end
rule "Yes Step Rule for P1049/1A-NO"
	when
		StepPerformed(stepId=="P1049/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1049/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1049/1A-NO"));
end
rule "No Step Rule for P1049/1A-NO"
	when
		StepPerformed(stepId=="P1049/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1049/1A-NO"));
end
rule "Yes Step Rule for P1049/1B"
	when
		StepPerformed(stepId=="P1049/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1049/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1049/1B"));
end
rule "No Step Rule for P1049/1B"
	when
		StepPerformed(stepId=="P1049/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1049/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1049/1B"));
end
rule "Yes Step Rule for P1049/1B-YES"
	when
		StepPerformed(stepId=="P1049/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1049/1B-YES"));
end
rule "No Step Rule for P1049/1B-YES"
	when
		StepPerformed(stepId=="P1049/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1049/1B-YES"));
end
rule "Yes Step Rule for P1049/1B-NO"
	when
		StepPerformed(stepId=="P1049/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1049/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1049/1B-NO"));
end
rule "No Step Rule for P1049/1B-NO"
	when
		StepPerformed(stepId=="P1049/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1049/1B-NO"));
end
rule "Yes Step Rule for P1049/2A"
	when
		StepPerformed(stepId=="P1049/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1049/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1049/2A"));
end
rule "No Step Rule for P1049/2A"
	when
		StepPerformed(stepId=="P1049/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1049/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1049/2A"));
end
rule "Yes Step Rule for P1049/2A-YES"
	when
		StepPerformed(stepId=="P1049/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1049/2A-YES"));
end
rule "No Step Rule for P1049/2A-YES"
	when
		StepPerformed(stepId=="P1049/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1049/2A-YES"));
end
rule "Yes Step Rule for P1049/2A-NO"
	when
		StepPerformed(stepId=="P1049/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1049/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1049/2A-NO"));
end
rule "No Step Rule for P1049/2A-NO"
	when
		StepPerformed(stepId=="P1049/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1049/2A-NO"));
end
rule "Yes Step Rule for P1086/1A"
	when
		StepPerformed(stepId=="P1086/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/1A"));
end
rule "No Step Rule for P1086/1A"
	when
		StepPerformed(stepId=="P1086/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/1B",$sum.doubleValue() + 100.0,"Answered No to step P1086/1A"));
end
rule "Yes Step Rule for P1086/1A-YES"
	when
		StepPerformed(stepId=="P1086/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/1A-YES"));
end
rule "No Step Rule for P1086/1A-YES"
	when
		StepPerformed(stepId=="P1086/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1086/1A-YES"));
end
rule "Yes Step Rule for P1086/1A-NO"
	when
		StepPerformed(stepId=="P1086/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/1A-NO"));
end
rule "No Step Rule for P1086/1A-NO"
	when
		StepPerformed(stepId=="P1086/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1086/1A-NO"));
end
rule "Yes Step Rule for P1086/1B"
	when
		StepPerformed(stepId=="P1086/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/1B"));
end
rule "No Step Rule for P1086/1B"
	when
		StepPerformed(stepId=="P1086/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/2A",$sum.doubleValue() + 100.0,"Answered No to step P1086/1B"));
end
rule "Yes Step Rule for P1086/1B-YES"
	when
		StepPerformed(stepId=="P1086/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/1B-YES"));
end
rule "No Step Rule for P1086/1B-YES"
	when
		StepPerformed(stepId=="P1086/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1086/1B-YES"));
end
rule "Yes Step Rule for P1086/1B-NO"
	when
		StepPerformed(stepId=="P1086/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/1B-NO"));
end
rule "No Step Rule for P1086/1B-NO"
	when
		StepPerformed(stepId=="P1086/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1086/1B-NO"));
end
rule "Yes Step Rule for P1086/2A"
	when
		StepPerformed(stepId=="P1086/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/2A"));
end
rule "No Step Rule for P1086/2A"
	when
		StepPerformed(stepId=="P1086/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/3A",$sum.doubleValue() + 100.0,"Answered No to step P1086/2A"));
end
rule "Yes Step Rule for P1086/2A-YES"
	when
		StepPerformed(stepId=="P1086/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/2A-YES"));
end
rule "No Step Rule for P1086/2A-YES"
	when
		StepPerformed(stepId=="P1086/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1086/2A-YES"));
end
rule "Yes Step Rule for P1086/2A-NO"
	when
		StepPerformed(stepId=="P1086/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/2A-NO"));
end
rule "No Step Rule for P1086/2A-NO"
	when
		StepPerformed(stepId=="P1086/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1086/2A-NO"));
end
rule "Yes Step Rule for P1086/3A"
	when
		StepPerformed(stepId=="P1086/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/3A"));
end
rule "No Step Rule for P1086/3A"
	when
		StepPerformed(stepId=="P1086/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1086/3A"));
end
rule "Yes Step Rule for P1086/3A-YES"
	when
		StepPerformed(stepId=="P1086/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/3A-YES"));
end
rule "No Step Rule for P1086/3A-YES"
	when
		StepPerformed(stepId=="P1086/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1086/3A-YES"));
end
rule "Yes Step Rule for P1086/3A-NO"
	when
		StepPerformed(stepId=="P1086/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1086/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1086/3A-NO"));
end
rule "No Step Rule for P1086/3A-NO"
	when
		StepPerformed(stepId=="P1086/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1086/3A-NO"));
end
rule "Yes Step Rule for P1091/1A"
	when
		StepPerformed(stepId=="P1091/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/1A"));
end
rule "No Step Rule for P1091/1A"
	when
		StepPerformed(stepId=="P1091/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1091/1A"));
end
rule "Yes Step Rule for P1091/1A-YES"
	when
		StepPerformed(stepId=="P1091/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/1A-YES"));
end
rule "No Step Rule for P1091/1A-YES"
	when
		StepPerformed(stepId=="P1091/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1091/1A-YES"));
end
rule "Yes Step Rule for P1091/1A-NO"
	when
		StepPerformed(stepId=="P1091/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/1A-NO"));
end
rule "No Step Rule for P1091/1A-NO"
	when
		StepPerformed(stepId=="P1091/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1091/1A-NO"));
end
rule "Yes Step Rule for P1091/2A"
	when
		StepPerformed(stepId=="P1091/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/2A"));
end
rule "No Step Rule for P1091/2A"
	when
		StepPerformed(stepId=="P1091/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/3A",$sum.doubleValue() + 100.0,"Answered No to step P1091/2A"));
end
rule "Yes Step Rule for P1091/2A-YES"
	when
		StepPerformed(stepId=="P1091/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/2A-YES"));
end
rule "No Step Rule for P1091/2A-YES"
	when
		StepPerformed(stepId=="P1091/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1091/2A-YES"));
end
rule "Yes Step Rule for P1091/2A-NO"
	when
		StepPerformed(stepId=="P1091/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/2A-NO"));
end
rule "No Step Rule for P1091/2A-NO"
	when
		StepPerformed(stepId=="P1091/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1091/2A-NO"));
end
rule "Yes Step Rule for P1091/3A"
	when
		StepPerformed(stepId=="P1091/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/3A"));
end
rule "No Step Rule for P1091/3A"
	when
		StepPerformed(stepId=="P1091/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1091/3A"));
end
rule "Yes Step Rule for P1091/3A-YES"
	when
		StepPerformed(stepId=="P1091/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/3A-YES"));
end
rule "No Step Rule for P1091/3A-YES"
	when
		StepPerformed(stepId=="P1091/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1091/3A-YES"));
end
rule "Yes Step Rule for P1091/3A-NO"
	when
		StepPerformed(stepId=="P1091/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/3A-NO"));
end
rule "No Step Rule for P1091/3A-NO"
	when
		StepPerformed(stepId=="P1091/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1091/3A-NO"));
end
rule "Yes Step Rule for P1091/4A"
	when
		StepPerformed(stepId=="P1091/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/4A"));
end
rule "No Step Rule for P1091/4A"
	when
		StepPerformed(stepId=="P1091/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1091/4A"));
end
rule "Yes Step Rule for P1091/4A-YES"
	when
		StepPerformed(stepId=="P1091/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/4A-YES"));
end
rule "No Step Rule for P1091/4A-YES"
	when
		StepPerformed(stepId=="P1091/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1091/4A-YES"));
end
rule "Yes Step Rule for P1091/4A-NO"
	when
		StepPerformed(stepId=="P1091/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1091/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1091/4A-NO"));
end
rule "No Step Rule for P1091/4A-NO"
	when
		StepPerformed(stepId=="P1091/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1091/4A-NO"));
end
rule "Yes Step Rule for P1230/1A"
	when
		StepPerformed(stepId=="P1230/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/1A"));
end
rule "No Step Rule for P1230/1A"
	when
		StepPerformed(stepId=="P1230/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1230/1A"));
end
rule "Yes Step Rule for P1230/1A-YES"
	when
		StepPerformed(stepId=="P1230/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/1A-YES"));
end
rule "No Step Rule for P1230/1A-YES"
	when
		StepPerformed(stepId=="P1230/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/1A-YES"));
end
rule "Yes Step Rule for P1230/1A-NO"
	when
		StepPerformed(stepId=="P1230/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/1A-NO"));
end
rule "No Step Rule for P1230/1A-NO"
	when
		StepPerformed(stepId=="P1230/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/1A-NO"));
end
rule "Yes Step Rule for P1230/1B"
	when
		StepPerformed(stepId=="P1230/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/1B"));
end
rule "No Step Rule for P1230/1B"
	when
		StepPerformed(stepId=="P1230/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3A",$sum.doubleValue() + 100.0,"Answered No to step P1230/1B"));
end
rule "Yes Step Rule for P1230/1B-YES"
	when
		StepPerformed(stepId=="P1230/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/1B-YES"));
end
rule "No Step Rule for P1230/1B-YES"
	when
		StepPerformed(stepId=="P1230/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/1B-YES"));
end
rule "Yes Step Rule for P1230/1B-NO"
	when
		StepPerformed(stepId=="P1230/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/1B-NO"));
end
rule "No Step Rule for P1230/1B-NO"
	when
		StepPerformed(stepId=="P1230/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/1B-NO"));
end
rule "Yes Step Rule for P1230/2A"
	when
		StepPerformed(stepId=="P1230/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/2A"));
end
rule "No Step Rule for P1230/2A"
	when
		StepPerformed(stepId=="P1230/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4A",$sum.doubleValue() + 100.0,"Answered No to step P1230/2A"));
end
rule "Yes Step Rule for P1230/2A-YES"
	when
		StepPerformed(stepId=="P1230/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/2A-YES"));
end
rule "No Step Rule for P1230/2A-YES"
	when
		StepPerformed(stepId=="P1230/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/2A-YES"));
end
rule "Yes Step Rule for P1230/2A-NO"
	when
		StepPerformed(stepId=="P1230/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/2A-NO"));
end
rule "No Step Rule for P1230/2A-NO"
	when
		StepPerformed(stepId=="P1230/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/2A-NO"));
end
rule "Yes Step Rule for P1230/2B"
	when
		StepPerformed(stepId=="P1230/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/2B"));
end
rule "No Step Rule for P1230/2B"
	when
		StepPerformed(stepId=="P1230/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4A",$sum.doubleValue() + 100.0,"Answered No to step P1230/2B"));
end
rule "Yes Step Rule for P1230/2B-YES"
	when
		StepPerformed(stepId=="P1230/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/2B-YES"));
end
rule "No Step Rule for P1230/2B-YES"
	when
		StepPerformed(stepId=="P1230/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/2B-YES"));
end
rule "Yes Step Rule for P1230/2B-NO"
	when
		StepPerformed(stepId=="P1230/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/2B-NO"));
end
rule "No Step Rule for P1230/2B-NO"
	when
		StepPerformed(stepId=="P1230/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/2B-NO"));
end
rule "Yes Step Rule for P1230/3A"
	when
		StepPerformed(stepId=="P1230/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3A"));
end
rule "No Step Rule for P1230/3A"
	when
		StepPerformed(stepId=="P1230/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3B",$sum.doubleValue() + 100.0,"Answered No to step P1230/3A"));
end
rule "Yes Step Rule for P1230/3A-YES"
	when
		StepPerformed(stepId=="P1230/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3A-YES"));
end
rule "No Step Rule for P1230/3A-YES"
	when
		StepPerformed(stepId=="P1230/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/3A-YES"));
end
rule "Yes Step Rule for P1230/3A-NO"
	when
		StepPerformed(stepId=="P1230/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3A-NO"));
end
rule "No Step Rule for P1230/3A-NO"
	when
		StepPerformed(stepId=="P1230/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/3A-NO"));
end
rule "Yes Step Rule for P1230/3B"
	when
		StepPerformed(stepId=="P1230/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3B"));
end
rule "No Step Rule for P1230/3B"
	when
		StepPerformed(stepId=="P1230/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3C",$sum.doubleValue() + 100.0,"Answered No to step P1230/3B"));
end
rule "Yes Step Rule for P1230/3B-YES"
	when
		StepPerformed(stepId=="P1230/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3B-YES"));
end
rule "No Step Rule for P1230/3B-YES"
	when
		StepPerformed(stepId=="P1230/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/3B-YES"));
end
rule "Yes Step Rule for P1230/3B-NO"
	when
		StepPerformed(stepId=="P1230/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3B-NO"));
end
rule "No Step Rule for P1230/3B-NO"
	when
		StepPerformed(stepId=="P1230/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/3B-NO"));
end
rule "Yes Step Rule for P1230/3C"
	when
		StepPerformed(stepId=="P1230/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3D",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3C"));
end
rule "No Step Rule for P1230/3C"
	when
		StepPerformed(stepId=="P1230/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1230/3C"));
end
rule "Yes Step Rule for P1230/3C-YES"
	when
		StepPerformed(stepId=="P1230/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3D",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3C-YES"));
end
rule "No Step Rule for P1230/3C-YES"
	when
		StepPerformed(stepId=="P1230/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/3C-YES"));
end
rule "Yes Step Rule for P1230/3C-NO"
	when
		StepPerformed(stepId=="P1230/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3C-NO"));
end
rule "No Step Rule for P1230/3C-NO"
	when
		StepPerformed(stepId=="P1230/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/3C-NO"));
end
rule "Yes Step Rule for P1230/3D"
	when
		StepPerformed(stepId=="P1230/3D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3D"));
end
rule "No Step Rule for P1230/3D"
	when
		StepPerformed(stepId=="P1230/3D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/3D-NO",$sum.doubleValue() + 100.0,"Answered No to step P1230/3D"));
end
rule "Yes Step Rule for P1230/3D-YES"
	when
		StepPerformed(stepId=="P1230/3D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3D-YES"));
end
rule "No Step Rule for P1230/3D-YES"
	when
		StepPerformed(stepId=="P1230/3D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/3D-YES"));
end
rule "Yes Step Rule for P1230/3D-NO"
	when
		StepPerformed(stepId=="P1230/3D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/3D-NO"));
end
rule "No Step Rule for P1230/3D-NO"
	when
		StepPerformed(stepId=="P1230/3D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/3D-NO"));
end
rule "Yes Step Rule for P1230/4A"
	when
		StepPerformed(stepId=="P1230/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/4A"));
end
rule "No Step Rule for P1230/4A"
	when
		StepPerformed(stepId=="P1230/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4B",$sum.doubleValue() + 100.0,"Answered No to step P1230/4A"));
end
rule "Yes Step Rule for P1230/4A-YES"
	when
		StepPerformed(stepId=="P1230/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/4A-YES"));
end
rule "No Step Rule for P1230/4A-YES"
	when
		StepPerformed(stepId=="P1230/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/4A-YES"));
end
rule "Yes Step Rule for P1230/4A-NO"
	when
		StepPerformed(stepId=="P1230/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/4A-NO"));
end
rule "No Step Rule for P1230/4A-NO"
	when
		StepPerformed(stepId=="P1230/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/4A-NO"));
end
rule "Yes Step Rule for P1230/4B"
	when
		StepPerformed(stepId=="P1230/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4C",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/4B"));
end
rule "No Step Rule for P1230/4B"
	when
		StepPerformed(stepId=="P1230/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1230/4B"));
end
rule "Yes Step Rule for P1230/4B-YES"
	when
		StepPerformed(stepId=="P1230/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4C",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/4B-YES"));
end
rule "No Step Rule for P1230/4B-YES"
	when
		StepPerformed(stepId=="P1230/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/4B-YES"));
end
rule "Yes Step Rule for P1230/4B-NO"
	when
		StepPerformed(stepId=="P1230/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/4B-NO"));
end
rule "No Step Rule for P1230/4B-NO"
	when
		StepPerformed(stepId=="P1230/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/4B-NO"));
end
rule "Yes Step Rule for P1230/4C"
	when
		StepPerformed(stepId=="P1230/4C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/4C"));
end
rule "No Step Rule for P1230/4C"
	when
		StepPerformed(stepId=="P1230/4C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/4C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1230/4C"));
end
rule "Yes Step Rule for P1230/4C-YES"
	when
		StepPerformed(stepId=="P1230/4C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/4C-YES"));
end
rule "No Step Rule for P1230/4C-YES"
	when
		StepPerformed(stepId=="P1230/4C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/4C-YES"));
end
rule "Yes Step Rule for P1230/4C-NO"
	when
		StepPerformed(stepId=="P1230/4C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/4C-NO"));
end
rule "No Step Rule for P1230/4C-NO"
	when
		StepPerformed(stepId=="P1230/4C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/4C-NO"));
end
rule "Yes Step Rule for P1230/5A"
	when
		StepPerformed(stepId=="P1230/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/5A"));
end
rule "No Step Rule for P1230/5A"
	when
		StepPerformed(stepId=="P1230/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1230/5A"));
end
rule "Yes Step Rule for P1230/5A-YES"
	when
		StepPerformed(stepId=="P1230/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/5A-YES"));
end
rule "No Step Rule for P1230/5A-YES"
	when
		StepPerformed(stepId=="P1230/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/5A-YES"));
end
rule "Yes Step Rule for P1230/5A-NO"
	when
		StepPerformed(stepId=="P1230/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1230/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1230/5A-NO"));
end
rule "No Step Rule for P1230/5A-NO"
	when
		StepPerformed(stepId=="P1230/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1230/5A-NO"));
end
rule "Yes Step Rule for P1234/1A"
	when
		StepPerformed(stepId=="P1234/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/1A"));
end
rule "No Step Rule for P1234/1A"
	when
		StepPerformed(stepId=="P1234/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1234/1A"));
end
rule "Yes Step Rule for P1234/1A-YES"
	when
		StepPerformed(stepId=="P1234/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/1A-YES"));
end
rule "No Step Rule for P1234/1A-YES"
	when
		StepPerformed(stepId=="P1234/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/1A-YES"));
end
rule "Yes Step Rule for P1234/1A-NO"
	when
		StepPerformed(stepId=="P1234/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/1A-NO"));
end
rule "No Step Rule for P1234/1A-NO"
	when
		StepPerformed(stepId=="P1234/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/1A-NO"));
end
rule "Yes Step Rule for P1234/1B"
	when
		StepPerformed(stepId=="P1234/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/1B"));
end
rule "No Step Rule for P1234/1B"
	when
		StepPerformed(stepId=="P1234/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3A",$sum.doubleValue() + 100.0,"Answered No to step P1234/1B"));
end
rule "Yes Step Rule for P1234/1B-YES"
	when
		StepPerformed(stepId=="P1234/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/1B-YES"));
end
rule "No Step Rule for P1234/1B-YES"
	when
		StepPerformed(stepId=="P1234/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/1B-YES"));
end
rule "Yes Step Rule for P1234/1B-NO"
	when
		StepPerformed(stepId=="P1234/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/1B-NO"));
end
rule "No Step Rule for P1234/1B-NO"
	when
		StepPerformed(stepId=="P1234/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/1B-NO"));
end
rule "Yes Step Rule for P1234/2A"
	when
		StepPerformed(stepId=="P1234/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/2A"));
end
rule "No Step Rule for P1234/2A"
	when
		StepPerformed(stepId=="P1234/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4A",$sum.doubleValue() + 100.0,"Answered No to step P1234/2A"));
end
rule "Yes Step Rule for P1234/2A-YES"
	when
		StepPerformed(stepId=="P1234/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/2A-YES"));
end
rule "No Step Rule for P1234/2A-YES"
	when
		StepPerformed(stepId=="P1234/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/2A-YES"));
end
rule "Yes Step Rule for P1234/2A-NO"
	when
		StepPerformed(stepId=="P1234/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/2A-NO"));
end
rule "No Step Rule for P1234/2A-NO"
	when
		StepPerformed(stepId=="P1234/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/2A-NO"));
end
rule "Yes Step Rule for P1234/2B"
	when
		StepPerformed(stepId=="P1234/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/2B"));
end
rule "No Step Rule for P1234/2B"
	when
		StepPerformed(stepId=="P1234/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4A",$sum.doubleValue() + 100.0,"Answered No to step P1234/2B"));
end
rule "Yes Step Rule for P1234/2B-YES"
	when
		StepPerformed(stepId=="P1234/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/2B-YES"));
end
rule "No Step Rule for P1234/2B-YES"
	when
		StepPerformed(stepId=="P1234/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/2B-YES"));
end
rule "Yes Step Rule for P1234/2B-NO"
	when
		StepPerformed(stepId=="P1234/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/2B-NO"));
end
rule "No Step Rule for P1234/2B-NO"
	when
		StepPerformed(stepId=="P1234/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/2B-NO"));
end
rule "Yes Step Rule for P1234/3A"
	when
		StepPerformed(stepId=="P1234/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3A"));
end
rule "No Step Rule for P1234/3A"
	when
		StepPerformed(stepId=="P1234/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3B",$sum.doubleValue() + 100.0,"Answered No to step P1234/3A"));
end
rule "Yes Step Rule for P1234/3A-YES"
	when
		StepPerformed(stepId=="P1234/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3A-YES"));
end
rule "No Step Rule for P1234/3A-YES"
	when
		StepPerformed(stepId=="P1234/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/3A-YES"));
end
rule "Yes Step Rule for P1234/3A-NO"
	when
		StepPerformed(stepId=="P1234/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3A-NO"));
end
rule "No Step Rule for P1234/3A-NO"
	when
		StepPerformed(stepId=="P1234/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/3A-NO"));
end
rule "Yes Step Rule for P1234/3B"
	when
		StepPerformed(stepId=="P1234/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3B"));
end
rule "No Step Rule for P1234/3B"
	when
		StepPerformed(stepId=="P1234/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3C",$sum.doubleValue() + 100.0,"Answered No to step P1234/3B"));
end
rule "Yes Step Rule for P1234/3B-YES"
	when
		StepPerformed(stepId=="P1234/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3B-YES"));
end
rule "No Step Rule for P1234/3B-YES"
	when
		StepPerformed(stepId=="P1234/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/3B-YES"));
end
rule "Yes Step Rule for P1234/3B-NO"
	when
		StepPerformed(stepId=="P1234/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3B-NO"));
end
rule "No Step Rule for P1234/3B-NO"
	when
		StepPerformed(stepId=="P1234/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/3B-NO"));
end
rule "Yes Step Rule for P1234/3C"
	when
		StepPerformed(stepId=="P1234/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3D",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3C"));
end
rule "No Step Rule for P1234/3C"
	when
		StepPerformed(stepId=="P1234/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1234/3C"));
end
rule "Yes Step Rule for P1234/3C-YES"
	when
		StepPerformed(stepId=="P1234/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3D",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3C-YES"));
end
rule "No Step Rule for P1234/3C-YES"
	when
		StepPerformed(stepId=="P1234/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/3C-YES"));
end
rule "Yes Step Rule for P1234/3C-NO"
	when
		StepPerformed(stepId=="P1234/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3C-NO"));
end
rule "No Step Rule for P1234/3C-NO"
	when
		StepPerformed(stepId=="P1234/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/3C-NO"));
end
rule "Yes Step Rule for P1234/3D"
	when
		StepPerformed(stepId=="P1234/3D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3D"));
end
rule "No Step Rule for P1234/3D"
	when
		StepPerformed(stepId=="P1234/3D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/3D-NO",$sum.doubleValue() + 100.0,"Answered No to step P1234/3D"));
end
rule "Yes Step Rule for P1234/3D-YES"
	when
		StepPerformed(stepId=="P1234/3D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3D-YES"));
end
rule "No Step Rule for P1234/3D-YES"
	when
		StepPerformed(stepId=="P1234/3D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/3D-YES"));
end
rule "Yes Step Rule for P1234/3D-NO"
	when
		StepPerformed(stepId=="P1234/3D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/3D-NO"));
end
rule "No Step Rule for P1234/3D-NO"
	when
		StepPerformed(stepId=="P1234/3D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/3D-NO"));
end
rule "Yes Step Rule for P1234/4A"
	when
		StepPerformed(stepId=="P1234/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/4A"));
end
rule "No Step Rule for P1234/4A"
	when
		StepPerformed(stepId=="P1234/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4B",$sum.doubleValue() + 100.0,"Answered No to step P1234/4A"));
end
rule "Yes Step Rule for P1234/4A-YES"
	when
		StepPerformed(stepId=="P1234/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/4A-YES"));
end
rule "No Step Rule for P1234/4A-YES"
	when
		StepPerformed(stepId=="P1234/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/4A-YES"));
end
rule "Yes Step Rule for P1234/4A-NO"
	when
		StepPerformed(stepId=="P1234/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/4A-NO"));
end
rule "No Step Rule for P1234/4A-NO"
	when
		StepPerformed(stepId=="P1234/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/4A-NO"));
end
rule "Yes Step Rule for P1234/4B"
	when
		StepPerformed(stepId=="P1234/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4C",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/4B"));
end
rule "No Step Rule for P1234/4B"
	when
		StepPerformed(stepId=="P1234/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1234/4B"));
end
rule "Yes Step Rule for P1234/4B-YES"
	when
		StepPerformed(stepId=="P1234/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4C",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/4B-YES"));
end
rule "No Step Rule for P1234/4B-YES"
	when
		StepPerformed(stepId=="P1234/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/4B-YES"));
end
rule "Yes Step Rule for P1234/4B-NO"
	when
		StepPerformed(stepId=="P1234/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/4B-NO"));
end
rule "No Step Rule for P1234/4B-NO"
	when
		StepPerformed(stepId=="P1234/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/4B-NO"));
end
rule "Yes Step Rule for P1234/4C"
	when
		StepPerformed(stepId=="P1234/4C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/4C"));
end
rule "No Step Rule for P1234/4C"
	when
		StepPerformed(stepId=="P1234/4C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/4C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1234/4C"));
end
rule "Yes Step Rule for P1234/4C-YES"
	when
		StepPerformed(stepId=="P1234/4C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/4C-YES"));
end
rule "No Step Rule for P1234/4C-YES"
	when
		StepPerformed(stepId=="P1234/4C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/4C-YES"));
end
rule "Yes Step Rule for P1234/4C-NO"
	when
		StepPerformed(stepId=="P1234/4C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/4C-NO"));
end
rule "No Step Rule for P1234/4C-NO"
	when
		StepPerformed(stepId=="P1234/4C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/4C-NO"));
end
rule "Yes Step Rule for P1234/5A"
	when
		StepPerformed(stepId=="P1234/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/5A"));
end
rule "No Step Rule for P1234/5A"
	when
		StepPerformed(stepId=="P1234/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1234/5A"));
end
rule "Yes Step Rule for P1234/5A-YES"
	when
		StepPerformed(stepId=="P1234/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/5A-YES"));
end
rule "No Step Rule for P1234/5A-YES"
	when
		StepPerformed(stepId=="P1234/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/5A-YES"));
end
rule "Yes Step Rule for P1234/5A-NO"
	when
		StepPerformed(stepId=="P1234/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1234/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1234/5A-NO"));
end
rule "No Step Rule for P1234/5A-NO"
	when
		StepPerformed(stepId=="P1234/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1234/5A-NO"));
end
rule "Yes Step Rule for P1352/1A"
	when
		StepPerformed(stepId=="P1352/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/1A"));
end
rule "No Step Rule for P1352/1A"
	when
		StepPerformed(stepId=="P1352/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/1B",$sum.doubleValue() + 100.0,"Answered No to step P1352/1A"));
end
rule "Yes Step Rule for P1352/1A-YES"
	when
		StepPerformed(stepId=="P1352/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/1A-YES"));
end
rule "No Step Rule for P1352/1A-YES"
	when
		StepPerformed(stepId=="P1352/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/1A-YES"));
end
rule "Yes Step Rule for P1352/1A-NO"
	when
		StepPerformed(stepId=="P1352/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/1A-NO"));
end
rule "No Step Rule for P1352/1A-NO"
	when
		StepPerformed(stepId=="P1352/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/1A-NO"));
end
rule "Yes Step Rule for P1352/1B"
	when
		StepPerformed(stepId=="P1352/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/1B"));
end
rule "No Step Rule for P1352/1B"
	when
		StepPerformed(stepId=="P1352/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1352/1B"));
end
rule "Yes Step Rule for P1352/1B-YES"
	when
		StepPerformed(stepId=="P1352/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/1B-YES"));
end
rule "No Step Rule for P1352/1B-YES"
	when
		StepPerformed(stepId=="P1352/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/1B-YES"));
end
rule "Yes Step Rule for P1352/1B-NO"
	when
		StepPerformed(stepId=="P1352/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/1B-NO"));
end
rule "No Step Rule for P1352/1B-NO"
	when
		StepPerformed(stepId=="P1352/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/1B-NO"));
end
rule "Yes Step Rule for P1352/2A"
	when
		StepPerformed(stepId=="P1352/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/2A"));
end
rule "No Step Rule for P1352/2A"
	when
		StepPerformed(stepId=="P1352/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1352/2A"));
end
rule "Yes Step Rule for P1352/2A-YES"
	when
		StepPerformed(stepId=="P1352/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/2A-YES"));
end
rule "No Step Rule for P1352/2A-YES"
	when
		StepPerformed(stepId=="P1352/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/2A-YES"));
end
rule "Yes Step Rule for P1352/2A-NO"
	when
		StepPerformed(stepId=="P1352/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/2A-NO"));
end
rule "No Step Rule for P1352/2A-NO"
	when
		StepPerformed(stepId=="P1352/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/2A-NO"));
end
rule "Yes Step Rule for P1352/3A"
	when
		StepPerformed(stepId=="P1352/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/3A"));
end
rule "No Step Rule for P1352/3A"
	when
		StepPerformed(stepId=="P1352/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/4A",$sum.doubleValue() + 100.0,"Answered No to step P1352/3A"));
end
rule "Yes Step Rule for P1352/3A-YES"
	when
		StepPerformed(stepId=="P1352/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/3A-YES"));
end
rule "No Step Rule for P1352/3A-YES"
	when
		StepPerformed(stepId=="P1352/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/3A-YES"));
end
rule "Yes Step Rule for P1352/3A-NO"
	when
		StepPerformed(stepId=="P1352/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/3A-NO"));
end
rule "No Step Rule for P1352/3A-NO"
	when
		StepPerformed(stepId=="P1352/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/3A-NO"));
end
rule "Yes Step Rule for P1352/4A"
	when
		StepPerformed(stepId=="P1352/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/4A"));
end
rule "No Step Rule for P1352/4A"
	when
		StepPerformed(stepId=="P1352/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1352/4A"));
end
rule "Yes Step Rule for P1352/4A-YES"
	when
		StepPerformed(stepId=="P1352/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/4A-YES"));
end
rule "No Step Rule for P1352/4A-YES"
	when
		StepPerformed(stepId=="P1352/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/4A-YES"));
end
rule "Yes Step Rule for P1352/4A-NO"
	when
		StepPerformed(stepId=="P1352/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/4A-NO"));
end
rule "No Step Rule for P1352/4A-NO"
	when
		StepPerformed(stepId=="P1352/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/4A-NO"));
end
rule "Yes Step Rule for P1352/4B"
	when
		StepPerformed(stepId=="P1352/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/4B"));
end
rule "No Step Rule for P1352/4B"
	when
		StepPerformed(stepId=="P1352/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/4C",$sum.doubleValue() + 100.0,"Answered No to step P1352/4B"));
end
rule "Yes Step Rule for P1352/4B-YES"
	when
		StepPerformed(stepId=="P1352/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/4B-YES"));
end
rule "No Step Rule for P1352/4B-YES"
	when
		StepPerformed(stepId=="P1352/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/4B-YES"));
end
rule "Yes Step Rule for P1352/4B-NO"
	when
		StepPerformed(stepId=="P1352/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/4C",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/4B-NO"));
end
rule "No Step Rule for P1352/4B-NO"
	when
		StepPerformed(stepId=="P1352/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/4B-NO"));
end
rule "Yes Step Rule for P1352/4C"
	when
		StepPerformed(stepId=="P1352/4C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/4C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/4C"));
end
rule "No Step Rule for P1352/4C"
	when
		StepPerformed(stepId=="P1352/4C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A",$sum.doubleValue() + 100.0,"Answered No to step P1352/4C"));
end
rule "Yes Step Rule for P1352/4C-YES"
	when
		StepPerformed(stepId=="P1352/4C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/4C-YES"));
end
rule "No Step Rule for P1352/4C-YES"
	when
		StepPerformed(stepId=="P1352/4C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/4C-YES"));
end
rule "Yes Step Rule for P1352/4C-NO"
	when
		StepPerformed(stepId=="P1352/4C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/4C-NO"));
end
rule "No Step Rule for P1352/4C-NO"
	when
		StepPerformed(stepId=="P1352/4C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/4C-NO"));
end
rule "Yes Step Rule for P1352/5A"
	when
		StepPerformed(stepId=="P1352/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/5A"));
end
rule "No Step Rule for P1352/5A"
	when
		StepPerformed(stepId=="P1352/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1352/5A"));
end
rule "Yes Step Rule for P1352/5A-YES"
	when
		StepPerformed(stepId=="P1352/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/5A-YES"));
end
rule "No Step Rule for P1352/5A-YES"
	when
		StepPerformed(stepId=="P1352/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/5A-YES"));
end
rule "Yes Step Rule for P1352/5A-NO"
	when
		StepPerformed(stepId=="P1352/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1352/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1352/5A-NO"));
end
rule "No Step Rule for P1352/5A-NO"
	when
		StepPerformed(stepId=="P1352/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1352/5A-NO"));
end
rule "Yes Step Rule for P1354/1A"
	when
		StepPerformed(stepId=="P1354/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/1A"));
end
rule "No Step Rule for P1354/1A"
	when
		StepPerformed(stepId=="P1354/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2B",$sum.doubleValue() + 100.0,"Answered No to step P1354/1A"));
end
rule "Yes Step Rule for P1354/1A-YES"
	when
		StepPerformed(stepId=="P1354/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/1A-YES"));
end
rule "No Step Rule for P1354/1A-YES"
	when
		StepPerformed(stepId=="P1354/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/1A-YES"));
end
rule "Yes Step Rule for P1354/1A-NO"
	when
		StepPerformed(stepId=="P1354/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/1A-NO"));
end
rule "No Step Rule for P1354/1A-NO"
	when
		StepPerformed(stepId=="P1354/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/1A-NO"));
end
rule "Yes Step Rule for P1354/2A"
	when
		StepPerformed(stepId=="P1354/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/2A"));
end
rule "No Step Rule for P1354/2A"
	when
		StepPerformed(stepId=="P1354/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2B",$sum.doubleValue() + 100.0,"Answered No to step P1354/2A"));
end
rule "Yes Step Rule for P1354/2A-YES"
	when
		StepPerformed(stepId=="P1354/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/2A-YES"));
end
rule "No Step Rule for P1354/2A-YES"
	when
		StepPerformed(stepId=="P1354/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/2A-YES"));
end
rule "Yes Step Rule for P1354/2A-NO"
	when
		StepPerformed(stepId=="P1354/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/2A-NO"));
end
rule "No Step Rule for P1354/2A-NO"
	when
		StepPerformed(stepId=="P1354/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/2A-NO"));
end
rule "Yes Step Rule for P1354/2B"
	when
		StepPerformed(stepId=="P1354/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/2B"));
end
rule "No Step Rule for P1354/2B"
	when
		StepPerformed(stepId=="P1354/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2C",$sum.doubleValue() + 100.0,"Answered No to step P1354/2B"));
end
rule "Yes Step Rule for P1354/2B-YES"
	when
		StepPerformed(stepId=="P1354/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/2B-YES"));
end
rule "No Step Rule for P1354/2B-YES"
	when
		StepPerformed(stepId=="P1354/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/2B-YES"));
end
rule "Yes Step Rule for P1354/2B-NO"
	when
		StepPerformed(stepId=="P1354/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/2B-NO"));
end
rule "No Step Rule for P1354/2B-NO"
	when
		StepPerformed(stepId=="P1354/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/2B-NO"));
end
rule "Yes Step Rule for P1354/2C"
	when
		StepPerformed(stepId=="P1354/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/2C"));
end
rule "No Step Rule for P1354/2C"
	when
		StepPerformed(stepId=="P1354/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1354/2C"));
end
rule "Yes Step Rule for P1354/2C-YES"
	when
		StepPerformed(stepId=="P1354/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/2C-YES"));
end
rule "No Step Rule for P1354/2C-YES"
	when
		StepPerformed(stepId=="P1354/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/2C-YES"));
end
rule "Yes Step Rule for P1354/2C-NO"
	when
		StepPerformed(stepId=="P1354/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/2C-NO"));
end
rule "No Step Rule for P1354/2C-NO"
	when
		StepPerformed(stepId=="P1354/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/2C-NO"));
end
rule "Yes Step Rule for P1354/3A"
	when
		StepPerformed(stepId=="P1354/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/3A"));
end
rule "No Step Rule for P1354/3A"
	when
		StepPerformed(stepId=="P1354/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1354/3A"));
end
rule "Yes Step Rule for P1354/3A-YES"
	when
		StepPerformed(stepId=="P1354/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/3A-YES"));
end
rule "No Step Rule for P1354/3A-YES"
	when
		StepPerformed(stepId=="P1354/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/3A-YES"));
end
rule "Yes Step Rule for P1354/3A-NO"
	when
		StepPerformed(stepId=="P1354/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1354/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1354/3A-NO"));
end
rule "No Step Rule for P1354/3A-NO"
	when
		StepPerformed(stepId=="P1354/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1354/3A-NO"));
end
rule "Yes Step Rule for P1356/1A"
	when
		StepPerformed(stepId=="P1356/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/1A"));
end
rule "No Step Rule for P1356/1A"
	when
		StepPerformed(stepId=="P1356/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/2A",$sum.doubleValue() + 100.0,"Answered No to step P1356/1A"));
end
rule "Yes Step Rule for P1356/1A-YES"
	when
		StepPerformed(stepId=="P1356/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/1A-YES"));
end
rule "No Step Rule for P1356/1A-YES"
	when
		StepPerformed(stepId=="P1356/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/1A-YES"));
end
rule "Yes Step Rule for P1356/1A-NO"
	when
		StepPerformed(stepId=="P1356/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/1A-NO"));
end
rule "No Step Rule for P1356/1A-NO"
	when
		StepPerformed(stepId=="P1356/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/1A-NO"));
end
rule "Yes Step Rule for P1356/2A"
	when
		StepPerformed(stepId=="P1356/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/2A"));
end
rule "No Step Rule for P1356/2A"
	when
		StepPerformed(stepId=="P1356/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/5A",$sum.doubleValue() + 100.0,"Answered No to step P1356/2A"));
end
rule "Yes Step Rule for P1356/2A-YES"
	when
		StepPerformed(stepId=="P1356/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/2A-YES"));
end
rule "No Step Rule for P1356/2A-YES"
	when
		StepPerformed(stepId=="P1356/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/2A-YES"));
end
rule "Yes Step Rule for P1356/2A-NO"
	when
		StepPerformed(stepId=="P1356/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/2A-NO"));
end
rule "No Step Rule for P1356/2A-NO"
	when
		StepPerformed(stepId=="P1356/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/2A-NO"));
end
rule "Yes Step Rule for P1356/3A"
	when
		StepPerformed(stepId=="P1356/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/3A"));
end
rule "No Step Rule for P1356/3A"
	when
		StepPerformed(stepId=="P1356/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1356/3A"));
end
rule "Yes Step Rule for P1356/3A-YES"
	when
		StepPerformed(stepId=="P1356/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/3A-YES"));
end
rule "No Step Rule for P1356/3A-YES"
	when
		StepPerformed(stepId=="P1356/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/3A-YES"));
end
rule "Yes Step Rule for P1356/3A-NO"
	when
		StepPerformed(stepId=="P1356/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/3A-NO"));
end
rule "No Step Rule for P1356/3A-NO"
	when
		StepPerformed(stepId=="P1356/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/3A-NO"));
end
rule "Yes Step Rule for P1356/3B"
	when
		StepPerformed(stepId=="P1356/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/3B"));
end
rule "No Step Rule for P1356/3B"
	when
		StepPerformed(stepId=="P1356/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1356/3B"));
end
rule "Yes Step Rule for P1356/3B-YES"
	when
		StepPerformed(stepId=="P1356/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/3B-YES"));
end
rule "No Step Rule for P1356/3B-YES"
	when
		StepPerformed(stepId=="P1356/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/3B-YES"));
end
rule "Yes Step Rule for P1356/3B-NO"
	when
		StepPerformed(stepId=="P1356/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/3B-NO"));
end
rule "No Step Rule for P1356/3B-NO"
	when
		StepPerformed(stepId=="P1356/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/3B-NO"));
end
rule "Yes Step Rule for P1356/4A"
	when
		StepPerformed(stepId=="P1356/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/4A"));
end
rule "No Step Rule for P1356/4A"
	when
		StepPerformed(stepId=="P1356/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1356/4A"));
end
rule "Yes Step Rule for P1356/4A-YES"
	when
		StepPerformed(stepId=="P1356/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/4A-YES"));
end
rule "No Step Rule for P1356/4A-YES"
	when
		StepPerformed(stepId=="P1356/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/4A-YES"));
end
rule "Yes Step Rule for P1356/4A-NO"
	when
		StepPerformed(stepId=="P1356/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/4A-NO"));
end
rule "No Step Rule for P1356/4A-NO"
	when
		StepPerformed(stepId=="P1356/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/4A-NO"));
end
rule "Yes Step Rule for P1356/5A"
	when
		StepPerformed(stepId=="P1356/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/5A"));
end
rule "No Step Rule for P1356/5A"
	when
		StepPerformed(stepId=="P1356/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1356/5A"));
end
rule "Yes Step Rule for P1356/5A-YES"
	when
		StepPerformed(stepId=="P1356/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/5A-YES"));
end
rule "No Step Rule for P1356/5A-YES"
	when
		StepPerformed(stepId=="P1356/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/5A-YES"));
end
rule "Yes Step Rule for P1356/5A-NO"
	when
		StepPerformed(stepId=="P1356/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1356/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1356/5A-NO"));
end
rule "No Step Rule for P1356/5A-NO"
	when
		StepPerformed(stepId=="P1356/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1356/5A-NO"));
end
rule "Yes Step Rule for P1403/1A"
	when
		StepPerformed(stepId=="P1403/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/1A"));
end
rule "No Step Rule for P1403/1A"
	when
		StepPerformed(stepId=="P1403/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/2A",$sum.doubleValue() + 100.0,"Answered No to step P1403/1A"));
end
rule "Yes Step Rule for P1403/1A-YES"
	when
		StepPerformed(stepId=="P1403/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/1A-YES"));
end
rule "No Step Rule for P1403/1A-YES"
	when
		StepPerformed(stepId=="P1403/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/1A-YES"));
end
rule "Yes Step Rule for P1403/1A-NO"
	when
		StepPerformed(stepId=="P1403/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/1A-NO"));
end
rule "No Step Rule for P1403/1A-NO"
	when
		StepPerformed(stepId=="P1403/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/1A-NO"));
end
rule "Yes Step Rule for P1403/2A"
	when
		StepPerformed(stepId=="P1403/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/2A"));
end
rule "No Step Rule for P1403/2A"
	when
		StepPerformed(stepId=="P1403/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/3A",$sum.doubleValue() + 100.0,"Answered No to step P1403/2A"));
end
rule "Yes Step Rule for P1403/2A-YES"
	when
		StepPerformed(stepId=="P1403/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/2A-YES"));
end
rule "No Step Rule for P1403/2A-YES"
	when
		StepPerformed(stepId=="P1403/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/2A-YES"));
end
rule "Yes Step Rule for P1403/2A-NO"
	when
		StepPerformed(stepId=="P1403/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/2A-NO"));
end
rule "No Step Rule for P1403/2A-NO"
	when
		StepPerformed(stepId=="P1403/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/2A-NO"));
end
rule "Yes Step Rule for P1403/3A"
	when
		StepPerformed(stepId=="P1403/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/3A"));
end
rule "No Step Rule for P1403/3A"
	when
		StepPerformed(stepId=="P1403/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/3B",$sum.doubleValue() + 100.0,"Answered No to step P1403/3A"));
end
rule "Yes Step Rule for P1403/3A-YES"
	when
		StepPerformed(stepId=="P1403/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/3A-YES"));
end
rule "No Step Rule for P1403/3A-YES"
	when
		StepPerformed(stepId=="P1403/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/3A-YES"));
end
rule "Yes Step Rule for P1403/3A-NO"
	when
		StepPerformed(stepId=="P1403/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/3A-NO"));
end
rule "No Step Rule for P1403/3A-NO"
	when
		StepPerformed(stepId=="P1403/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/3A-NO"));
end
rule "Yes Step Rule for P1403/3B"
	when
		StepPerformed(stepId=="P1403/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/3B"));
end
rule "No Step Rule for P1403/3B"
	when
		StepPerformed(stepId=="P1403/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1403/3B"));
end
rule "Yes Step Rule for P1403/3B-YES"
	when
		StepPerformed(stepId=="P1403/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/3B-YES"));
end
rule "No Step Rule for P1403/3B-YES"
	when
		StepPerformed(stepId=="P1403/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/3B-YES"));
end
rule "Yes Step Rule for P1403/3B-NO"
	when
		StepPerformed(stepId=="P1403/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/3B-NO"));
end
rule "No Step Rule for P1403/3B-NO"
	when
		StepPerformed(stepId=="P1403/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/3B-NO"));
end
rule "Yes Step Rule for P1403/4A"
	when
		StepPerformed(stepId=="P1403/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/4A"));
end
rule "No Step Rule for P1403/4A"
	when
		StepPerformed(stepId=="P1403/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1403/4A"));
end
rule "Yes Step Rule for P1403/4A-YES"
	when
		StepPerformed(stepId=="P1403/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/4A-YES"));
end
rule "No Step Rule for P1403/4A-YES"
	when
		StepPerformed(stepId=="P1403/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/4A-YES"));
end
rule "Yes Step Rule for P1403/4A-NO"
	when
		StepPerformed(stepId=="P1403/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1403/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1403/4A-NO"));
end
rule "No Step Rule for P1403/4A-NO"
	when
		StepPerformed(stepId=="P1403/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1403/4A-NO"));
end
rule "Yes Step Rule for P1404/1A"
	when
		StepPerformed(stepId=="P1404/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/1A"));
end
rule "No Step Rule for P1404/1A"
	when
		StepPerformed(stepId=="P1404/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/2A",$sum.doubleValue() + 100.0,"Answered No to step P1404/1A"));
end
rule "Yes Step Rule for P1404/1A-YES"
	when
		StepPerformed(stepId=="P1404/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/1A-YES"));
end
rule "No Step Rule for P1404/1A-YES"
	when
		StepPerformed(stepId=="P1404/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/1A-YES"));
end
rule "Yes Step Rule for P1404/1A-NO"
	when
		StepPerformed(stepId=="P1404/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/1A-NO"));
end
rule "No Step Rule for P1404/1A-NO"
	when
		StepPerformed(stepId=="P1404/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/1A-NO"));
end
rule "Yes Step Rule for P1404/2A"
	when
		StepPerformed(stepId=="P1404/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/2A"));
end
rule "No Step Rule for P1404/2A"
	when
		StepPerformed(stepId=="P1404/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/3A",$sum.doubleValue() + 100.0,"Answered No to step P1404/2A"));
end
rule "Yes Step Rule for P1404/2A-YES"
	when
		StepPerformed(stepId=="P1404/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/2A-YES"));
end
rule "No Step Rule for P1404/2A-YES"
	when
		StepPerformed(stepId=="P1404/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/2A-YES"));
end
rule "Yes Step Rule for P1404/2A-NO"
	when
		StepPerformed(stepId=="P1404/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/2A-NO"));
end
rule "No Step Rule for P1404/2A-NO"
	when
		StepPerformed(stepId=="P1404/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/2A-NO"));
end
rule "Yes Step Rule for P1404/3A"
	when
		StepPerformed(stepId=="P1404/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/3A"));
end
rule "No Step Rule for P1404/3A"
	when
		StepPerformed(stepId=="P1404/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/3B",$sum.doubleValue() + 100.0,"Answered No to step P1404/3A"));
end
rule "Yes Step Rule for P1404/3A-YES"
	when
		StepPerformed(stepId=="P1404/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/3A-YES"));
end
rule "No Step Rule for P1404/3A-YES"
	when
		StepPerformed(stepId=="P1404/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/3A-YES"));
end
rule "Yes Step Rule for P1404/3A-NO"
	when
		StepPerformed(stepId=="P1404/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/3A-NO"));
end
rule "No Step Rule for P1404/3A-NO"
	when
		StepPerformed(stepId=="P1404/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/3A-NO"));
end
rule "Yes Step Rule for P1404/3B"
	when
		StepPerformed(stepId=="P1404/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/3B"));
end
rule "No Step Rule for P1404/3B"
	when
		StepPerformed(stepId=="P1404/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1404/3B"));
end
rule "Yes Step Rule for P1404/3B-YES"
	when
		StepPerformed(stepId=="P1404/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/3B-YES"));
end
rule "No Step Rule for P1404/3B-YES"
	when
		StepPerformed(stepId=="P1404/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/3B-YES"));
end
rule "Yes Step Rule for P1404/3B-NO"
	when
		StepPerformed(stepId=="P1404/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/3B-NO"));
end
rule "No Step Rule for P1404/3B-NO"
	when
		StepPerformed(stepId=="P1404/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/3B-NO"));
end
rule "Yes Step Rule for P1404/4A"
	when
		StepPerformed(stepId=="P1404/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/4A"));
end
rule "No Step Rule for P1404/4A"
	when
		StepPerformed(stepId=="P1404/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1404/4A"));
end
rule "Yes Step Rule for P1404/4A-YES"
	when
		StepPerformed(stepId=="P1404/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/4A-YES"));
end
rule "No Step Rule for P1404/4A-YES"
	when
		StepPerformed(stepId=="P1404/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/4A-YES"));
end
rule "Yes Step Rule for P1404/4A-NO"
	when
		StepPerformed(stepId=="P1404/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1404/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1404/4A-NO"));
end
rule "No Step Rule for P1404/4A-NO"
	when
		StepPerformed(stepId=="P1404/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1404/4A-NO"));
end
rule "Yes Step Rule for P1407/1A"
	when
		StepPerformed(stepId=="P1407/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/1A"));
end
rule "No Step Rule for P1407/1A"
	when
		StepPerformed(stepId=="P1407/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/2A",$sum.doubleValue() + 100.0,"Answered No to step P1407/1A"));
end
rule "Yes Step Rule for P1407/1A-YES"
	when
		StepPerformed(stepId=="P1407/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/1A-YES"));
end
rule "No Step Rule for P1407/1A-YES"
	when
		StepPerformed(stepId=="P1407/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/1A-YES"));
end
rule "Yes Step Rule for P1407/1A-NO"
	when
		StepPerformed(stepId=="P1407/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/1A-NO"));
end
rule "No Step Rule for P1407/1A-NO"
	when
		StepPerformed(stepId=="P1407/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/1A-NO"));
end
rule "Yes Step Rule for P1407/2A"
	when
		StepPerformed(stepId=="P1407/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/2A"));
end
rule "No Step Rule for P1407/2A"
	when
		StepPerformed(stepId=="P1407/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/3A",$sum.doubleValue() + 100.0,"Answered No to step P1407/2A"));
end
rule "Yes Step Rule for P1407/2A-YES"
	when
		StepPerformed(stepId=="P1407/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/2A-YES"));
end
rule "No Step Rule for P1407/2A-YES"
	when
		StepPerformed(stepId=="P1407/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/2A-YES"));
end
rule "Yes Step Rule for P1407/2A-NO"
	when
		StepPerformed(stepId=="P1407/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/2A-NO"));
end
rule "No Step Rule for P1407/2A-NO"
	when
		StepPerformed(stepId=="P1407/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/2A-NO"));
end
rule "Yes Step Rule for P1407/2B"
	when
		StepPerformed(stepId=="P1407/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/2B"));
end
rule "No Step Rule for P1407/2B"
	when
		StepPerformed(stepId=="P1407/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/3A",$sum.doubleValue() + 100.0,"Answered No to step P1407/2B"));
end
rule "Yes Step Rule for P1407/2B-YES"
	when
		StepPerformed(stepId=="P1407/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/2B-YES"));
end
rule "No Step Rule for P1407/2B-YES"
	when
		StepPerformed(stepId=="P1407/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/2B-YES"));
end
rule "Yes Step Rule for P1407/2B-NO"
	when
		StepPerformed(stepId=="P1407/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/2B-NO"));
end
rule "No Step Rule for P1407/2B-NO"
	when
		StepPerformed(stepId=="P1407/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/2B-NO"));
end
rule "Yes Step Rule for P1407/2C"
	when
		StepPerformed(stepId=="P1407/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/2C"));
end
rule "No Step Rule for P1407/2C"
	when
		StepPerformed(stepId=="P1407/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1407/2C"));
end
rule "Yes Step Rule for P1407/2C-YES"
	when
		StepPerformed(stepId=="P1407/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/2C-YES"));
end
rule "No Step Rule for P1407/2C-YES"
	when
		StepPerformed(stepId=="P1407/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/2C-YES"));
end
rule "Yes Step Rule for P1407/2C-NO"
	when
		StepPerformed(stepId=="P1407/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/2C-NO"));
end
rule "No Step Rule for P1407/2C-NO"
	when
		StepPerformed(stepId=="P1407/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/2C-NO"));
end
rule "Yes Step Rule for P1407/3A"
	when
		StepPerformed(stepId=="P1407/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/3A"));
end
rule "No Step Rule for P1407/3A"
	when
		StepPerformed(stepId=="P1407/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/4A",$sum.doubleValue() + 100.0,"Answered No to step P1407/3A"));
end
rule "Yes Step Rule for P1407/3A-YES"
	when
		StepPerformed(stepId=="P1407/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/3A-YES"));
end
rule "No Step Rule for P1407/3A-YES"
	when
		StepPerformed(stepId=="P1407/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/3A-YES"));
end
rule "Yes Step Rule for P1407/3A-NO"
	when
		StepPerformed(stepId=="P1407/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/3A-NO"));
end
rule "No Step Rule for P1407/3A-NO"
	when
		StepPerformed(stepId=="P1407/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/3A-NO"));
end
rule "Yes Step Rule for P1407/3B"
	when
		StepPerformed(stepId=="P1407/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/3B"));
end
rule "No Step Rule for P1407/3B"
	when
		StepPerformed(stepId=="P1407/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1407/3B"));
end
rule "Yes Step Rule for P1407/3B-YES"
	when
		StepPerformed(stepId=="P1407/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/3B-YES"));
end
rule "No Step Rule for P1407/3B-YES"
	when
		StepPerformed(stepId=="P1407/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/3B-YES"));
end
rule "Yes Step Rule for P1407/3B-NO"
	when
		StepPerformed(stepId=="P1407/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/3B-NO"));
end
rule "No Step Rule for P1407/3B-NO"
	when
		StepPerformed(stepId=="P1407/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/3B-NO"));
end
rule "Yes Step Rule for P1407/4A"
	when
		StepPerformed(stepId=="P1407/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/4A"));
end
rule "No Step Rule for P1407/4A"
	when
		StepPerformed(stepId=="P1407/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/4B",$sum.doubleValue() + 100.0,"Answered No to step P1407/4A"));
end
rule "Yes Step Rule for P1407/4A-YES"
	when
		StepPerformed(stepId=="P1407/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/4A-YES"));
end
rule "No Step Rule for P1407/4A-YES"
	when
		StepPerformed(stepId=="P1407/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/4A-YES"));
end
rule "Yes Step Rule for P1407/4A-NO"
	when
		StepPerformed(stepId=="P1407/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/4A-NO"));
end
rule "No Step Rule for P1407/4A-NO"
	when
		StepPerformed(stepId=="P1407/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/4A-NO"));
end
rule "Yes Step Rule for P1407/4B"
	when
		StepPerformed(stepId=="P1407/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/4B"));
end
rule "No Step Rule for P1407/4B"
	when
		StepPerformed(stepId=="P1407/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1407/4B"));
end
rule "Yes Step Rule for P1407/4B-YES"
	when
		StepPerformed(stepId=="P1407/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/4B-YES"));
end
rule "No Step Rule for P1407/4B-YES"
	when
		StepPerformed(stepId=="P1407/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/4B-YES"));
end
rule "Yes Step Rule for P1407/4B-NO"
	when
		StepPerformed(stepId=="P1407/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/4B-NO"));
end
rule "No Step Rule for P1407/4B-NO"
	when
		StepPerformed(stepId=="P1407/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/4B-NO"));
end
rule "Yes Step Rule for P1407/5A"
	when
		StepPerformed(stepId=="P1407/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/5A"));
end
rule "No Step Rule for P1407/5A"
	when
		StepPerformed(stepId=="P1407/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1407/5A"));
end
rule "Yes Step Rule for P1407/5A-YES"
	when
		StepPerformed(stepId=="P1407/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/5A-YES"));
end
rule "No Step Rule for P1407/5A-YES"
	when
		StepPerformed(stepId=="P1407/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/5A-YES"));
end
rule "Yes Step Rule for P1407/5A-NO"
	when
		StepPerformed(stepId=="P1407/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1407/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1407/5A-NO"));
end
rule "No Step Rule for P1407/5A-NO"
	when
		StepPerformed(stepId=="P1407/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1407/5A-NO"));
end
rule "Yes Step Rule for P140E/1A"
	when
		StepPerformed(stepId=="P140E/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/1A"));
end
rule "No Step Rule for P140E/1A"
	when
		StepPerformed(stepId=="P140E/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/2B",$sum.doubleValue() + 100.0,"Answered No to step P140E/1A"));
end
rule "Yes Step Rule for P140E/1A-YES"
	when
		StepPerformed(stepId=="P140E/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/1A-YES"));
end
rule "No Step Rule for P140E/1A-YES"
	when
		StepPerformed(stepId=="P140E/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/1A-YES"));
end
rule "Yes Step Rule for P140E/1A-NO"
	when
		StepPerformed(stepId=="P140E/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/1A-NO"));
end
rule "No Step Rule for P140E/1A-NO"
	when
		StepPerformed(stepId=="P140E/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/1A-NO"));
end
rule "Yes Step Rule for P140E/2A"
	when
		StepPerformed(stepId=="P140E/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/2A"));
end
rule "No Step Rule for P140E/2A"
	when
		StepPerformed(stepId=="P140E/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/3A",$sum.doubleValue() + 100.0,"Answered No to step P140E/2A"));
end
rule "Yes Step Rule for P140E/2A-YES"
	when
		StepPerformed(stepId=="P140E/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/2A-YES"));
end
rule "No Step Rule for P140E/2A-YES"
	when
		StepPerformed(stepId=="P140E/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/2A-YES"));
end
rule "Yes Step Rule for P140E/2A-NO"
	when
		StepPerformed(stepId=="P140E/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/2A-NO"));
end
rule "No Step Rule for P140E/2A-NO"
	when
		StepPerformed(stepId=="P140E/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/2A-NO"));
end
rule "Yes Step Rule for P140E/2B"
	when
		StepPerformed(stepId=="P140E/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/2B"));
end
rule "No Step Rule for P140E/2B"
	when
		StepPerformed(stepId=="P140E/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P140E/2B"));
end
rule "Yes Step Rule for P140E/2B-YES"
	when
		StepPerformed(stepId=="P140E/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/2B-YES"));
end
rule "No Step Rule for P140E/2B-YES"
	when
		StepPerformed(stepId=="P140E/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/2B-YES"));
end
rule "Yes Step Rule for P140E/2B-NO"
	when
		StepPerformed(stepId=="P140E/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/2B-NO"));
end
rule "No Step Rule for P140E/2B-NO"
	when
		StepPerformed(stepId=="P140E/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/2B-NO"));
end
rule "Yes Step Rule for P140E/3A"
	when
		StepPerformed(stepId=="P140E/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/3A"));
end
rule "No Step Rule for P140E/3A"
	when
		StepPerformed(stepId=="P140E/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/3B",$sum.doubleValue() + 100.0,"Answered No to step P140E/3A"));
end
rule "Yes Step Rule for P140E/3A-YES"
	when
		StepPerformed(stepId=="P140E/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/3A-YES"));
end
rule "No Step Rule for P140E/3A-YES"
	when
		StepPerformed(stepId=="P140E/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/3A-YES"));
end
rule "Yes Step Rule for P140E/3A-NO"
	when
		StepPerformed(stepId=="P140E/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/3A-NO"));
end
rule "No Step Rule for P140E/3A-NO"
	when
		StepPerformed(stepId=="P140E/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/3A-NO"));
end
rule "Yes Step Rule for P140E/3B"
	when
		StepPerformed(stepId=="P140E/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/3B"));
end
rule "No Step Rule for P140E/3B"
	when
		StepPerformed(stepId=="P140E/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P140E/3B"));
end
rule "Yes Step Rule for P140E/3B-YES"
	when
		StepPerformed(stepId=="P140E/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/3B-YES"));
end
rule "No Step Rule for P140E/3B-YES"
	when
		StepPerformed(stepId=="P140E/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/3B-YES"));
end
rule "Yes Step Rule for P140E/3B-NO"
	when
		StepPerformed(stepId=="P140E/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/3B-NO"));
end
rule "No Step Rule for P140E/3B-NO"
	when
		StepPerformed(stepId=="P140E/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/3B-NO"));
end
rule "Yes Step Rule for P140E/4A"
	when
		StepPerformed(stepId=="P140E/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/4A"));
end
rule "No Step Rule for P140E/4A"
	when
		StepPerformed(stepId=="P140E/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P140E/4A"));
end
rule "Yes Step Rule for P140E/4A-YES"
	when
		StepPerformed(stepId=="P140E/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/4A-YES"));
end
rule "No Step Rule for P140E/4A-YES"
	when
		StepPerformed(stepId=="P140E/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/4A-YES"));
end
rule "Yes Step Rule for P140E/4A-NO"
	when
		StepPerformed(stepId=="P140E/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P140E/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P140E/4A-NO"));
end
rule "No Step Rule for P140E/4A-NO"
	when
		StepPerformed(stepId=="P140E/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P140E/4A-NO"));
end
rule "Yes Step Rule for P1480/1A"
	when
		StepPerformed(stepId=="P1480/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/1A"));
end
rule "No Step Rule for P1480/1A"
	when
		StepPerformed(stepId=="P1480/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2B",$sum.doubleValue() + 100.0,"Answered No to step P1480/1A"));
end
rule "Yes Step Rule for P1480/1A-YES"
	when
		StepPerformed(stepId=="P1480/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/1A-YES"));
end
rule "No Step Rule for P1480/1A-YES"
	when
		StepPerformed(stepId=="P1480/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/1A-YES"));
end
rule "Yes Step Rule for P1480/1A-NO"
	when
		StepPerformed(stepId=="P1480/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/1A-NO"));
end
rule "No Step Rule for P1480/1A-NO"
	when
		StepPerformed(stepId=="P1480/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/1A-NO"));
end
rule "Yes Step Rule for P1480/2A"
	when
		StepPerformed(stepId=="P1480/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2A"));
end
rule "No Step Rule for P1480/2A"
	when
		StepPerformed(stepId=="P1480/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1480/2A"));
end
rule "Yes Step Rule for P1480/2A-YES"
	when
		StepPerformed(stepId=="P1480/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2A-YES"));
end
rule "No Step Rule for P1480/2A-YES"
	when
		StepPerformed(stepId=="P1480/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/2A-YES"));
end
rule "Yes Step Rule for P1480/2A-NO"
	when
		StepPerformed(stepId=="P1480/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2A-NO"));
end
rule "No Step Rule for P1480/2A-NO"
	when
		StepPerformed(stepId=="P1480/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/2A-NO"));
end
rule "Yes Step Rule for P1480/2B"
	when
		StepPerformed(stepId=="P1480/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2B"));
end
rule "No Step Rule for P1480/2B"
	when
		StepPerformed(stepId=="P1480/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1480/2B"));
end
rule "Yes Step Rule for P1480/2B-YES"
	when
		StepPerformed(stepId=="P1480/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2B-YES"));
end
rule "No Step Rule for P1480/2B-YES"
	when
		StepPerformed(stepId=="P1480/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/2B-YES"));
end
rule "Yes Step Rule for P1480/2B-NO"
	when
		StepPerformed(stepId=="P1480/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2B-NO"));
end
rule "No Step Rule for P1480/2B-NO"
	when
		StepPerformed(stepId=="P1480/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/2B-NO"));
end
rule "Yes Step Rule for P1480/2C"
	when
		StepPerformed(stepId=="P1480/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2C"));
end
rule "No Step Rule for P1480/2C"
	when
		StepPerformed(stepId=="P1480/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1480/2C"));
end
rule "Yes Step Rule for P1480/2C-YES"
	when
		StepPerformed(stepId=="P1480/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2C-YES"));
end
rule "No Step Rule for P1480/2C-YES"
	when
		StepPerformed(stepId=="P1480/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/2C-YES"));
end
rule "Yes Step Rule for P1480/2C-NO"
	when
		StepPerformed(stepId=="P1480/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2C-NO"));
end
rule "No Step Rule for P1480/2C-NO"
	when
		StepPerformed(stepId=="P1480/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/2C-NO"));
end
rule "Yes Step Rule for P1480/2D"
	when
		StepPerformed(stepId=="P1480/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2D"));
end
rule "No Step Rule for P1480/2D"
	when
		StepPerformed(stepId=="P1480/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step P1480/2D"));
end
rule "Yes Step Rule for P1480/2D-YES"
	when
		StepPerformed(stepId=="P1480/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2D-YES"));
end
rule "No Step Rule for P1480/2D-YES"
	when
		StepPerformed(stepId=="P1480/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/2D-YES"));
end
rule "Yes Step Rule for P1480/2D-NO"
	when
		StepPerformed(stepId=="P1480/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/2D-NO"));
end
rule "No Step Rule for P1480/2D-NO"
	when
		StepPerformed(stepId=="P1480/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/2D-NO"));
end
rule "Yes Step Rule for P1480/3A"
	when
		StepPerformed(stepId=="P1480/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/3A"));
end
rule "No Step Rule for P1480/3A"
	when
		StepPerformed(stepId=="P1480/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1480/3A"));
end
rule "Yes Step Rule for P1480/3A-YES"
	when
		StepPerformed(stepId=="P1480/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/3A-YES"));
end
rule "No Step Rule for P1480/3A-YES"
	when
		StepPerformed(stepId=="P1480/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/3A-YES"));
end
rule "Yes Step Rule for P1480/3A-NO"
	when
		StepPerformed(stepId=="P1480/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/3A-NO"));
end
rule "No Step Rule for P1480/3A-NO"
	when
		StepPerformed(stepId=="P1480/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/3A-NO"));
end
rule "Yes Step Rule for P1480/4A"
	when
		StepPerformed(stepId=="P1480/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/4A"));
end
rule "No Step Rule for P1480/4A"
	when
		StepPerformed(stepId=="P1480/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1480/4A"));
end
rule "Yes Step Rule for P1480/4A-YES"
	when
		StepPerformed(stepId=="P1480/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/4A-YES"));
end
rule "No Step Rule for P1480/4A-YES"
	when
		StepPerformed(stepId=="P1480/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/4A-YES"));
end
rule "Yes Step Rule for P1480/4A-NO"
	when
		StepPerformed(stepId=="P1480/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1480/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1480/4A-NO"));
end
rule "No Step Rule for P1480/4A-NO"
	when
		StepPerformed(stepId=="P1480/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1480/4A-NO"));
end
rule "Yes Step Rule for P1481/1A"
	when
		StepPerformed(stepId=="P1481/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/1A"));
end
rule "No Step Rule for P1481/1A"
	when
		StepPerformed(stepId=="P1481/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2B",$sum.doubleValue() + 100.0,"Answered No to step P1481/1A"));
end
rule "Yes Step Rule for P1481/1A-YES"
	when
		StepPerformed(stepId=="P1481/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/1A-YES"));
end
rule "No Step Rule for P1481/1A-YES"
	when
		StepPerformed(stepId=="P1481/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/1A-YES"));
end
rule "Yes Step Rule for P1481/1A-NO"
	when
		StepPerformed(stepId=="P1481/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/1A-NO"));
end
rule "No Step Rule for P1481/1A-NO"
	when
		StepPerformed(stepId=="P1481/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/1A-NO"));
end
rule "Yes Step Rule for P1481/2A"
	when
		StepPerformed(stepId=="P1481/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2A"));
end
rule "No Step Rule for P1481/2A"
	when
		StepPerformed(stepId=="P1481/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1481/2A"));
end
rule "Yes Step Rule for P1481/2A-YES"
	when
		StepPerformed(stepId=="P1481/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2A-YES"));
end
rule "No Step Rule for P1481/2A-YES"
	when
		StepPerformed(stepId=="P1481/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/2A-YES"));
end
rule "Yes Step Rule for P1481/2A-NO"
	when
		StepPerformed(stepId=="P1481/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2A-NO"));
end
rule "No Step Rule for P1481/2A-NO"
	when
		StepPerformed(stepId=="P1481/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/2A-NO"));
end
rule "Yes Step Rule for P1481/2B"
	when
		StepPerformed(stepId=="P1481/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2B"));
end
rule "No Step Rule for P1481/2B"
	when
		StepPerformed(stepId=="P1481/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1481/2B"));
end
rule "Yes Step Rule for P1481/2B-YES"
	when
		StepPerformed(stepId=="P1481/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2B-YES"));
end
rule "No Step Rule for P1481/2B-YES"
	when
		StepPerformed(stepId=="P1481/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/2B-YES"));
end
rule "Yes Step Rule for P1481/2B-NO"
	when
		StepPerformed(stepId=="P1481/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2B-NO"));
end
rule "No Step Rule for P1481/2B-NO"
	when
		StepPerformed(stepId=="P1481/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/2B-NO"));
end
rule "Yes Step Rule for P1481/2C"
	when
		StepPerformed(stepId=="P1481/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2C"));
end
rule "No Step Rule for P1481/2C"
	when
		StepPerformed(stepId=="P1481/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1481/2C"));
end
rule "Yes Step Rule for P1481/2C-YES"
	when
		StepPerformed(stepId=="P1481/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2C-YES"));
end
rule "No Step Rule for P1481/2C-YES"
	when
		StepPerformed(stepId=="P1481/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/2C-YES"));
end
rule "Yes Step Rule for P1481/2C-NO"
	when
		StepPerformed(stepId=="P1481/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2C-NO"));
end
rule "No Step Rule for P1481/2C-NO"
	when
		StepPerformed(stepId=="P1481/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/2C-NO"));
end
rule "Yes Step Rule for P1481/2D"
	when
		StepPerformed(stepId=="P1481/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2D"));
end
rule "No Step Rule for P1481/2D"
	when
		StepPerformed(stepId=="P1481/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step P1481/2D"));
end
rule "Yes Step Rule for P1481/2D-YES"
	when
		StepPerformed(stepId=="P1481/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2D-YES"));
end
rule "No Step Rule for P1481/2D-YES"
	when
		StepPerformed(stepId=="P1481/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/2D-YES"));
end
rule "Yes Step Rule for P1481/2D-NO"
	when
		StepPerformed(stepId=="P1481/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/2D-NO"));
end
rule "No Step Rule for P1481/2D-NO"
	when
		StepPerformed(stepId=="P1481/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/2D-NO"));
end
rule "Yes Step Rule for P1481/3A"
	when
		StepPerformed(stepId=="P1481/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/3A"));
end
rule "No Step Rule for P1481/3A"
	when
		StepPerformed(stepId=="P1481/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1481/3A"));
end
rule "Yes Step Rule for P1481/3A-YES"
	when
		StepPerformed(stepId=="P1481/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/3A-YES"));
end
rule "No Step Rule for P1481/3A-YES"
	when
		StepPerformed(stepId=="P1481/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/3A-YES"));
end
rule "Yes Step Rule for P1481/3A-NO"
	when
		StepPerformed(stepId=="P1481/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/3A-NO"));
end
rule "No Step Rule for P1481/3A-NO"
	when
		StepPerformed(stepId=="P1481/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/3A-NO"));
end
rule "Yes Step Rule for P1481/4A"
	when
		StepPerformed(stepId=="P1481/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/4A"));
end
rule "No Step Rule for P1481/4A"
	when
		StepPerformed(stepId=="P1481/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1481/4A"));
end
rule "Yes Step Rule for P1481/4A-YES"
	when
		StepPerformed(stepId=="P1481/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/4A-YES"));
end
rule "No Step Rule for P1481/4A-YES"
	when
		StepPerformed(stepId=="P1481/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/4A-YES"));
end
rule "Yes Step Rule for P1481/4A-NO"
	when
		StepPerformed(stepId=="P1481/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1481/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1481/4A-NO"));
end
rule "No Step Rule for P1481/4A-NO"
	when
		StepPerformed(stepId=="P1481/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1481/4A-NO"));
end
rule "Yes Step Rule for P1482/1A"
	when
		StepPerformed(stepId=="P1482/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1482/1A"));
end
rule "No Step Rule for P1482/1A"
	when
		StepPerformed(stepId=="P1482/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/3A",$sum.doubleValue() + 100.0,"Answered No to step P1482/1A"));
end
rule "Yes Step Rule for P1482/1A-YES"
	when
		StepPerformed(stepId=="P1482/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1482/1A-YES"));
end
rule "No Step Rule for P1482/1A-YES"
	when
		StepPerformed(stepId=="P1482/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1482/1A-YES"));
end
rule "Yes Step Rule for P1482/1A-NO"
	when
		StepPerformed(stepId=="P1482/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1482/1A-NO"));
end
rule "No Step Rule for P1482/1A-NO"
	when
		StepPerformed(stepId=="P1482/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1482/1A-NO"));
end
rule "Yes Step Rule for P1482/2A"
	when
		StepPerformed(stepId=="P1482/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1482/2A"));
end
rule "No Step Rule for P1482/2A"
	when
		StepPerformed(stepId=="P1482/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1482/2A"));
end
rule "Yes Step Rule for P1482/2A-YES"
	when
		StepPerformed(stepId=="P1482/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1482/2A-YES"));
end
rule "No Step Rule for P1482/2A-YES"
	when
		StepPerformed(stepId=="P1482/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1482/2A-YES"));
end
rule "Yes Step Rule for P1482/2A-NO"
	when
		StepPerformed(stepId=="P1482/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1482/2A-NO"));
end
rule "No Step Rule for P1482/2A-NO"
	when
		StepPerformed(stepId=="P1482/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1482/2A-NO"));
end
rule "Yes Step Rule for P1482/3A"
	when
		StepPerformed(stepId=="P1482/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1482/3A"));
end
rule "No Step Rule for P1482/3A"
	when
		StepPerformed(stepId=="P1482/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1482/3A"));
end
rule "Yes Step Rule for P1482/3A-YES"
	when
		StepPerformed(stepId=="P1482/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1482/3A-YES"));
end
rule "No Step Rule for P1482/3A-YES"
	when
		StepPerformed(stepId=="P1482/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1482/3A-YES"));
end
rule "Yes Step Rule for P1482/3A-NO"
	when
		StepPerformed(stepId=="P1482/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1482/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1482/3A-NO"));
end
rule "No Step Rule for P1482/3A-NO"
	when
		StepPerformed(stepId=="P1482/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1482/3A-NO"));
end
rule "Yes Step Rule for P1483/1A"
	when
		StepPerformed(stepId=="P1483/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/1A"));
end
rule "No Step Rule for P1483/1A"
	when
		StepPerformed(stepId=="P1483/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/5A",$sum.doubleValue() + 100.0,"Answered No to step P1483/1A"));
end
rule "Yes Step Rule for P1483/1A-YES"
	when
		StepPerformed(stepId=="P1483/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/1A-YES"));
end
rule "No Step Rule for P1483/1A-YES"
	when
		StepPerformed(stepId=="P1483/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/1A-YES"));
end
rule "Yes Step Rule for P1483/1A-NO"
	when
		StepPerformed(stepId=="P1483/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/1A-NO"));
end
rule "No Step Rule for P1483/1A-NO"
	when
		StepPerformed(stepId=="P1483/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/1A-NO"));
end
rule "Yes Step Rule for P1483/2A"
	when
		StepPerformed(stepId=="P1483/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/2A"));
end
rule "No Step Rule for P1483/2A"
	when
		StepPerformed(stepId=="P1483/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/5A",$sum.doubleValue() + 100.0,"Answered No to step P1483/2A"));
end
rule "Yes Step Rule for P1483/2A-YES"
	when
		StepPerformed(stepId=="P1483/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/2A-YES"));
end
rule "No Step Rule for P1483/2A-YES"
	when
		StepPerformed(stepId=="P1483/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/2A-YES"));
end
rule "Yes Step Rule for P1483/2A-NO"
	when
		StepPerformed(stepId=="P1483/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/2A-NO"));
end
rule "No Step Rule for P1483/2A-NO"
	when
		StepPerformed(stepId=="P1483/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/2A-NO"));
end
rule "Yes Step Rule for P1483/3A"
	when
		StepPerformed(stepId=="P1483/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/3A"));
end
rule "No Step Rule for P1483/3A"
	when
		StepPerformed(stepId=="P1483/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1483/3A"));
end
rule "Yes Step Rule for P1483/3A-YES"
	when
		StepPerformed(stepId=="P1483/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/3A-YES"));
end
rule "No Step Rule for P1483/3A-YES"
	when
		StepPerformed(stepId=="P1483/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/3A-YES"));
end
rule "Yes Step Rule for P1483/3A-NO"
	when
		StepPerformed(stepId=="P1483/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/3A-NO"));
end
rule "No Step Rule for P1483/3A-NO"
	when
		StepPerformed(stepId=="P1483/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/3A-NO"));
end
rule "Yes Step Rule for P1483/4A"
	when
		StepPerformed(stepId=="P1483/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/4A"));
end
rule "No Step Rule for P1483/4A"
	when
		StepPerformed(stepId=="P1483/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1483/4A"));
end
rule "Yes Step Rule for P1483/4A-YES"
	when
		StepPerformed(stepId=="P1483/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/4A-YES"));
end
rule "No Step Rule for P1483/4A-YES"
	when
		StepPerformed(stepId=="P1483/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/4A-YES"));
end
rule "Yes Step Rule for P1483/4A-NO"
	when
		StepPerformed(stepId=="P1483/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/4A-NO"));
end
rule "No Step Rule for P1483/4A-NO"
	when
		StepPerformed(stepId=="P1483/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/4A-NO"));
end
rule "Yes Step Rule for P1483/5A"
	when
		StepPerformed(stepId=="P1483/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/5A"));
end
rule "No Step Rule for P1483/5A"
	when
		StepPerformed(stepId=="P1483/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1483/5A"));
end
rule "Yes Step Rule for P1483/5A-YES"
	when
		StepPerformed(stepId=="P1483/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/5A-YES"));
end
rule "No Step Rule for P1483/5A-YES"
	when
		StepPerformed(stepId=="P1483/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/5A-YES"));
end
rule "Yes Step Rule for P1483/5A-NO"
	when
		StepPerformed(stepId=="P1483/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1483/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1483/5A-NO"));
end
rule "No Step Rule for P1483/5A-NO"
	when
		StepPerformed(stepId=="P1483/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1483/5A-NO"));
end
rule "Yes Step Rule for P1484/1A"
	when
		StepPerformed(stepId=="P1484/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/1A"));
end
rule "No Step Rule for P1484/1A"
	when
		StepPerformed(stepId=="P1484/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2B",$sum.doubleValue() + 100.0,"Answered No to step P1484/1A"));
end
rule "Yes Step Rule for P1484/1A-YES"
	when
		StepPerformed(stepId=="P1484/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/1A-YES"));
end
rule "No Step Rule for P1484/1A-YES"
	when
		StepPerformed(stepId=="P1484/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/1A-YES"));
end
rule "Yes Step Rule for P1484/1A-NO"
	when
		StepPerformed(stepId=="P1484/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/1A-NO"));
end
rule "No Step Rule for P1484/1A-NO"
	when
		StepPerformed(stepId=="P1484/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/1A-NO"));
end
rule "Yes Step Rule for P1484/2A"
	when
		StepPerformed(stepId=="P1484/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/2A"));
end
rule "No Step Rule for P1484/2A"
	when
		StepPerformed(stepId=="P1484/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1484/2A"));
end
rule "Yes Step Rule for P1484/2A-YES"
	when
		StepPerformed(stepId=="P1484/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/2A-YES"));
end
rule "No Step Rule for P1484/2A-YES"
	when
		StepPerformed(stepId=="P1484/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/2A-YES"));
end
rule "Yes Step Rule for P1484/2A-NO"
	when
		StepPerformed(stepId=="P1484/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/2A-NO"));
end
rule "No Step Rule for P1484/2A-NO"
	when
		StepPerformed(stepId=="P1484/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/2A-NO"));
end
rule "Yes Step Rule for P1484/2B"
	when
		StepPerformed(stepId=="P1484/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/2B"));
end
rule "No Step Rule for P1484/2B"
	when
		StepPerformed(stepId=="P1484/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1484/2B"));
end
rule "Yes Step Rule for P1484/2B-YES"
	when
		StepPerformed(stepId=="P1484/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/2B-YES"));
end
rule "No Step Rule for P1484/2B-YES"
	when
		StepPerformed(stepId=="P1484/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/2B-YES"));
end
rule "Yes Step Rule for P1484/2B-NO"
	when
		StepPerformed(stepId=="P1484/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/2B-NO"));
end
rule "No Step Rule for P1484/2B-NO"
	when
		StepPerformed(stepId=="P1484/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/2B-NO"));
end
rule "Yes Step Rule for P1484/2C"
	when
		StepPerformed(stepId=="P1484/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/2C"));
end
rule "No Step Rule for P1484/2C"
	when
		StepPerformed(stepId=="P1484/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1484/2C"));
end
rule "Yes Step Rule for P1484/2C-YES"
	when
		StepPerformed(stepId=="P1484/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/2C-YES"));
end
rule "No Step Rule for P1484/2C-YES"
	when
		StepPerformed(stepId=="P1484/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/2C-YES"));
end
rule "Yes Step Rule for P1484/2C-NO"
	when
		StepPerformed(stepId=="P1484/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/2C-NO"));
end
rule "No Step Rule for P1484/2C-NO"
	when
		StepPerformed(stepId=="P1484/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/2C-NO"));
end
rule "Yes Step Rule for P1484/3A"
	when
		StepPerformed(stepId=="P1484/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/3A"));
end
rule "No Step Rule for P1484/3A"
	when
		StepPerformed(stepId=="P1484/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1484/3A"));
end
rule "Yes Step Rule for P1484/3A-YES"
	when
		StepPerformed(stepId=="P1484/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/3A-YES"));
end
rule "No Step Rule for P1484/3A-YES"
	when
		StepPerformed(stepId=="P1484/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/3A-YES"));
end
rule "Yes Step Rule for P1484/3A-NO"
	when
		StepPerformed(stepId=="P1484/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/3A-NO"));
end
rule "No Step Rule for P1484/3A-NO"
	when
		StepPerformed(stepId=="P1484/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/3A-NO"));
end
rule "Yes Step Rule for P1484/4A"
	when
		StepPerformed(stepId=="P1484/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/4A"));
end
rule "No Step Rule for P1484/4A"
	when
		StepPerformed(stepId=="P1484/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1484/4A"));
end
rule "Yes Step Rule for P1484/4A-YES"
	when
		StepPerformed(stepId=="P1484/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/4A-YES"));
end
rule "No Step Rule for P1484/4A-YES"
	when
		StepPerformed(stepId=="P1484/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/4A-YES"));
end
rule "Yes Step Rule for P1484/4A-NO"
	when
		StepPerformed(stepId=="P1484/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1484/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1484/4A-NO"));
end
rule "No Step Rule for P1484/4A-NO"
	when
		StepPerformed(stepId=="P1484/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1484/4A-NO"));
end
rule "Yes Step Rule for P1485/1A"
	when
		StepPerformed(stepId=="P1485/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/1A"));
end
rule "No Step Rule for P1485/1A"
	when
		StepPerformed(stepId=="P1485/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/2A",$sum.doubleValue() + 100.0,"Answered No to step P1485/1A"));
end
rule "Yes Step Rule for P1485/1A-YES"
	when
		StepPerformed(stepId=="P1485/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/1A-YES"));
end
rule "No Step Rule for P1485/1A-YES"
	when
		StepPerformed(stepId=="P1485/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/1A-YES"));
end
rule "Yes Step Rule for P1485/1A-NO"
	when
		StepPerformed(stepId=="P1485/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/1A-NO"));
end
rule "No Step Rule for P1485/1A-NO"
	when
		StepPerformed(stepId=="P1485/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/1A-NO"));
end
rule "Yes Step Rule for P1485/2A"
	when
		StepPerformed(stepId=="P1485/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/2A"));
end
rule "No Step Rule for P1485/2A"
	when
		StepPerformed(stepId=="P1485/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/5A",$sum.doubleValue() + 100.0,"Answered No to step P1485/2A"));
end
rule "Yes Step Rule for P1485/2A-YES"
	when
		StepPerformed(stepId=="P1485/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/2A-YES"));
end
rule "No Step Rule for P1485/2A-YES"
	when
		StepPerformed(stepId=="P1485/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/2A-YES"));
end
rule "Yes Step Rule for P1485/2A-NO"
	when
		StepPerformed(stepId=="P1485/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/2A-NO"));
end
rule "No Step Rule for P1485/2A-NO"
	when
		StepPerformed(stepId=="P1485/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/2A-NO"));
end
rule "Yes Step Rule for P1485/3A"
	when
		StepPerformed(stepId=="P1485/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/3A"));
end
rule "No Step Rule for P1485/3A"
	when
		StepPerformed(stepId=="P1485/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1485/3A"));
end
rule "Yes Step Rule for P1485/3A-YES"
	when
		StepPerformed(stepId=="P1485/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/3A-YES"));
end
rule "No Step Rule for P1485/3A-YES"
	when
		StepPerformed(stepId=="P1485/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/3A-YES"));
end
rule "Yes Step Rule for P1485/3A-NO"
	when
		StepPerformed(stepId=="P1485/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/3A-NO"));
end
rule "No Step Rule for P1485/3A-NO"
	when
		StepPerformed(stepId=="P1485/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/3A-NO"));
end
rule "Yes Step Rule for P1485/3B"
	when
		StepPerformed(stepId=="P1485/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/3B"));
end
rule "No Step Rule for P1485/3B"
	when
		StepPerformed(stepId=="P1485/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1485/3B"));
end
rule "Yes Step Rule for P1485/3B-YES"
	when
		StepPerformed(stepId=="P1485/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/3B-YES"));
end
rule "No Step Rule for P1485/3B-YES"
	when
		StepPerformed(stepId=="P1485/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/3B-YES"));
end
rule "Yes Step Rule for P1485/3B-NO"
	when
		StepPerformed(stepId=="P1485/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/3B-NO"));
end
rule "No Step Rule for P1485/3B-NO"
	when
		StepPerformed(stepId=="P1485/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/3B-NO"));
end
rule "Yes Step Rule for P1485/4A"
	when
		StepPerformed(stepId=="P1485/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/4A"));
end
rule "No Step Rule for P1485/4A"
	when
		StepPerformed(stepId=="P1485/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1485/4A"));
end
rule "Yes Step Rule for P1485/4A-YES"
	when
		StepPerformed(stepId=="P1485/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/4A-YES"));
end
rule "No Step Rule for P1485/4A-YES"
	when
		StepPerformed(stepId=="P1485/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/4A-YES"));
end
rule "Yes Step Rule for P1485/4A-NO"
	when
		StepPerformed(stepId=="P1485/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/4A-NO"));
end
rule "No Step Rule for P1485/4A-NO"
	when
		StepPerformed(stepId=="P1485/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/4A-NO"));
end
rule "Yes Step Rule for P1485/5A"
	when
		StepPerformed(stepId=="P1485/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/5A"));
end
rule "No Step Rule for P1485/5A"
	when
		StepPerformed(stepId=="P1485/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1485/5A"));
end
rule "Yes Step Rule for P1485/5A-YES"
	when
		StepPerformed(stepId=="P1485/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/5A-YES"));
end
rule "No Step Rule for P1485/5A-YES"
	when
		StepPerformed(stepId=="P1485/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/5A-YES"));
end
rule "Yes Step Rule for P1485/5A-NO"
	when
		StepPerformed(stepId=="P1485/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1485/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1485/5A-NO"));
end
rule "No Step Rule for P1485/5A-NO"
	when
		StepPerformed(stepId=="P1485/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1485/5A-NO"));
end
rule "Yes Step Rule for P1486/1A"
	when
		StepPerformed(stepId=="P1486/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/1A"));
end
rule "No Step Rule for P1486/1A"
	when
		StepPerformed(stepId=="P1486/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/4A",$sum.doubleValue() + 100.0,"Answered No to step P1486/1A"));
end
rule "Yes Step Rule for P1486/1A-YES"
	when
		StepPerformed(stepId=="P1486/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/1A-YES"));
end
rule "No Step Rule for P1486/1A-YES"
	when
		StepPerformed(stepId=="P1486/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/1A-YES"));
end
rule "Yes Step Rule for P1486/1A-NO"
	when
		StepPerformed(stepId=="P1486/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/1A-NO"));
end
rule "No Step Rule for P1486/1A-NO"
	when
		StepPerformed(stepId=="P1486/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/1A-NO"));
end
rule "Yes Step Rule for P1486/2A"
	when
		StepPerformed(stepId=="P1486/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/2A"));
end
rule "No Step Rule for P1486/2A"
	when
		StepPerformed(stepId=="P1486/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/2B",$sum.doubleValue() + 100.0,"Answered No to step P1486/2A"));
end
rule "Yes Step Rule for P1486/2A-YES"
	when
		StepPerformed(stepId=="P1486/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/2A-YES"));
end
rule "No Step Rule for P1486/2A-YES"
	when
		StepPerformed(stepId=="P1486/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/2A-YES"));
end
rule "Yes Step Rule for P1486/2A-NO"
	when
		StepPerformed(stepId=="P1486/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/2A-NO"));
end
rule "No Step Rule for P1486/2A-NO"
	when
		StepPerformed(stepId=="P1486/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/2A-NO"));
end
rule "Yes Step Rule for P1486/2B"
	when
		StepPerformed(stepId=="P1486/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/2B"));
end
rule "No Step Rule for P1486/2B"
	when
		StepPerformed(stepId=="P1486/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1486/2B"));
end
rule "Yes Step Rule for P1486/2B-YES"
	when
		StepPerformed(stepId=="P1486/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/2B-YES"));
end
rule "No Step Rule for P1486/2B-YES"
	when
		StepPerformed(stepId=="P1486/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/2B-YES"));
end
rule "Yes Step Rule for P1486/2B-NO"
	when
		StepPerformed(stepId=="P1486/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/2B-NO"));
end
rule "No Step Rule for P1486/2B-NO"
	when
		StepPerformed(stepId=="P1486/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/2B-NO"));
end
rule "Yes Step Rule for P1486/3A"
	when
		StepPerformed(stepId=="P1486/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/3A"));
end
rule "No Step Rule for P1486/3A"
	when
		StepPerformed(stepId=="P1486/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1486/3A"));
end
rule "Yes Step Rule for P1486/3A-YES"
	when
		StepPerformed(stepId=="P1486/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/3A-YES"));
end
rule "No Step Rule for P1486/3A-YES"
	when
		StepPerformed(stepId=="P1486/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/3A-YES"));
end
rule "Yes Step Rule for P1486/3A-NO"
	when
		StepPerformed(stepId=="P1486/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/3A-NO"));
end
rule "No Step Rule for P1486/3A-NO"
	when
		StepPerformed(stepId=="P1486/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/3A-NO"));
end
rule "Yes Step Rule for P1486/4A"
	when
		StepPerformed(stepId=="P1486/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/4A"));
end
rule "No Step Rule for P1486/4A"
	when
		StepPerformed(stepId=="P1486/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1486/4A"));
end
rule "Yes Step Rule for P1486/4A-YES"
	when
		StepPerformed(stepId=="P1486/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/4A-YES"));
end
rule "No Step Rule for P1486/4A-YES"
	when
		StepPerformed(stepId=="P1486/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/4A-YES"));
end
rule "Yes Step Rule for P1486/4A-NO"
	when
		StepPerformed(stepId=="P1486/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1486/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1486/4A-NO"));
end
rule "No Step Rule for P1486/4A-NO"
	when
		StepPerformed(stepId=="P1486/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1486/4A-NO"));
end
rule "Yes Step Rule for P1487/1A"
	when
		StepPerformed(stepId=="P1487/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/1A"));
end
rule "No Step Rule for P1487/1A"
	when
		StepPerformed(stepId=="P1487/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2B",$sum.doubleValue() + 100.0,"Answered No to step P1487/1A"));
end
rule "Yes Step Rule for P1487/1A-YES"
	when
		StepPerformed(stepId=="P1487/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/1A-YES"));
end
rule "No Step Rule for P1487/1A-YES"
	when
		StepPerformed(stepId=="P1487/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/1A-YES"));
end
rule "Yes Step Rule for P1487/1A-NO"
	when
		StepPerformed(stepId=="P1487/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/1A-NO"));
end
rule "No Step Rule for P1487/1A-NO"
	when
		StepPerformed(stepId=="P1487/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/1A-NO"));
end
rule "Yes Step Rule for P1487/2A"
	when
		StepPerformed(stepId=="P1487/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/2A"));
end
rule "No Step Rule for P1487/2A"
	when
		StepPerformed(stepId=="P1487/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1487/2A"));
end
rule "Yes Step Rule for P1487/2A-YES"
	when
		StepPerformed(stepId=="P1487/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/2A-YES"));
end
rule "No Step Rule for P1487/2A-YES"
	when
		StepPerformed(stepId=="P1487/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/2A-YES"));
end
rule "Yes Step Rule for P1487/2A-NO"
	when
		StepPerformed(stepId=="P1487/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/2A-NO"));
end
rule "No Step Rule for P1487/2A-NO"
	when
		StepPerformed(stepId=="P1487/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/2A-NO"));
end
rule "Yes Step Rule for P1487/2B"
	when
		StepPerformed(stepId=="P1487/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/2B"));
end
rule "No Step Rule for P1487/2B"
	when
		StepPerformed(stepId=="P1487/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1487/2B"));
end
rule "Yes Step Rule for P1487/2B-YES"
	when
		StepPerformed(stepId=="P1487/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/2B-YES"));
end
rule "No Step Rule for P1487/2B-YES"
	when
		StepPerformed(stepId=="P1487/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/2B-YES"));
end
rule "Yes Step Rule for P1487/2B-NO"
	when
		StepPerformed(stepId=="P1487/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/2B-NO"));
end
rule "No Step Rule for P1487/2B-NO"
	when
		StepPerformed(stepId=="P1487/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/2B-NO"));
end
rule "Yes Step Rule for P1487/2C"
	when
		StepPerformed(stepId=="P1487/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/2C"));
end
rule "No Step Rule for P1487/2C"
	when
		StepPerformed(stepId=="P1487/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1487/2C"));
end
rule "Yes Step Rule for P1487/2C-YES"
	when
		StepPerformed(stepId=="P1487/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/2C-YES"));
end
rule "No Step Rule for P1487/2C-YES"
	when
		StepPerformed(stepId=="P1487/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/2C-YES"));
end
rule "Yes Step Rule for P1487/2C-NO"
	when
		StepPerformed(stepId=="P1487/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/2C-NO"));
end
rule "No Step Rule for P1487/2C-NO"
	when
		StepPerformed(stepId=="P1487/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/2C-NO"));
end
rule "Yes Step Rule for P1487/3A"
	when
		StepPerformed(stepId=="P1487/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/3A"));
end
rule "No Step Rule for P1487/3A"
	when
		StepPerformed(stepId=="P1487/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1487/3A"));
end
rule "Yes Step Rule for P1487/3A-YES"
	when
		StepPerformed(stepId=="P1487/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/3A-YES"));
end
rule "No Step Rule for P1487/3A-YES"
	when
		StepPerformed(stepId=="P1487/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/3A-YES"));
end
rule "Yes Step Rule for P1487/3A-NO"
	when
		StepPerformed(stepId=="P1487/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/3A-NO"));
end
rule "No Step Rule for P1487/3A-NO"
	when
		StepPerformed(stepId=="P1487/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/3A-NO"));
end
rule "Yes Step Rule for P1487/4A"
	when
		StepPerformed(stepId=="P1487/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/4A"));
end
rule "No Step Rule for P1487/4A"
	when
		StepPerformed(stepId=="P1487/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1487/4A"));
end
rule "Yes Step Rule for P1487/4A-YES"
	when
		StepPerformed(stepId=="P1487/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/4A-YES"));
end
rule "No Step Rule for P1487/4A-YES"
	when
		StepPerformed(stepId=="P1487/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/4A-YES"));
end
rule "Yes Step Rule for P1487/4A-NO"
	when
		StepPerformed(stepId=="P1487/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1487/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1487/4A-NO"));
end
rule "No Step Rule for P1487/4A-NO"
	when
		StepPerformed(stepId=="P1487/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1487/4A-NO"));
end
rule "Yes Step Rule for P1488/1A"
	when
		StepPerformed(stepId=="P1488/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/1A"));
end
rule "No Step Rule for P1488/1A"
	when
		StepPerformed(stepId=="P1488/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2B",$sum.doubleValue() + 100.0,"Answered No to step P1488/1A"));
end
rule "Yes Step Rule for P1488/1A-YES"
	when
		StepPerformed(stepId=="P1488/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/1A-YES"));
end
rule "No Step Rule for P1488/1A-YES"
	when
		StepPerformed(stepId=="P1488/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/1A-YES"));
end
rule "Yes Step Rule for P1488/1A-NO"
	when
		StepPerformed(stepId=="P1488/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/1A-NO"));
end
rule "No Step Rule for P1488/1A-NO"
	when
		StepPerformed(stepId=="P1488/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/1A-NO"));
end
rule "Yes Step Rule for P1488/2A"
	when
		StepPerformed(stepId=="P1488/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2A"));
end
rule "No Step Rule for P1488/2A"
	when
		StepPerformed(stepId=="P1488/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1488/2A"));
end
rule "Yes Step Rule for P1488/2A-YES"
	when
		StepPerformed(stepId=="P1488/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2A-YES"));
end
rule "No Step Rule for P1488/2A-YES"
	when
		StepPerformed(stepId=="P1488/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2A-YES"));
end
rule "Yes Step Rule for P1488/2A-NO"
	when
		StepPerformed(stepId=="P1488/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2A-NO"));
end
rule "No Step Rule for P1488/2A-NO"
	when
		StepPerformed(stepId=="P1488/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2A-NO"));
end
rule "Yes Step Rule for P1488/2B"
	when
		StepPerformed(stepId=="P1488/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2B"));
end
rule "No Step Rule for P1488/2B"
	when
		StepPerformed(stepId=="P1488/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1488/2B"));
end
rule "Yes Step Rule for P1488/2B-YES"
	when
		StepPerformed(stepId=="P1488/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2B-YES"));
end
rule "No Step Rule for P1488/2B-YES"
	when
		StepPerformed(stepId=="P1488/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2B-YES"));
end
rule "Yes Step Rule for P1488/2B-NO"
	when
		StepPerformed(stepId=="P1488/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2B-NO"));
end
rule "No Step Rule for P1488/2B-NO"
	when
		StepPerformed(stepId=="P1488/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2B-NO"));
end
rule "Yes Step Rule for P1488/2C"
	when
		StepPerformed(stepId=="P1488/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2C"));
end
rule "No Step Rule for P1488/2C"
	when
		StepPerformed(stepId=="P1488/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2D",$sum.doubleValue() + 100.0,"Answered No to step P1488/2C"));
end
rule "Yes Step Rule for P1488/2C-YES"
	when
		StepPerformed(stepId=="P1488/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2C-YES"));
end
rule "No Step Rule for P1488/2C-YES"
	when
		StepPerformed(stepId=="P1488/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2C-YES"));
end
rule "Yes Step Rule for P1488/2C-NO"
	when
		StepPerformed(stepId=="P1488/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2C-NO"));
end
rule "No Step Rule for P1488/2C-NO"
	when
		StepPerformed(stepId=="P1488/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2C-NO"));
end
rule "Yes Step Rule for P1488/2D"
	when
		StepPerformed(stepId=="P1488/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2D"));
end
rule "No Step Rule for P1488/2D"
	when
		StepPerformed(stepId=="P1488/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step P1488/2D"));
end
rule "Yes Step Rule for P1488/2D-YES"
	when
		StepPerformed(stepId=="P1488/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2D-YES"));
end
rule "No Step Rule for P1488/2D-YES"
	when
		StepPerformed(stepId=="P1488/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2D-YES"));
end
rule "Yes Step Rule for P1488/2D-NO"
	when
		StepPerformed(stepId=="P1488/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2D-NO"));
end
rule "No Step Rule for P1488/2D-NO"
	when
		StepPerformed(stepId=="P1488/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2D-NO"));
end
rule "Yes Step Rule for P1488/2E"
	when
		StepPerformed(stepId=="P1488/2E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2E"));
end
rule "No Step Rule for P1488/2E"
	when
		StepPerformed(stepId=="P1488/2E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2E-NO",$sum.doubleValue() + 100.0,"Answered No to step P1488/2E"));
end
rule "Yes Step Rule for P1488/2E-YES"
	when
		StepPerformed(stepId=="P1488/2E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2E-YES"));
end
rule "No Step Rule for P1488/2E-YES"
	when
		StepPerformed(stepId=="P1488/2E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2E-YES"));
end
rule "Yes Step Rule for P1488/2E-NO"
	when
		StepPerformed(stepId=="P1488/2E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2E-NO"));
end
rule "No Step Rule for P1488/2E-NO"
	when
		StepPerformed(stepId=="P1488/2E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2E-NO"));
end
rule "Yes Step Rule for P1488/2F"
	when
		StepPerformed(stepId=="P1488/2F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2F"));
end
rule "No Step Rule for P1488/2F"
	when
		StepPerformed(stepId=="P1488/2F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/2F-NO",$sum.doubleValue() + 100.0,"Answered No to step P1488/2F"));
end
rule "Yes Step Rule for P1488/2F-YES"
	when
		StepPerformed(stepId=="P1488/2F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2F-YES"));
end
rule "No Step Rule for P1488/2F-YES"
	when
		StepPerformed(stepId=="P1488/2F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2F-YES"));
end
rule "Yes Step Rule for P1488/2F-NO"
	when
		StepPerformed(stepId=="P1488/2F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/2F-NO"));
end
rule "No Step Rule for P1488/2F-NO"
	when
		StepPerformed(stepId=="P1488/2F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/2F-NO"));
end
rule "Yes Step Rule for P1488/3A"
	when
		StepPerformed(stepId=="P1488/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/3A"));
end
rule "No Step Rule for P1488/3A"
	when
		StepPerformed(stepId=="P1488/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1488/3A"));
end
rule "Yes Step Rule for P1488/3A-YES"
	when
		StepPerformed(stepId=="P1488/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/3A-YES"));
end
rule "No Step Rule for P1488/3A-YES"
	when
		StepPerformed(stepId=="P1488/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/3A-YES"));
end
rule "Yes Step Rule for P1488/3A-NO"
	when
		StepPerformed(stepId=="P1488/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/3A-NO"));
end
rule "No Step Rule for P1488/3A-NO"
	when
		StepPerformed(stepId=="P1488/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/3A-NO"));
end
rule "Yes Step Rule for P1488/4A"
	when
		StepPerformed(stepId=="P1488/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/4A"));
end
rule "No Step Rule for P1488/4A"
	when
		StepPerformed(stepId=="P1488/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1488/4A"));
end
rule "Yes Step Rule for P1488/4A-YES"
	when
		StepPerformed(stepId=="P1488/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/4A-YES"));
end
rule "No Step Rule for P1488/4A-YES"
	when
		StepPerformed(stepId=="P1488/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/4A-YES"));
end
rule "Yes Step Rule for P1488/4A-NO"
	when
		StepPerformed(stepId=="P1488/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1488/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1488/4A-NO"));
end
rule "No Step Rule for P1488/4A-NO"
	when
		StepPerformed(stepId=="P1488/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1488/4A-NO"));
end
rule "Yes Step Rule for P1490/1A"
	when
		StepPerformed(stepId=="P1490/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/1A"));
end
rule "No Step Rule for P1490/1A"
	when
		StepPerformed(stepId=="P1490/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/1B",$sum.doubleValue() + 100.0,"Answered No to step P1490/1A"));
end
rule "Yes Step Rule for P1490/1A-YES"
	when
		StepPerformed(stepId=="P1490/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/1A-YES"));
end
rule "No Step Rule for P1490/1A-YES"
	when
		StepPerformed(stepId=="P1490/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/1A-YES"));
end
rule "Yes Step Rule for P1490/1A-NO"
	when
		StepPerformed(stepId=="P1490/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/1A-NO"));
end
rule "No Step Rule for P1490/1A-NO"
	when
		StepPerformed(stepId=="P1490/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/1A-NO"));
end
rule "Yes Step Rule for P1490/1B"
	when
		StepPerformed(stepId=="P1490/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/1B"));
end
rule "No Step Rule for P1490/1B"
	when
		StepPerformed(stepId=="P1490/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/2A",$sum.doubleValue() + 100.0,"Answered No to step P1490/1B"));
end
rule "Yes Step Rule for P1490/1B-YES"
	when
		StepPerformed(stepId=="P1490/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/1B-YES"));
end
rule "No Step Rule for P1490/1B-YES"
	when
		StepPerformed(stepId=="P1490/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/1B-YES"));
end
rule "Yes Step Rule for P1490/1B-NO"
	when
		StepPerformed(stepId=="P1490/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/1B-NO"));
end
rule "No Step Rule for P1490/1B-NO"
	when
		StepPerformed(stepId=="P1490/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/1B-NO"));
end
rule "Yes Step Rule for P1490/2A"
	when
		StepPerformed(stepId=="P1490/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/2A"));
end
rule "No Step Rule for P1490/2A"
	when
		StepPerformed(stepId=="P1490/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1490/2A"));
end
rule "Yes Step Rule for P1490/2A-YES"
	when
		StepPerformed(stepId=="P1490/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/2A-YES"));
end
rule "No Step Rule for P1490/2A-YES"
	when
		StepPerformed(stepId=="P1490/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/2A-YES"));
end
rule "Yes Step Rule for P1490/2A-NO"
	when
		StepPerformed(stepId=="P1490/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/2A-NO"));
end
rule "No Step Rule for P1490/2A-NO"
	when
		StepPerformed(stepId=="P1490/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/2A-NO"));
end
rule "Yes Step Rule for P1490/2B"
	when
		StepPerformed(stepId=="P1490/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/2B"));
end
rule "No Step Rule for P1490/2B"
	when
		StepPerformed(stepId=="P1490/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1490/2B"));
end
rule "Yes Step Rule for P1490/2B-YES"
	when
		StepPerformed(stepId=="P1490/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/2B-YES"));
end
rule "No Step Rule for P1490/2B-YES"
	when
		StepPerformed(stepId=="P1490/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/2B-YES"));
end
rule "Yes Step Rule for P1490/2B-NO"
	when
		StepPerformed(stepId=="P1490/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/2B-NO"));
end
rule "No Step Rule for P1490/2B-NO"
	when
		StepPerformed(stepId=="P1490/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/2B-NO"));
end
rule "Yes Step Rule for P1490/2C"
	when
		StepPerformed(stepId=="P1490/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/2C"));
end
rule "No Step Rule for P1490/2C"
	when
		StepPerformed(stepId=="P1490/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1490/2C"));
end
rule "Yes Step Rule for P1490/2C-YES"
	when
		StepPerformed(stepId=="P1490/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/2C-YES"));
end
rule "No Step Rule for P1490/2C-YES"
	when
		StepPerformed(stepId=="P1490/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/2C-YES"));
end
rule "Yes Step Rule for P1490/2C-NO"
	when
		StepPerformed(stepId=="P1490/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/2C-NO"));
end
rule "No Step Rule for P1490/2C-NO"
	when
		StepPerformed(stepId=="P1490/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/2C-NO"));
end
rule "Yes Step Rule for P1490/3A"
	when
		StepPerformed(stepId=="P1490/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/3A"));
end
rule "No Step Rule for P1490/3A"
	when
		StepPerformed(stepId=="P1490/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1490/3A"));
end
rule "Yes Step Rule for P1490/3A-YES"
	when
		StepPerformed(stepId=="P1490/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1490/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/3A-YES"));
end
rule "No Step Rule for P1490/3A-YES"
	when
		StepPerformed(stepId=="P1490/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/3A-YES"));
end
rule "Yes Step Rule for P1490/3A-NO"
	when
		StepPerformed(stepId=="P1490/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1490/3A-NO"));
end
rule "No Step Rule for P1490/3A-NO"
	when
		StepPerformed(stepId=="P1490/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1490/3A-NO"));
end
rule "Yes Step Rule for P1495/1A"
	when
		StepPerformed(stepId=="P1495/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1495/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1495/1A"));
end
rule "No Step Rule for P1495/1A"
	when
		StepPerformed(stepId=="P1495/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1495/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1495/1A"));
end
rule "Yes Step Rule for P1495/1A-YES"
	when
		StepPerformed(stepId=="P1495/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1495/1A-YES"));
end
rule "No Step Rule for P1495/1A-YES"
	when
		StepPerformed(stepId=="P1495/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1495/1A-YES"));
end
rule "Yes Step Rule for P1495/1A-NO"
	when
		StepPerformed(stepId=="P1495/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1495/1A-NO"));
end
rule "No Step Rule for P1495/1A-NO"
	when
		StepPerformed(stepId=="P1495/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1495/1A-NO"));
end
rule "Yes Step Rule for P1495/2A"
	when
		StepPerformed(stepId=="P1495/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1495/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1495/2A"));
end
rule "No Step Rule for P1495/2A"
	when
		StepPerformed(stepId=="P1495/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1495/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1495/2A"));
end
rule "Yes Step Rule for P1495/2A-YES"
	when
		StepPerformed(stepId=="P1495/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1495/2A-YES"));
end
rule "No Step Rule for P1495/2A-YES"
	when
		StepPerformed(stepId=="P1495/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1495/2A-YES"));
end
rule "Yes Step Rule for P1495/2A-NO"
	when
		StepPerformed(stepId=="P1495/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1495/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1495/2A-NO"));
end
rule "No Step Rule for P1495/2A-NO"
	when
		StepPerformed(stepId=="P1495/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1495/2A-NO"));
end
rule "Yes Step Rule for P1496/1A"
	when
		StepPerformed(stepId=="P1496/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1496/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1496/1A"));
end
rule "No Step Rule for P1496/1A"
	when
		StepPerformed(stepId=="P1496/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1496/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1496/1A"));
end
rule "Yes Step Rule for P1496/1A-YES"
	when
		StepPerformed(stepId=="P1496/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1496/1A-YES"));
end
rule "No Step Rule for P1496/1A-YES"
	when
		StepPerformed(stepId=="P1496/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1496/1A-YES"));
end
rule "Yes Step Rule for P1496/1A-NO"
	when
		StepPerformed(stepId=="P1496/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1496/1A-NO"));
end
rule "No Step Rule for P1496/1A-NO"
	when
		StepPerformed(stepId=="P1496/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1496/1A-NO"));
end
rule "Yes Step Rule for P1496/2A"
	when
		StepPerformed(stepId=="P1496/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1496/2A"));
end
rule "No Step Rule for P1496/2A"
	when
		StepPerformed(stepId=="P1496/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered No to step P1496/2A"));
end
rule "Yes Step Rule for P153B/1A"
	when
		StepPerformed(stepId=="P153B/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/1A"));
end
rule "No Step Rule for P153B/1A"
	when
		StepPerformed(stepId=="P153B/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/2B",$sum.doubleValue() + 100.0,"Answered No to step P153B/1A"));
end
rule "Yes Step Rule for P153B/1A-YES"
	when
		StepPerformed(stepId=="P153B/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/1A-YES"));
end
rule "No Step Rule for P153B/1A-YES"
	when
		StepPerformed(stepId=="P153B/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/1A-YES"));
end
rule "Yes Step Rule for P153B/1A-NO"
	when
		StepPerformed(stepId=="P153B/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/1A-NO"));
end
rule "No Step Rule for P153B/1A-NO"
	when
		StepPerformed(stepId=="P153B/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/1A-NO"));
end
rule "Yes Step Rule for P153B/2A"
	when
		StepPerformed(stepId=="P153B/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/2A"));
end
rule "No Step Rule for P153B/2A"
	when
		StepPerformed(stepId=="P153B/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/3A",$sum.doubleValue() + 100.0,"Answered No to step P153B/2A"));
end
rule "Yes Step Rule for P153B/2A-YES"
	when
		StepPerformed(stepId=="P153B/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/2A-YES"));
end
rule "No Step Rule for P153B/2A-YES"
	when
		StepPerformed(stepId=="P153B/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/2A-YES"));
end
rule "Yes Step Rule for P153B/2A-NO"
	when
		StepPerformed(stepId=="P153B/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/2A-NO"));
end
rule "No Step Rule for P153B/2A-NO"
	when
		StepPerformed(stepId=="P153B/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/2A-NO"));
end
rule "Yes Step Rule for P153B/2B"
	when
		StepPerformed(stepId=="P153B/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/2B"));
end
rule "No Step Rule for P153B/2B"
	when
		StepPerformed(stepId=="P153B/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P153B/2B"));
end
rule "Yes Step Rule for P153B/2B-YES"
	when
		StepPerformed(stepId=="P153B/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/2B-YES"));
end
rule "No Step Rule for P153B/2B-YES"
	when
		StepPerformed(stepId=="P153B/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/2B-YES"));
end
rule "Yes Step Rule for P153B/2B-NO"
	when
		StepPerformed(stepId=="P153B/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/2B-NO"));
end
rule "No Step Rule for P153B/2B-NO"
	when
		StepPerformed(stepId=="P153B/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/2B-NO"));
end
rule "Yes Step Rule for P153B/3A"
	when
		StepPerformed(stepId=="P153B/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/3A"));
end
rule "No Step Rule for P153B/3A"
	when
		StepPerformed(stepId=="P153B/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/3B",$sum.doubleValue() + 100.0,"Answered No to step P153B/3A"));
end
rule "Yes Step Rule for P153B/3A-YES"
	when
		StepPerformed(stepId=="P153B/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/3A-YES"));
end
rule "No Step Rule for P153B/3A-YES"
	when
		StepPerformed(stepId=="P153B/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/3A-YES"));
end
rule "Yes Step Rule for P153B/3A-NO"
	when
		StepPerformed(stepId=="P153B/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/3A-NO"));
end
rule "No Step Rule for P153B/3A-NO"
	when
		StepPerformed(stepId=="P153B/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/3A-NO"));
end
rule "Yes Step Rule for P153B/3B"
	when
		StepPerformed(stepId=="P153B/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/3B"));
end
rule "No Step Rule for P153B/3B"
	when
		StepPerformed(stepId=="P153B/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P153B/3B"));
end
rule "Yes Step Rule for P153B/3B-YES"
	when
		StepPerformed(stepId=="P153B/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/3B-YES"));
end
rule "No Step Rule for P153B/3B-YES"
	when
		StepPerformed(stepId=="P153B/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/3B-YES"));
end
rule "Yes Step Rule for P153B/3B-NO"
	when
		StepPerformed(stepId=="P153B/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/3B-NO"));
end
rule "No Step Rule for P153B/3B-NO"
	when
		StepPerformed(stepId=="P153B/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/3B-NO"));
end
rule "Yes Step Rule for P153B/4A"
	when
		StepPerformed(stepId=="P153B/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/4A"));
end
rule "No Step Rule for P153B/4A"
	when
		StepPerformed(stepId=="P153B/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P153B/4A"));
end
rule "Yes Step Rule for P153B/4A-YES"
	when
		StepPerformed(stepId=="P153B/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/4A-YES"));
end
rule "No Step Rule for P153B/4A-YES"
	when
		StepPerformed(stepId=="P153B/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/4A-YES"));
end
rule "Yes Step Rule for P153B/4A-NO"
	when
		StepPerformed(stepId=="P153B/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P153B/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P153B/4A-NO"));
end
rule "No Step Rule for P153B/4A-NO"
	when
		StepPerformed(stepId=="P153B/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P153B/4A-NO"));
end
rule "Yes Step Rule for P1710/1A"
	when
		StepPerformed(stepId=="P1710/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1A"));
end
rule "No Step Rule for P1710/1A"
	when
		StepPerformed(stepId=="P1710/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1710/1A"));
end
rule "Yes Step Rule for P1710/1A-YES"
	when
		StepPerformed(stepId=="P1710/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1A-YES"));
end
rule "No Step Rule for P1710/1A-YES"
	when
		StepPerformed(stepId=="P1710/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/1A-YES"));
end
rule "Yes Step Rule for P1710/1A-NO"
	when
		StepPerformed(stepId=="P1710/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1A-NO"));
end
rule "No Step Rule for P1710/1A-NO"
	when
		StepPerformed(stepId=="P1710/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/1A-NO"));
end
rule "Yes Step Rule for P1710/1B"
	when
		StepPerformed(stepId=="P1710/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1B"));
end
rule "No Step Rule for P1710/1B"
	when
		StepPerformed(stepId=="P1710/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1710/1B"));
end
rule "Yes Step Rule for P1710/1B-YES"
	when
		StepPerformed(stepId=="P1710/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1B-YES"));
end
rule "No Step Rule for P1710/1B-YES"
	when
		StepPerformed(stepId=="P1710/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/1B-YES"));
end
rule "Yes Step Rule for P1710/1B-NO"
	when
		StepPerformed(stepId=="P1710/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1B-NO"));
end
rule "No Step Rule for P1710/1B-NO"
	when
		StepPerformed(stepId=="P1710/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/1B-NO"));
end
rule "Yes Step Rule for P1710/1C"
	when
		StepPerformed(stepId=="P1710/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1C"));
end
rule "No Step Rule for P1710/1C"
	when
		StepPerformed(stepId=="P1710/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1D",$sum.doubleValue() + 100.0,"Answered No to step P1710/1C"));
end
rule "Yes Step Rule for P1710/1C-YES"
	when
		StepPerformed(stepId=="P1710/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1C-YES"));
end
rule "No Step Rule for P1710/1C-YES"
	when
		StepPerformed(stepId=="P1710/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/1C-YES"));
end
rule "Yes Step Rule for P1710/1C-NO"
	when
		StepPerformed(stepId=="P1710/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1D",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1C-NO"));
end
rule "No Step Rule for P1710/1C-NO"
	when
		StepPerformed(stepId=="P1710/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/1C-NO"));
end
rule "Yes Step Rule for P1710/1D"
	when
		StepPerformed(stepId=="P1710/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1D"));
end
rule "No Step Rule for P1710/1D"
	when
		StepPerformed(stepId=="P1710/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/3A",$sum.doubleValue() + 100.0,"Answered No to step P1710/1D"));
end
rule "Yes Step Rule for P1710/1D-YES"
	when
		StepPerformed(stepId=="P1710/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1D-YES"));
end
rule "No Step Rule for P1710/1D-YES"
	when
		StepPerformed(stepId=="P1710/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/1D-YES"));
end
rule "Yes Step Rule for P1710/1D-NO"
	when
		StepPerformed(stepId=="P1710/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/1D-NO"));
end
rule "No Step Rule for P1710/1D-NO"
	when
		StepPerformed(stepId=="P1710/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/1D-NO"));
end
rule "Yes Step Rule for P1710/2A"
	when
		StepPerformed(stepId=="P1710/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/2A"));
end
rule "No Step Rule for P1710/2A"
	when
		StepPerformed(stepId=="P1710/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1710/2A"));
end
rule "Yes Step Rule for P1710/2A-YES"
	when
		StepPerformed(stepId=="P1710/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/2A-YES"));
end
rule "No Step Rule for P1710/2A-YES"
	when
		StepPerformed(stepId=="P1710/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/2A-YES"));
end
rule "Yes Step Rule for P1710/2A-NO"
	when
		StepPerformed(stepId=="P1710/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/2A-NO"));
end
rule "No Step Rule for P1710/2A-NO"
	when
		StepPerformed(stepId=="P1710/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/2A-NO"));
end
rule "Yes Step Rule for P1710/3A"
	when
		StepPerformed(stepId=="P1710/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/3A"));
end
rule "No Step Rule for P1710/3A"
	when
		StepPerformed(stepId=="P1710/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1710/3A"));
end
rule "Yes Step Rule for P1710/3A-YES"
	when
		StepPerformed(stepId=="P1710/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/3A-YES"));
end
rule "No Step Rule for P1710/3A-YES"
	when
		StepPerformed(stepId=="P1710/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/3A-YES"));
end
rule "Yes Step Rule for P1710/3A-NO"
	when
		StepPerformed(stepId=="P1710/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1710/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1710/3A-NO"));
end
rule "No Step Rule for P1710/3A-NO"
	when
		StepPerformed(stepId=="P1710/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1710/3A-NO"));
end
rule "Yes Step Rule for P1727/1A"
	when
		StepPerformed(stepId=="P1727/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1A"));
end
rule "No Step Rule for P1727/1A"
	when
		StepPerformed(stepId=="P1727/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/1B",$sum.doubleValue() + 100.0,"Answered No to step P1727/1A"));
end
rule "Yes Step Rule for P1727/1A-YES"
	when
		StepPerformed(stepId=="P1727/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1A-YES"));
end
rule "No Step Rule for P1727/1A-YES"
	when
		StepPerformed(stepId=="P1727/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1727/1A-YES"));
end
rule "Yes Step Rule for P1727/1A-NO"
	when
		StepPerformed(stepId=="P1727/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1A-NO"));
end
rule "No Step Rule for P1727/1A-NO"
	when
		StepPerformed(stepId=="P1727/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1727/1A-NO"));
end
rule "Yes Step Rule for P1727/1B"
	when
		StepPerformed(stepId=="P1727/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1B"));
end
rule "No Step Rule for P1727/1B"
	when
		StepPerformed(stepId=="P1727/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1727/1B"));
end
rule "Yes Step Rule for P1727/1B-YES"
	when
		StepPerformed(stepId=="P1727/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1B-YES"));
end
rule "No Step Rule for P1727/1B-YES"
	when
		StepPerformed(stepId=="P1727/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1727/1B-YES"));
end
rule "Yes Step Rule for P1727/1B-NO"
	when
		StepPerformed(stepId=="P1727/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1B-NO"));
end
rule "No Step Rule for P1727/1B-NO"
	when
		StepPerformed(stepId=="P1727/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1727/1B-NO"));
end
rule "Yes Step Rule for P1727/1C"
	when
		StepPerformed(stepId=="P1727/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1C"));
end
rule "No Step Rule for P1727/1C"
	when
		StepPerformed(stepId=="P1727/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered No to step P1727/1C"));
end
rule "Yes Step Rule for P1727/1D"
	when
		StepPerformed(stepId=="P1727/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/1D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1D"));
end
rule "No Step Rule for P1727/1D"
	when
		StepPerformed(stepId=="P1727/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/1D-NO",$sum.doubleValue() + 100.0,"Answered No to step P1727/1D"));
end
rule "Yes Step Rule for P1727/1D-YES"
	when
		StepPerformed(stepId=="P1727/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1D-YES"));
end
rule "No Step Rule for P1727/1D-YES"
	when
		StepPerformed(stepId=="P1727/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1727/1D-YES"));
end
rule "Yes Step Rule for P1727/1D-NO"
	when
		StepPerformed(stepId=="P1727/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/1D-NO"));
end
rule "No Step Rule for P1727/1D-NO"
	when
		StepPerformed(stepId=="P1727/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1727/1D-NO"));
end
rule "Yes Step Rule for P1727/2A"
	when
		StepPerformed(stepId=="P1727/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/2A"));
end
rule "No Step Rule for P1727/2A"
	when
		StepPerformed(stepId=="P1727/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1727/2A"));
end
rule "Yes Step Rule for P1727/2A-YES"
	when
		StepPerformed(stepId=="P1727/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/2A-YES"));
end
rule "No Step Rule for P1727/2A-YES"
	when
		StepPerformed(stepId=="P1727/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1727/2A-YES"));
end
rule "Yes Step Rule for P1727/2A-NO"
	when
		StepPerformed(stepId=="P1727/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1727/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P1727/2A-NO"));
end
rule "No Step Rule for P1727/2A-NO"
	when
		StepPerformed(stepId=="P1727/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1727/2A-NO"));
end
rule "Yes Step Rule for P1870/1A"
	when
		StepPerformed(stepId=="P1870/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/1A"));
end
rule "No Step Rule for P1870/1A"
	when
		StepPerformed(stepId=="P1870/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/1B",$sum.doubleValue() + 100.0,"Answered No to step P1870/1A"));
end
rule "Yes Step Rule for P1870/1A-YES"
	when
		StepPerformed(stepId=="P1870/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/1A-YES"));
end
rule "No Step Rule for P1870/1A-YES"
	when
		StepPerformed(stepId=="P1870/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/1A-YES"));
end
rule "Yes Step Rule for P1870/1A-NO"
	when
		StepPerformed(stepId=="P1870/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/1A-NO"));
end
rule "No Step Rule for P1870/1A-NO"
	when
		StepPerformed(stepId=="P1870/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/1A-NO"));
end
rule "Yes Step Rule for P1870/1B"
	when
		StepPerformed(stepId=="P1870/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/1B"));
end
rule "No Step Rule for P1870/1B"
	when
		StepPerformed(stepId=="P1870/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1870/1B"));
end
rule "Yes Step Rule for P1870/1B-YES"
	when
		StepPerformed(stepId=="P1870/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/1B-YES"));
end
rule "No Step Rule for P1870/1B-YES"
	when
		StepPerformed(stepId=="P1870/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/1B-YES"));
end
rule "Yes Step Rule for P1870/1B-NO"
	when
		StepPerformed(stepId=="P1870/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/1B-NO"));
end
rule "No Step Rule for P1870/1B-NO"
	when
		StepPerformed(stepId=="P1870/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/1B-NO"));
end
rule "Yes Step Rule for P1870/1C"
	when
		StepPerformed(stepId=="P1870/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/1C"));
end
rule "No Step Rule for P1870/1C"
	when
		StepPerformed(stepId=="P1870/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/1C-NO",$sum.doubleValue() + 100.0,"Answered No to step P1870/1C"));
end
rule "Yes Step Rule for P1870/1C-YES"
	when
		StepPerformed(stepId=="P1870/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/1C-YES"));
end
rule "No Step Rule for P1870/1C-YES"
	when
		StepPerformed(stepId=="P1870/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/1C-YES"));
end
rule "Yes Step Rule for P1870/1C-NO"
	when
		StepPerformed(stepId=="P1870/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/1C-NO"));
end
rule "No Step Rule for P1870/1C-NO"
	when
		StepPerformed(stepId=="P1870/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/1C-NO"));
end
rule "Yes Step Rule for P1870/2A"
	when
		StepPerformed(stepId=="P1870/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/2A"));
end
rule "No Step Rule for P1870/2A"
	when
		StepPerformed(stepId=="P1870/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/2B",$sum.doubleValue() + 100.0,"Answered No to step P1870/2A"));
end
rule "Yes Step Rule for P1870/2A-YES"
	when
		StepPerformed(stepId=="P1870/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/2A-YES"));
end
rule "No Step Rule for P1870/2A-YES"
	when
		StepPerformed(stepId=="P1870/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/2A-YES"));
end
rule "Yes Step Rule for P1870/2A-NO"
	when
		StepPerformed(stepId=="P1870/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/2A-NO"));
end
rule "No Step Rule for P1870/2A-NO"
	when
		StepPerformed(stepId=="P1870/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/2A-NO"));
end
rule "Yes Step Rule for P1870/2B"
	when
		StepPerformed(stepId=="P1870/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/2B"));
end
rule "No Step Rule for P1870/2B"
	when
		StepPerformed(stepId=="P1870/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1870/2B"));
end
rule "Yes Step Rule for P1870/2B-YES"
	when
		StepPerformed(stepId=="P1870/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/2B-YES"));
end
rule "No Step Rule for P1870/2B-YES"
	when
		StepPerformed(stepId=="P1870/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/2B-YES"));
end
rule "Yes Step Rule for P1870/2B-NO"
	when
		StepPerformed(stepId=="P1870/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/2B-NO"));
end
rule "No Step Rule for P1870/2B-NO"
	when
		StepPerformed(stepId=="P1870/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/2B-NO"));
end
rule "Yes Step Rule for P1870/3A"
	when
		StepPerformed(stepId=="P1870/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/3A"));
end
rule "No Step Rule for P1870/3A"
	when
		StepPerformed(stepId=="P1870/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P1870/3A"));
end
rule "Yes Step Rule for P1870/3A-YES"
	when
		StepPerformed(stepId=="P1870/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/3A-YES"));
end
rule "No Step Rule for P1870/3A-YES"
	when
		StepPerformed(stepId=="P1870/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/3A-YES"));
end
rule "Yes Step Rule for P1870/3A-NO"
	when
		StepPerformed(stepId=="P1870/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/3A-NO"));
end
rule "No Step Rule for P1870/3A-NO"
	when
		StepPerformed(stepId=="P1870/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/3A-NO"));
end
rule "Yes Step Rule for P1870/3B"
	when
		StepPerformed(stepId=="P1870/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/3B"));
end
rule "No Step Rule for P1870/3B"
	when
		StepPerformed(stepId=="P1870/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P1870/3B"));
end
rule "Yes Step Rule for P1870/3B-YES"
	when
		StepPerformed(stepId=="P1870/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/3B-YES"));
end
rule "No Step Rule for P1870/3B-YES"
	when
		StepPerformed(stepId=="P1870/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/3B-YES"));
end
rule "Yes Step Rule for P1870/3B-NO"
	when
		StepPerformed(stepId=="P1870/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P1870/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P1870/3B-NO"));
end
rule "No Step Rule for P1870/3B-NO"
	when
		StepPerformed(stepId=="P1870/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P1870/3B-NO"));
end
rule "Yes Step Rule for P228D/1A"
	when
		StepPerformed(stepId=="P228D/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/1A"));
end
rule "No Step Rule for P228D/1A"
	when
		StepPerformed(stepId=="P228D/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/2A",$sum.doubleValue() + 100.0,"Answered No to step P228D/1A"));
end
rule "Yes Step Rule for P228D/1A-YES"
	when
		StepPerformed(stepId=="P228D/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/1A-YES"));
end
rule "No Step Rule for P228D/1A-YES"
	when
		StepPerformed(stepId=="P228D/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/1A-YES"));
end
rule "Yes Step Rule for P228D/1A-NO"
	when
		StepPerformed(stepId=="P228D/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/1A-NO"));
end
rule "No Step Rule for P228D/1A-NO"
	when
		StepPerformed(stepId=="P228D/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/1A-NO"));
end
rule "Yes Step Rule for P228D/2A"
	when
		StepPerformed(stepId=="P228D/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/2A"));
end
rule "No Step Rule for P228D/2A"
	when
		StepPerformed(stepId=="P228D/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/3A",$sum.doubleValue() + 100.0,"Answered No to step P228D/2A"));
end
rule "Yes Step Rule for P228D/2A-YES"
	when
		StepPerformed(stepId=="P228D/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/2A-YES"));
end
rule "No Step Rule for P228D/2A-YES"
	when
		StepPerformed(stepId=="P228D/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/2A-YES"));
end
rule "Yes Step Rule for P228D/2A-NO"
	when
		StepPerformed(stepId=="P228D/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/2A-NO"));
end
rule "No Step Rule for P228D/2A-NO"
	when
		StepPerformed(stepId=="P228D/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/2A-NO"));
end
rule "Yes Step Rule for P228D/3A"
	when
		StepPerformed(stepId=="P228D/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/3A"));
end
rule "No Step Rule for P228D/3A"
	when
		StepPerformed(stepId=="P228D/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/4A",$sum.doubleValue() + 100.0,"Answered No to step P228D/3A"));
end
rule "Yes Step Rule for P228D/3A-YES"
	when
		StepPerformed(stepId=="P228D/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/3A-YES"));
end
rule "No Step Rule for P228D/3A-YES"
	when
		StepPerformed(stepId=="P228D/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/3A-YES"));
end
rule "Yes Step Rule for P228D/3A-NO"
	when
		StepPerformed(stepId=="P228D/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/3A-NO"));
end
rule "No Step Rule for P228D/3A-NO"
	when
		StepPerformed(stepId=="P228D/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/3A-NO"));
end
rule "Yes Step Rule for P228D/4A"
	when
		StepPerformed(stepId=="P228D/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/4A"));
end
rule "No Step Rule for P228D/4A"
	when
		StepPerformed(stepId=="P228D/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P228D/4A"));
end
rule "Yes Step Rule for P228D/4A-YES"
	when
		StepPerformed(stepId=="P228D/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/4A-YES"));
end
rule "No Step Rule for P228D/4A-YES"
	when
		StepPerformed(stepId=="P228D/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/4A-YES"));
end
rule "Yes Step Rule for P228D/4A-NO"
	when
		StepPerformed(stepId=="P228D/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/4A-NO"));
end
rule "No Step Rule for P228D/4A-NO"
	when
		StepPerformed(stepId=="P228D/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/4A-NO"));
end
rule "Yes Step Rule for P228D/4B"
	when
		StepPerformed(stepId=="P228D/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/4B"));
end
rule "No Step Rule for P228D/4B"
	when
		StepPerformed(stepId=="P228D/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P228D/4B"));
end
rule "Yes Step Rule for P228D/4B-YES"
	when
		StepPerformed(stepId=="P228D/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/4B-YES"));
end
rule "No Step Rule for P228D/4B-YES"
	when
		StepPerformed(stepId=="P228D/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/4B-YES"));
end
rule "Yes Step Rule for P228D/4B-NO"
	when
		StepPerformed(stepId=="P228D/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/4B-NO"));
end
rule "No Step Rule for P228D/4B-NO"
	when
		StepPerformed(stepId=="P228D/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/4B-NO"));
end
rule "Yes Step Rule for P228D/5A"
	when
		StepPerformed(stepId=="P228D/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/5A"));
end
rule "No Step Rule for P228D/5A"
	when
		StepPerformed(stepId=="P228D/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P228D/5A"));
end
rule "Yes Step Rule for P228D/5A-YES"
	when
		StepPerformed(stepId=="P228D/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/5A-YES"));
end
rule "No Step Rule for P228D/5A-YES"
	when
		StepPerformed(stepId=="P228D/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/5A-YES"));
end
rule "Yes Step Rule for P228D/5A-NO"
	when
		StepPerformed(stepId=="P228D/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P228D/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P228D/5A-NO"));
end
rule "No Step Rule for P228D/5A-NO"
	when
		StepPerformed(stepId=="P228D/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P228D/5A-NO"));
end
rule "Yes Step Rule for P2563/1A"
	when
		StepPerformed(stepId=="P2563/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/1A"));
end
rule "No Step Rule for P2563/1A"
	when
		StepPerformed(stepId=="P2563/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P2563/1A"));
end
rule "Yes Step Rule for P2563/1A-YES"
	when
		StepPerformed(stepId=="P2563/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/1A-YES"));
end
rule "No Step Rule for P2563/1A-YES"
	when
		StepPerformed(stepId=="P2563/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/1A-YES"));
end
rule "Yes Step Rule for P2563/1A-NO"
	when
		StepPerformed(stepId=="P2563/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/1A-NO"));
end
rule "No Step Rule for P2563/1A-NO"
	when
		StepPerformed(stepId=="P2563/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/1A-NO"));
end
rule "Yes Step Rule for P2563/2A"
	when
		StepPerformed(stepId=="P2563/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/2A"));
end
rule "No Step Rule for P2563/2A"
	when
		StepPerformed(stepId=="P2563/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/3A",$sum.doubleValue() + 100.0,"Answered No to step P2563/2A"));
end
rule "Yes Step Rule for P2563/2A-YES"
	when
		StepPerformed(stepId=="P2563/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/2A-YES"));
end
rule "No Step Rule for P2563/2A-YES"
	when
		StepPerformed(stepId=="P2563/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/2A-YES"));
end
rule "Yes Step Rule for P2563/2A-NO"
	when
		StepPerformed(stepId=="P2563/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/2A-NO"));
end
rule "No Step Rule for P2563/2A-NO"
	when
		StepPerformed(stepId=="P2563/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/2A-NO"));
end
rule "Yes Step Rule for P2563/3A"
	when
		StepPerformed(stepId=="P2563/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/3A"));
end
rule "No Step Rule for P2563/3A"
	when
		StepPerformed(stepId=="P2563/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P2563/3A"));
end
rule "Yes Step Rule for P2563/3A-YES"
	when
		StepPerformed(stepId=="P2563/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/3A-YES"));
end
rule "No Step Rule for P2563/3A-YES"
	when
		StepPerformed(stepId=="P2563/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/3A-YES"));
end
rule "Yes Step Rule for P2563/3A-NO"
	when
		StepPerformed(stepId=="P2563/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/3A-NO"));
end
rule "No Step Rule for P2563/3A-NO"
	when
		StepPerformed(stepId=="P2563/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/3A-NO"));
end
rule "Yes Step Rule for P2563/4A"
	when
		StepPerformed(stepId=="P2563/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/4A"));
end
rule "No Step Rule for P2563/4A"
	when
		StepPerformed(stepId=="P2563/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered No to step P2563/4A"));
end
rule "Yes Step Rule for P2563/4B"
	when
		StepPerformed(stepId=="P2563/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/4B"));
end
rule "No Step Rule for P2563/4B"
	when
		StepPerformed(stepId=="P2563/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P2563/4B"));
end
rule "Yes Step Rule for P2563/4B-YES"
	when
		StepPerformed(stepId=="P2563/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/4B-YES"));
end
rule "No Step Rule for P2563/4B-YES"
	when
		StepPerformed(stepId=="P2563/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/4B-YES"));
end
rule "Yes Step Rule for P2563/4B-NO"
	when
		StepPerformed(stepId=="P2563/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/4B-NO"));
end
rule "No Step Rule for P2563/4B-NO"
	when
		StepPerformed(stepId=="P2563/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/4B-NO"));
end
rule "Yes Step Rule for P2563/5A"
	when
		StepPerformed(stepId=="P2563/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/5A"));
end
rule "No Step Rule for P2563/5A"
	when
		StepPerformed(stepId=="P2563/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P2563/5A"));
end
rule "Yes Step Rule for P2563/5A-YES"
	when
		StepPerformed(stepId=="P2563/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/5A-YES"));
end
rule "No Step Rule for P2563/5A-YES"
	when
		StepPerformed(stepId=="P2563/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/5A-YES"));
end
rule "Yes Step Rule for P2563/5A-NO"
	when
		StepPerformed(stepId=="P2563/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2563/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P2563/5A-NO"));
end
rule "No Step Rule for P2563/5A-NO"
	when
		StepPerformed(stepId=="P2563/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2563/5A-NO"));
end
rule "Yes Step Rule for P2579/1A"
	when
		StepPerformed(stepId=="P2579/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/1A"));
end
rule "No Step Rule for P2579/1A"
	when
		StepPerformed(stepId=="P2579/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/1B",$sum.doubleValue() + 100.0,"Answered No to step P2579/1A"));
end
rule "Yes Step Rule for P2579/1A-YES"
	when
		StepPerformed(stepId=="P2579/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/1A-YES"));
end
rule "No Step Rule for P2579/1A-YES"
	when
		StepPerformed(stepId=="P2579/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/1A-YES"));
end
rule "Yes Step Rule for P2579/1A-NO"
	when
		StepPerformed(stepId=="P2579/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/1A-NO"));
end
rule "No Step Rule for P2579/1A-NO"
	when
		StepPerformed(stepId=="P2579/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/1A-NO"));
end
rule "Yes Step Rule for P2579/1B"
	when
		StepPerformed(stepId=="P2579/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/1B"));
end
rule "No Step Rule for P2579/1B"
	when
		StepPerformed(stepId=="P2579/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P2579/1B"));
end
rule "Yes Step Rule for P2579/1B-YES"
	when
		StepPerformed(stepId=="P2579/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/1B-YES"));
end
rule "No Step Rule for P2579/1B-YES"
	when
		StepPerformed(stepId=="P2579/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/1B-YES"));
end
rule "Yes Step Rule for P2579/1B-NO"
	when
		StepPerformed(stepId=="P2579/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/1B-NO"));
end
rule "No Step Rule for P2579/1B-NO"
	when
		StepPerformed(stepId=="P2579/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/1B-NO"));
end
rule "Yes Step Rule for P2579/1C"
	when
		StepPerformed(stepId=="P2579/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/1C"));
end
rule "No Step Rule for P2579/1C"
	when
		StepPerformed(stepId=="P2579/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered No to step P2579/1C"));
end
rule "Yes Step Rule for P2579/2A"
	when
		StepPerformed(stepId=="P2579/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/2A"));
end
rule "No Step Rule for P2579/2A"
	when
		StepPerformed(stepId=="P2579/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P2579/2A"));
end
rule "Yes Step Rule for P2579/2A-YES"
	when
		StepPerformed(stepId=="P2579/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/2A-YES"));
end
rule "No Step Rule for P2579/2A-YES"
	when
		StepPerformed(stepId=="P2579/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/2A-YES"));
end
rule "Yes Step Rule for P2579/2A-NO"
	when
		StepPerformed(stepId=="P2579/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/2A-NO"));
end
rule "No Step Rule for P2579/2A-NO"
	when
		StepPerformed(stepId=="P2579/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/2A-NO"));
end
rule "Yes Step Rule for P2579/3A"
	when
		StepPerformed(stepId=="P2579/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/3A"));
end
rule "No Step Rule for P2579/3A"
	when
		StepPerformed(stepId=="P2579/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A",$sum.doubleValue() + 100.0,"Answered No to step P2579/3A"));
end
rule "Yes Step Rule for P2579/3A-YES"
	when
		StepPerformed(stepId=="P2579/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/3A-YES"));
end
rule "No Step Rule for P2579/3A-YES"
	when
		StepPerformed(stepId=="P2579/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/3A-YES"));
end
rule "Yes Step Rule for P2579/3A-NO"
	when
		StepPerformed(stepId=="P2579/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/3A-NO"));
end
rule "No Step Rule for P2579/3A-NO"
	when
		StepPerformed(stepId=="P2579/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/3A-NO"));
end
rule "Yes Step Rule for P2579/4A"
	when
		StepPerformed(stepId=="P2579/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/4A"));
end
rule "No Step Rule for P2579/4A"
	when
		StepPerformed(stepId=="P2579/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P2579/4A"));
end
rule "Yes Step Rule for P2579/4A-YES"
	when
		StepPerformed(stepId=="P2579/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/4A-YES"));
end
rule "No Step Rule for P2579/4A-YES"
	when
		StepPerformed(stepId=="P2579/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/4A-YES"));
end
rule "Yes Step Rule for P2579/4A-NO"
	when
		StepPerformed(stepId=="P2579/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P2579/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P2579/4A-NO"));
end
rule "No Step Rule for P2579/4A-NO"
	when
		StepPerformed(stepId=="P2579/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P2579/4A-NO"));
end
rule "Yes Step Rule for P3100/1A"
	when
		StepPerformed(stepId=="P3100/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/1A"));
end
rule "No Step Rule for P3100/1A"
	when
		StepPerformed(stepId=="P3100/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/2A",$sum.doubleValue() + 100.0,"Answered No to step P3100/1A"));
end
rule "Yes Step Rule for P3100/1A-YES"
	when
		StepPerformed(stepId=="P3100/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/1A-YES"));
end
rule "No Step Rule for P3100/1A-YES"
	when
		StepPerformed(stepId=="P3100/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/1A-YES"));
end
rule "Yes Step Rule for P3100/1A-NO"
	when
		StepPerformed(stepId=="P3100/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/1A-NO"));
end
rule "No Step Rule for P3100/1A-NO"
	when
		StepPerformed(stepId=="P3100/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/1A-NO"));
end
rule "Yes Step Rule for P3100/2A"
	when
		StepPerformed(stepId=="P3100/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/2A"));
end
rule "No Step Rule for P3100/2A"
	when
		StepPerformed(stepId=="P3100/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3100/2A"));
end
rule "Yes Step Rule for P3100/2A-YES"
	when
		StepPerformed(stepId=="P3100/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/2A-YES"));
end
rule "No Step Rule for P3100/2A-YES"
	when
		StepPerformed(stepId=="P3100/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/2A-YES"));
end
rule "Yes Step Rule for P3100/2A-NO"
	when
		StepPerformed(stepId=="P3100/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/2A-NO"));
end
rule "No Step Rule for P3100/2A-NO"
	when
		StepPerformed(stepId=="P3100/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/2A-NO"));
end
rule "Yes Step Rule for P3100/3A"
	when
		StepPerformed(stepId=="P3100/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/3A"));
end
rule "No Step Rule for P3100/3A"
	when
		StepPerformed(stepId=="P3100/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/3B",$sum.doubleValue() + 100.0,"Answered No to step P3100/3A"));
end
rule "Yes Step Rule for P3100/3A-YES"
	when
		StepPerformed(stepId=="P3100/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/3A-YES"));
end
rule "No Step Rule for P3100/3A-YES"
	when
		StepPerformed(stepId=="P3100/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/3A-YES"));
end
rule "Yes Step Rule for P3100/3A-NO"
	when
		StepPerformed(stepId=="P3100/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/3A-NO"));
end
rule "No Step Rule for P3100/3A-NO"
	when
		StepPerformed(stepId=="P3100/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/3A-NO"));
end
rule "Yes Step Rule for P3100/3B"
	when
		StepPerformed(stepId=="P3100/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/3B"));
end
rule "No Step Rule for P3100/3B"
	when
		StepPerformed(stepId=="P3100/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3100/3B"));
end
rule "Yes Step Rule for P3100/3B-YES"
	when
		StepPerformed(stepId=="P3100/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/3B-YES"));
end
rule "No Step Rule for P3100/3B-YES"
	when
		StepPerformed(stepId=="P3100/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/3B-YES"));
end
rule "Yes Step Rule for P3100/3B-NO"
	when
		StepPerformed(stepId=="P3100/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/3B-NO"));
end
rule "No Step Rule for P3100/3B-NO"
	when
		StepPerformed(stepId=="P3100/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/3B-NO"));
end
rule "Yes Step Rule for P3100/4A"
	when
		StepPerformed(stepId=="P3100/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/4A"));
end
rule "No Step Rule for P3100/4A"
	when
		StepPerformed(stepId=="P3100/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3100/4A"));
end
rule "Yes Step Rule for P3100/4A-YES"
	when
		StepPerformed(stepId=="P3100/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/4A-YES"));
end
rule "No Step Rule for P3100/4A-YES"
	when
		StepPerformed(stepId=="P3100/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/4A-YES"));
end
rule "Yes Step Rule for P3100/4A-NO"
	when
		StepPerformed(stepId=="P3100/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/4A-NO"));
end
rule "No Step Rule for P3100/4A-NO"
	when
		StepPerformed(stepId=="P3100/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/4A-NO"));
end
rule "Yes Step Rule for P3100/5A"
	when
		StepPerformed(stepId=="P3100/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/5A"));
end
rule "No Step Rule for P3100/5A"
	when
		StepPerformed(stepId=="P3100/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3100/5A"));
end
rule "Yes Step Rule for P3100/5A-YES"
	when
		StepPerformed(stepId=="P3100/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/5A-YES"));
end
rule "No Step Rule for P3100/5A-YES"
	when
		StepPerformed(stepId=="P3100/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/5A-YES"));
end
rule "Yes Step Rule for P3100/5A-NO"
	when
		StepPerformed(stepId=="P3100/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3100/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3100/5A-NO"));
end
rule "No Step Rule for P3100/5A-NO"
	when
		StepPerformed(stepId=="P3100/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3100/5A-NO"));
end
rule "Yes Step Rule for P3101/1A"
	when
		StepPerformed(stepId=="P3101/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/1A"));
end
rule "No Step Rule for P3101/1A"
	when
		StepPerformed(stepId=="P3101/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3101/1A"));
end
rule "Yes Step Rule for P3101/1A-YES"
	when
		StepPerformed(stepId=="P3101/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/1A-YES"));
end
rule "No Step Rule for P3101/1A-YES"
	when
		StepPerformed(stepId=="P3101/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/1A-YES"));
end
rule "Yes Step Rule for P3101/1A-NO"
	when
		StepPerformed(stepId=="P3101/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/1A-NO"));
end
rule "No Step Rule for P3101/1A-NO"
	when
		StepPerformed(stepId=="P3101/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/1A-NO"));
end
rule "Yes Step Rule for P3101/2A"
	when
		StepPerformed(stepId=="P3101/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/2A"));
end
rule "No Step Rule for P3101/2A"
	when
		StepPerformed(stepId=="P3101/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/4A",$sum.doubleValue() + 100.0,"Answered No to step P3101/2A"));
end
rule "Yes Step Rule for P3101/2A-YES"
	when
		StepPerformed(stepId=="P3101/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/2A-YES"));
end
rule "No Step Rule for P3101/2A-YES"
	when
		StepPerformed(stepId=="P3101/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/2A-YES"));
end
rule "Yes Step Rule for P3101/2A-NO"
	when
		StepPerformed(stepId=="P3101/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/2A-NO"));
end
rule "No Step Rule for P3101/2A-NO"
	when
		StepPerformed(stepId=="P3101/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/2A-NO"));
end
rule "Yes Step Rule for P3101/3A"
	when
		StepPerformed(stepId=="P3101/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/3A"));
end
rule "No Step Rule for P3101/3A"
	when
		StepPerformed(stepId=="P3101/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3101/3A"));
end
rule "Yes Step Rule for P3101/3A-YES"
	when
		StepPerformed(stepId=="P3101/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/3A-YES"));
end
rule "No Step Rule for P3101/3A-YES"
	when
		StepPerformed(stepId=="P3101/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/3A-YES"));
end
rule "Yes Step Rule for P3101/3A-NO"
	when
		StepPerformed(stepId=="P3101/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/3A-NO"));
end
rule "No Step Rule for P3101/3A-NO"
	when
		StepPerformed(stepId=="P3101/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/3A-NO"));
end
rule "Yes Step Rule for P3101/4A"
	when
		StepPerformed(stepId=="P3101/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/4A"));
end
rule "No Step Rule for P3101/4A"
	when
		StepPerformed(stepId=="P3101/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3101/4A"));
end
rule "Yes Step Rule for P3101/4A-YES"
	when
		StepPerformed(stepId=="P3101/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/4A-YES"));
end
rule "No Step Rule for P3101/4A-YES"
	when
		StepPerformed(stepId=="P3101/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/4A-YES"));
end
rule "Yes Step Rule for P3101/4A-NO"
	when
		StepPerformed(stepId=="P3101/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/4A-NO"));
end
rule "No Step Rule for P3101/4A-NO"
	when
		StepPerformed(stepId=="P3101/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/4A-NO"));
end
rule "Yes Step Rule for P3101/5A"
	when
		StepPerformed(stepId=="P3101/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/5A"));
end
rule "No Step Rule for P3101/5A"
	when
		StepPerformed(stepId=="P3101/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3101/5A"));
end
rule "Yes Step Rule for P3101/5A-YES"
	when
		StepPerformed(stepId=="P3101/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/5A-YES"));
end
rule "No Step Rule for P3101/5A-YES"
	when
		StepPerformed(stepId=="P3101/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/5A-YES"));
end
rule "Yes Step Rule for P3101/5A-NO"
	when
		StepPerformed(stepId=="P3101/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3101/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3101/5A-NO"));
end
rule "No Step Rule for P3101/5A-NO"
	when
		StepPerformed(stepId=="P3101/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3101/5A-NO"));
end
rule "Yes Step Rule for P3759/1A"
	when
		StepPerformed(stepId=="P3759/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3759/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3759/1A"));
end
rule "No Step Rule for P3759/1A"
	when
		StepPerformed(stepId=="P3759/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3759/1B",$sum.doubleValue() + 100.0,"Answered No to step P3759/1A"));
end
rule "Yes Step Rule for P3759/1A-YES"
	when
		StepPerformed(stepId=="P3759/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3759/1A-YES"));
end
rule "No Step Rule for P3759/1A-YES"
	when
		StepPerformed(stepId=="P3759/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3759/1A-YES"));
end
rule "Yes Step Rule for P3759/1A-NO"
	when
		StepPerformed(stepId=="P3759/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3759/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3759/1A-NO"));
end
rule "No Step Rule for P3759/1A-NO"
	when
		StepPerformed(stepId=="P3759/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3759/1A-NO"));
end
rule "Yes Step Rule for P3759/1B"
	when
		StepPerformed(stepId=="P3759/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3759/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3759/1B"));
end
rule "No Step Rule for P3759/1B"
	when
		StepPerformed(stepId=="P3759/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3759/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3759/1B"));
end
rule "Yes Step Rule for P3759/1B-YES"
	when
		StepPerformed(stepId=="P3759/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3759/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3759/1B-YES"));
end
rule "No Step Rule for P3759/1B-YES"
	when
		StepPerformed(stepId=="P3759/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3759/1B-YES"));
end
rule "Yes Step Rule for P3759/1B-NO"
	when
		StepPerformed(stepId=="P3759/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3759/1B-NO"));
end
rule "No Step Rule for P3759/1B-NO"
	when
		StepPerformed(stepId=="P3759/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3759/1B-NO"));
end
rule "Yes Step Rule for P3759/2A"
	when
		StepPerformed(stepId=="P3759/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3759/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3759/2A"));
end
rule "No Step Rule for P3759/2A"
	when
		StepPerformed(stepId=="P3759/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3759/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3759/2A"));
end
rule "Yes Step Rule for P3759/2A-YES"
	when
		StepPerformed(stepId=="P3759/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3759/2A-YES"));
end
rule "No Step Rule for P3759/2A-YES"
	when
		StepPerformed(stepId=="P3759/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3759/2A-YES"));
end
rule "Yes Step Rule for P3759/2A-NO"
	when
		StepPerformed(stepId=="P3759/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3759/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3759/2A-NO"));
end
rule "No Step Rule for P3759/2A-NO"
	when
		StepPerformed(stepId=="P3759/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3759/2A-NO"));
end
rule "Yes Step Rule for P3760/1A"
	when
		StepPerformed(stepId=="P3760/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3760/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3760/1A"));
end
rule "No Step Rule for P3760/1A"
	when
		StepPerformed(stepId=="P3760/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3760/1B",$sum.doubleValue() + 100.0,"Answered No to step P3760/1A"));
end
rule "Yes Step Rule for P3760/1A-YES"
	when
		StepPerformed(stepId=="P3760/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3760/1A-YES"));
end
rule "No Step Rule for P3760/1A-YES"
	when
		StepPerformed(stepId=="P3760/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3760/1A-YES"));
end
rule "Yes Step Rule for P3760/1A-NO"
	when
		StepPerformed(stepId=="P3760/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3760/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3760/1A-NO"));
end
rule "No Step Rule for P3760/1A-NO"
	when
		StepPerformed(stepId=="P3760/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3760/1A-NO"));
end
rule "Yes Step Rule for P3760/1B"
	when
		StepPerformed(stepId=="P3760/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3760/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3760/1B"));
end
rule "No Step Rule for P3760/1B"
	when
		StepPerformed(stepId=="P3760/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3760/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3760/1B"));
end
rule "Yes Step Rule for P3760/1B-YES"
	when
		StepPerformed(stepId=="P3760/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3760/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3760/1B-YES"));
end
rule "No Step Rule for P3760/1B-YES"
	when
		StepPerformed(stepId=="P3760/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3760/1B-YES"));
end
rule "Yes Step Rule for P3760/1B-NO"
	when
		StepPerformed(stepId=="P3760/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3760/1B-NO"));
end
rule "No Step Rule for P3760/1B-NO"
	when
		StepPerformed(stepId=="P3760/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3760/1B-NO"));
end
rule "Yes Step Rule for P3760/2A"
	when
		StepPerformed(stepId=="P3760/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3760/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3760/2A"));
end
rule "No Step Rule for P3760/2A"
	when
		StepPerformed(stepId=="P3760/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3760/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3760/2A"));
end
rule "Yes Step Rule for P3760/2A-YES"
	when
		StepPerformed(stepId=="P3760/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3760/2A-YES"));
end
rule "No Step Rule for P3760/2A-YES"
	when
		StepPerformed(stepId=="P3760/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3760/2A-YES"));
end
rule "Yes Step Rule for P3760/2A-NO"
	when
		StepPerformed(stepId=="P3760/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3760/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3760/2A-NO"));
end
rule "No Step Rule for P3760/2A-NO"
	when
		StepPerformed(stepId=="P3760/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3760/2A-NO"));
end
rule "Yes Step Rule for P3761/1A"
	when
		StepPerformed(stepId=="P3761/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3761/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3761/1A"));
end
rule "No Step Rule for P3761/1A"
	when
		StepPerformed(stepId=="P3761/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3761/1B",$sum.doubleValue() + 100.0,"Answered No to step P3761/1A"));
end
rule "Yes Step Rule for P3761/1A-YES"
	when
		StepPerformed(stepId=="P3761/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3761/1A-YES"));
end
rule "No Step Rule for P3761/1A-YES"
	when
		StepPerformed(stepId=="P3761/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3761/1A-YES"));
end
rule "Yes Step Rule for P3761/1A-NO"
	when
		StepPerformed(stepId=="P3761/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3761/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3761/1A-NO"));
end
rule "No Step Rule for P3761/1A-NO"
	when
		StepPerformed(stepId=="P3761/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3761/1A-NO"));
end
rule "Yes Step Rule for P3761/1B"
	when
		StepPerformed(stepId=="P3761/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3761/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3761/1B"));
end
rule "No Step Rule for P3761/1B"
	when
		StepPerformed(stepId=="P3761/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3761/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3761/1B"));
end
rule "Yes Step Rule for P3761/1B-YES"
	when
		StepPerformed(stepId=="P3761/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3761/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3761/1B-YES"));
end
rule "No Step Rule for P3761/1B-YES"
	when
		StepPerformed(stepId=="P3761/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3761/1B-YES"));
end
rule "Yes Step Rule for P3761/1B-NO"
	when
		StepPerformed(stepId=="P3761/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3761/1B-NO"));
end
rule "No Step Rule for P3761/1B-NO"
	when
		StepPerformed(stepId=="P3761/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3761/1B-NO"));
end
rule "Yes Step Rule for P3761/2A"
	when
		StepPerformed(stepId=="P3761/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3761/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3761/2A"));
end
rule "No Step Rule for P3761/2A"
	when
		StepPerformed(stepId=="P3761/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3761/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3761/2A"));
end
rule "Yes Step Rule for P3761/2A-YES"
	when
		StepPerformed(stepId=="P3761/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3761/2A-YES"));
end
rule "No Step Rule for P3761/2A-YES"
	when
		StepPerformed(stepId=="P3761/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3761/2A-YES"));
end
rule "Yes Step Rule for P3761/2A-NO"
	when
		StepPerformed(stepId=="P3761/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3761/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3761/2A-NO"));
end
rule "No Step Rule for P3761/2A-NO"
	when
		StepPerformed(stepId=="P3761/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3761/2A-NO"));
end
rule "Yes Step Rule for P3770/1A"
	when
		StepPerformed(stepId=="P3770/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/1A"));
end
rule "No Step Rule for P3770/1A"
	when
		StepPerformed(stepId=="P3770/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/2A",$sum.doubleValue() + 100.0,"Answered No to step P3770/1A"));
end
rule "Yes Step Rule for P3770/1A-YES"
	when
		StepPerformed(stepId=="P3770/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/1A-YES"));
end
rule "No Step Rule for P3770/1A-YES"
	when
		StepPerformed(stepId=="P3770/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/1A-YES"));
end
rule "Yes Step Rule for P3770/1A-NO"
	when
		StepPerformed(stepId=="P3770/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/1A-NO"));
end
rule "No Step Rule for P3770/1A-NO"
	when
		StepPerformed(stepId=="P3770/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/1A-NO"));
end
rule "Yes Step Rule for P3770/2A"
	when
		StepPerformed(stepId=="P3770/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/2A"));
end
rule "No Step Rule for P3770/2A"
	when
		StepPerformed(stepId=="P3770/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/2B",$sum.doubleValue() + 100.0,"Answered No to step P3770/2A"));
end
rule "Yes Step Rule for P3770/2A-YES"
	when
		StepPerformed(stepId=="P3770/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/2A-YES"));
end
rule "No Step Rule for P3770/2A-YES"
	when
		StepPerformed(stepId=="P3770/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/2A-YES"));
end
rule "Yes Step Rule for P3770/2A-NO"
	when
		StepPerformed(stepId=="P3770/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/2A-NO"));
end
rule "No Step Rule for P3770/2A-NO"
	when
		StepPerformed(stepId=="P3770/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/2A-NO"));
end
rule "Yes Step Rule for P3770/2B"
	when
		StepPerformed(stepId=="P3770/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/2B"));
end
rule "No Step Rule for P3770/2B"
	when
		StepPerformed(stepId=="P3770/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3770/2B"));
end
rule "Yes Step Rule for P3770/2B-YES"
	when
		StepPerformed(stepId=="P3770/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/2B-YES"));
end
rule "No Step Rule for P3770/2B-YES"
	when
		StepPerformed(stepId=="P3770/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/2B-YES"));
end
rule "Yes Step Rule for P3770/2B-NO"
	when
		StepPerformed(stepId=="P3770/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/2B-NO"));
end
rule "No Step Rule for P3770/2B-NO"
	when
		StepPerformed(stepId=="P3770/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/2B-NO"));
end
rule "Yes Step Rule for P3770/2C"
	when
		StepPerformed(stepId=="P3770/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/2C"));
end
rule "No Step Rule for P3770/2C"
	when
		StepPerformed(stepId=="P3770/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/3A",$sum.doubleValue() + 100.0,"Answered No to step P3770/2C"));
end
rule "Yes Step Rule for P3770/2C-YES"
	when
		StepPerformed(stepId=="P3770/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/2C-YES"));
end
rule "No Step Rule for P3770/2C-YES"
	when
		StepPerformed(stepId=="P3770/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/2C-YES"));
end
rule "Yes Step Rule for P3770/2C-NO"
	when
		StepPerformed(stepId=="P3770/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/2C-NO"));
end
rule "No Step Rule for P3770/2C-NO"
	when
		StepPerformed(stepId=="P3770/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/2C-NO"));
end
rule "Yes Step Rule for P3770/3A"
	when
		StepPerformed(stepId=="P3770/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/3A"));
end
rule "No Step Rule for P3770/3A"
	when
		StepPerformed(stepId=="P3770/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/3B",$sum.doubleValue() + 100.0,"Answered No to step P3770/3A"));
end
rule "Yes Step Rule for P3770/3A-YES"
	when
		StepPerformed(stepId=="P3770/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/3A-YES"));
end
rule "No Step Rule for P3770/3A-YES"
	when
		StepPerformed(stepId=="P3770/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/3A-YES"));
end
rule "Yes Step Rule for P3770/3A-NO"
	when
		StepPerformed(stepId=="P3770/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/3A-NO"));
end
rule "No Step Rule for P3770/3A-NO"
	when
		StepPerformed(stepId=="P3770/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/3A-NO"));
end
rule "Yes Step Rule for P3770/3B"
	when
		StepPerformed(stepId=="P3770/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/3B"));
end
rule "No Step Rule for P3770/3B"
	when
		StepPerformed(stepId=="P3770/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4A",$sum.doubleValue() + 100.0,"Answered No to step P3770/3B"));
end
rule "Yes Step Rule for P3770/3B-YES"
	when
		StepPerformed(stepId=="P3770/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/3B-YES"));
end
rule "No Step Rule for P3770/3B-YES"
	when
		StepPerformed(stepId=="P3770/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/3B-YES"));
end
rule "Yes Step Rule for P3770/3B-NO"
	when
		StepPerformed(stepId=="P3770/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/3B-NO"));
end
rule "No Step Rule for P3770/3B-NO"
	when
		StepPerformed(stepId=="P3770/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/3B-NO"));
end
rule "Yes Step Rule for P3770/3C"
	when
		StepPerformed(stepId=="P3770/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/3C"));
end
rule "No Step Rule for P3770/3C"
	when
		StepPerformed(stepId=="P3770/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4A",$sum.doubleValue() + 100.0,"Answered No to step P3770/3C"));
end
rule "Yes Step Rule for P3770/3C-YES"
	when
		StepPerformed(stepId=="P3770/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/3C-YES"));
end
rule "No Step Rule for P3770/3C-YES"
	when
		StepPerformed(stepId=="P3770/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/3C-YES"));
end
rule "Yes Step Rule for P3770/3C-NO"
	when
		StepPerformed(stepId=="P3770/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/3C-NO"));
end
rule "No Step Rule for P3770/3C-NO"
	when
		StepPerformed(stepId=="P3770/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/3C-NO"));
end
rule "Yes Step Rule for P3770/4A"
	when
		StepPerformed(stepId=="P3770/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4A"));
end
rule "No Step Rule for P3770/4A"
	when
		StepPerformed(stepId=="P3770/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4B",$sum.doubleValue() + 100.0,"Answered No to step P3770/4A"));
end
rule "Yes Step Rule for P3770/4A-YES"
	when
		StepPerformed(stepId=="P3770/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4A-YES"));
end
rule "No Step Rule for P3770/4A-YES"
	when
		StepPerformed(stepId=="P3770/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4A-YES"));
end
rule "Yes Step Rule for P3770/4A-NO"
	when
		StepPerformed(stepId=="P3770/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4B",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4A-NO"));
end
rule "No Step Rule for P3770/4A-NO"
	when
		StepPerformed(stepId=="P3770/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4A-NO"));
end
rule "Yes Step Rule for P3770/4B"
	when
		StepPerformed(stepId=="P3770/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4C",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4B"));
end
rule "No Step Rule for P3770/4B"
	when
		StepPerformed(stepId=="P3770/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3770/4B"));
end
rule "Yes Step Rule for P3770/4B-YES"
	when
		StepPerformed(stepId=="P3770/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4C",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4B-YES"));
end
rule "No Step Rule for P3770/4B-YES"
	when
		StepPerformed(stepId=="P3770/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4B-YES"));
end
rule "Yes Step Rule for P3770/4B-NO"
	when
		StepPerformed(stepId=="P3770/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4B-NO"));
end
rule "No Step Rule for P3770/4B-NO"
	when
		StepPerformed(stepId=="P3770/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4B-NO"));
end
rule "Yes Step Rule for P3770/4C"
	when
		StepPerformed(stepId=="P3770/4C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4D",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4C"));
end
rule "No Step Rule for P3770/4C"
	when
		StepPerformed(stepId=="P3770/4C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3770/4C"));
end
rule "Yes Step Rule for P3770/4C-YES"
	when
		StepPerformed(stepId=="P3770/4C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4D",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4C-YES"));
end
rule "No Step Rule for P3770/4C-YES"
	when
		StepPerformed(stepId=="P3770/4C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4C-YES"));
end
rule "Yes Step Rule for P3770/4C-NO"
	when
		StepPerformed(stepId=="P3770/4C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4C-NO"));
end
rule "No Step Rule for P3770/4C-NO"
	when
		StepPerformed(stepId=="P3770/4C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4C-NO"));
end
rule "Yes Step Rule for P3770/4D"
	when
		StepPerformed(stepId=="P3770/4D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4E",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4D"));
end
rule "No Step Rule for P3770/4D"
	when
		StepPerformed(stepId=="P3770/4D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4D-NO",$sum.doubleValue() + 100.0,"Answered No to step P3770/4D"));
end
rule "Yes Step Rule for P3770/4D-YES"
	when
		StepPerformed(stepId=="P3770/4D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4E",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4D-YES"));
end
rule "No Step Rule for P3770/4D-YES"
	when
		StepPerformed(stepId=="P3770/4D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4D-YES"));
end
rule "Yes Step Rule for P3770/4D-NO"
	when
		StepPerformed(stepId=="P3770/4D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4D-NO"));
end
rule "No Step Rule for P3770/4D-NO"
	when
		StepPerformed(stepId=="P3770/4D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4D-NO"));
end
rule "Yes Step Rule for P3770/4E"
	when
		StepPerformed(stepId=="P3770/4E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4E"));
end
rule "No Step Rule for P3770/4E"
	when
		StepPerformed(stepId=="P3770/4E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/4E-NO",$sum.doubleValue() + 100.0,"Answered No to step P3770/4E"));
end
rule "Yes Step Rule for P3770/4E-YES"
	when
		StepPerformed(stepId=="P3770/4E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4E-YES"));
end
rule "No Step Rule for P3770/4E-YES"
	when
		StepPerformed(stepId=="P3770/4E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4E-YES"));
end
rule "Yes Step Rule for P3770/4E-NO"
	when
		StepPerformed(stepId=="P3770/4E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/4E-NO"));
end
rule "No Step Rule for P3770/4E-NO"
	when
		StepPerformed(stepId=="P3770/4E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/4E-NO"));
end
rule "Yes Step Rule for P3770/5A"
	when
		StepPerformed(stepId=="P3770/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/5A"));
end
rule "No Step Rule for P3770/5A"
	when
		StepPerformed(stepId=="P3770/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3770/5A"));
end
rule "Yes Step Rule for P3770/5A-YES"
	when
		StepPerformed(stepId=="P3770/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/5A-YES"));
end
rule "No Step Rule for P3770/5A-YES"
	when
		StepPerformed(stepId=="P3770/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/5A-YES"));
end
rule "Yes Step Rule for P3770/5A-NO"
	when
		StepPerformed(stepId=="P3770/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/5A-NO"));
end
rule "No Step Rule for P3770/5A-NO"
	when
		StepPerformed(stepId=="P3770/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/5A-NO"));
end
rule "Yes Step Rule for P3770/6A"
	when
		StepPerformed(stepId=="P3770/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/6A"));
end
rule "No Step Rule for P3770/6A"
	when
		StepPerformed(stepId=="P3770/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3770/6A"));
end
rule "Yes Step Rule for P3770/6A-YES"
	when
		StepPerformed(stepId=="P3770/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/6A-YES"));
end
rule "No Step Rule for P3770/6A-YES"
	when
		StepPerformed(stepId=="P3770/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/6A-YES"));
end
rule "Yes Step Rule for P3770/6A-NO"
	when
		StepPerformed(stepId=="P3770/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3770/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3770/6A-NO"));
end
rule "No Step Rule for P3770/6A-NO"
	when
		StepPerformed(stepId=="P3770/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3770/6A-NO"));
end
rule "Yes Step Rule for P3771/1A"
	when
		StepPerformed(stepId=="P3771/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3771/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3771/1A"));
end
rule "No Step Rule for P3771/1A"
	when
		StepPerformed(stepId=="P3771/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3771/1B",$sum.doubleValue() + 100.0,"Answered No to step P3771/1A"));
end
rule "Yes Step Rule for P3771/1A-YES"
	when
		StepPerformed(stepId=="P3771/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3771/1A-YES"));
end
rule "No Step Rule for P3771/1A-YES"
	when
		StepPerformed(stepId=="P3771/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3771/1A-YES"));
end
rule "Yes Step Rule for P3771/1A-NO"
	when
		StepPerformed(stepId=="P3771/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3771/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3771/1A-NO"));
end
rule "No Step Rule for P3771/1A-NO"
	when
		StepPerformed(stepId=="P3771/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3771/1A-NO"));
end
rule "Yes Step Rule for P3771/1B"
	when
		StepPerformed(stepId=="P3771/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3771/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3771/1B"));
end
rule "No Step Rule for P3771/1B"
	when
		StepPerformed(stepId=="P3771/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3771/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3771/1B"));
end
rule "Yes Step Rule for P3771/1B-YES"
	when
		StepPerformed(stepId=="P3771/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3771/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3771/1B-YES"));
end
rule "No Step Rule for P3771/1B-YES"
	when
		StepPerformed(stepId=="P3771/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3771/1B-YES"));
end
rule "Yes Step Rule for P3771/1B-NO"
	when
		StepPerformed(stepId=="P3771/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3771/1B-NO"));
end
rule "No Step Rule for P3771/1B-NO"
	when
		StepPerformed(stepId=="P3771/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3771/1B-NO"));
end
rule "Yes Step Rule for P3771/2A"
	when
		StepPerformed(stepId=="P3771/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3771/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3771/2A"));
end
rule "No Step Rule for P3771/2A"
	when
		StepPerformed(stepId=="P3771/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3771/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3771/2A"));
end
rule "Yes Step Rule for P3771/2A-YES"
	when
		StepPerformed(stepId=="P3771/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3771/2A-YES"));
end
rule "No Step Rule for P3771/2A-YES"
	when
		StepPerformed(stepId=="P3771/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3771/2A-YES"));
end
rule "Yes Step Rule for P3771/2A-NO"
	when
		StepPerformed(stepId=="P3771/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3771/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3771/2A-NO"));
end
rule "No Step Rule for P3771/2A-NO"
	when
		StepPerformed(stepId=="P3771/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3771/2A-NO"));
end
rule "Yes Step Rule for P3772/1A"
	when
		StepPerformed(stepId=="P3772/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3772/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3772/1A"));
end
rule "No Step Rule for P3772/1A"
	when
		StepPerformed(stepId=="P3772/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3772/1B",$sum.doubleValue() + 100.0,"Answered No to step P3772/1A"));
end
rule "Yes Step Rule for P3772/1A-YES"
	when
		StepPerformed(stepId=="P3772/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3772/1A-YES"));
end
rule "No Step Rule for P3772/1A-YES"
	when
		StepPerformed(stepId=="P3772/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3772/1A-YES"));
end
rule "Yes Step Rule for P3772/1A-NO"
	when
		StepPerformed(stepId=="P3772/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3772/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3772/1A-NO"));
end
rule "No Step Rule for P3772/1A-NO"
	when
		StepPerformed(stepId=="P3772/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3772/1A-NO"));
end
rule "Yes Step Rule for P3772/1B"
	when
		StepPerformed(stepId=="P3772/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3772/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3772/1B"));
end
rule "No Step Rule for P3772/1B"
	when
		StepPerformed(stepId=="P3772/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3772/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3772/1B"));
end
rule "Yes Step Rule for P3772/1B-YES"
	when
		StepPerformed(stepId=="P3772/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3772/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3772/1B-YES"));
end
rule "No Step Rule for P3772/1B-YES"
	when
		StepPerformed(stepId=="P3772/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3772/1B-YES"));
end
rule "Yes Step Rule for P3772/1B-NO"
	when
		StepPerformed(stepId=="P3772/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3772/1B-NO"));
end
rule "No Step Rule for P3772/1B-NO"
	when
		StepPerformed(stepId=="P3772/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3772/1B-NO"));
end
rule "Yes Step Rule for P3772/2A"
	when
		StepPerformed(stepId=="P3772/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3772/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3772/2A"));
end
rule "No Step Rule for P3772/2A"
	when
		StepPerformed(stepId=="P3772/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3772/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3772/2A"));
end
rule "Yes Step Rule for P3772/2A-YES"
	when
		StepPerformed(stepId=="P3772/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3772/2A-YES"));
end
rule "No Step Rule for P3772/2A-YES"
	when
		StepPerformed(stepId=="P3772/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3772/2A-YES"));
end
rule "Yes Step Rule for P3772/2A-NO"
	when
		StepPerformed(stepId=="P3772/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3772/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3772/2A-NO"));
end
rule "No Step Rule for P3772/2A-NO"
	when
		StepPerformed(stepId=="P3772/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3772/2A-NO"));
end
rule "Yes Step Rule for P3776/1A"
	when
		StepPerformed(stepId=="P3776/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/1A"));
end
rule "No Step Rule for P3776/1A"
	when
		StepPerformed(stepId=="P3776/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/5A",$sum.doubleValue() + 100.0,"Answered No to step P3776/1A"));
end
rule "Yes Step Rule for P3776/1A-YES"
	when
		StepPerformed(stepId=="P3776/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/1A-YES"));
end
rule "No Step Rule for P3776/1A-YES"
	when
		StepPerformed(stepId=="P3776/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/1A-YES"));
end
rule "Yes Step Rule for P3776/1A-NO"
	when
		StepPerformed(stepId=="P3776/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/1A-NO"));
end
rule "No Step Rule for P3776/1A-NO"
	when
		StepPerformed(stepId=="P3776/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/1A-NO"));
end
rule "Yes Step Rule for P3776/1B"
	when
		StepPerformed(stepId=="P3776/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/1B"));
end
rule "No Step Rule for P3776/1B"
	when
		StepPerformed(stepId=="P3776/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/2A",$sum.doubleValue() + 100.0,"Answered No to step P3776/1B"));
end
rule "Yes Step Rule for P3776/1B-YES"
	when
		StepPerformed(stepId=="P3776/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/1B-YES"));
end
rule "No Step Rule for P3776/1B-YES"
	when
		StepPerformed(stepId=="P3776/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/1B-YES"));
end
rule "Yes Step Rule for P3776/1B-NO"
	when
		StepPerformed(stepId=="P3776/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/1B-NO"));
end
rule "No Step Rule for P3776/1B-NO"
	when
		StepPerformed(stepId=="P3776/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/1B-NO"));
end
rule "Yes Step Rule for P3776/2A"
	when
		StepPerformed(stepId=="P3776/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/2A"));
end
rule "No Step Rule for P3776/2A"
	when
		StepPerformed(stepId=="P3776/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3A",$sum.doubleValue() + 100.0,"Answered No to step P3776/2A"));
end
rule "Yes Step Rule for P3776/2A-YES"
	when
		StepPerformed(stepId=="P3776/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/2A-YES"));
end
rule "No Step Rule for P3776/2A-YES"
	when
		StepPerformed(stepId=="P3776/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/2A-YES"));
end
rule "Yes Step Rule for P3776/2A-NO"
	when
		StepPerformed(stepId=="P3776/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/2A-NO"));
end
rule "No Step Rule for P3776/2A-NO"
	when
		StepPerformed(stepId=="P3776/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/2A-NO"));
end
rule "Yes Step Rule for P3776/3A"
	when
		StepPerformed(stepId=="P3776/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/3A"));
end
rule "No Step Rule for P3776/3A"
	when
		StepPerformed(stepId=="P3776/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3B",$sum.doubleValue() + 100.0,"Answered No to step P3776/3A"));
end
rule "Yes Step Rule for P3776/3A-YES"
	when
		StepPerformed(stepId=="P3776/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/3A-YES"));
end
rule "No Step Rule for P3776/3A-YES"
	when
		StepPerformed(stepId=="P3776/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/3A-YES"));
end
rule "Yes Step Rule for P3776/3A-NO"
	when
		StepPerformed(stepId=="P3776/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/3A-NO"));
end
rule "No Step Rule for P3776/3A-NO"
	when
		StepPerformed(stepId=="P3776/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/3A-NO"));
end
rule "Yes Step Rule for P3776/3B"
	when
		StepPerformed(stepId=="P3776/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/3B"));
end
rule "No Step Rule for P3776/3B"
	when
		StepPerformed(stepId=="P3776/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3C",$sum.doubleValue() + 100.0,"Answered No to step P3776/3B"));
end
rule "Yes Step Rule for P3776/3B-YES"
	when
		StepPerformed(stepId=="P3776/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/3B-YES"));
end
rule "No Step Rule for P3776/3B-YES"
	when
		StepPerformed(stepId=="P3776/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/3B-YES"));
end
rule "Yes Step Rule for P3776/3B-NO"
	when
		StepPerformed(stepId=="P3776/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/3B-NO"));
end
rule "No Step Rule for P3776/3B-NO"
	when
		StepPerformed(stepId=="P3776/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/3B-NO"));
end
rule "Yes Step Rule for P3776/3C"
	when
		StepPerformed(stepId=="P3776/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/3C"));
end
rule "No Step Rule for P3776/3C"
	when
		StepPerformed(stepId=="P3776/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/4A",$sum.doubleValue() + 100.0,"Answered No to step P3776/3C"));
end
rule "Yes Step Rule for P3776/3C-YES"
	when
		StepPerformed(stepId=="P3776/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/3C-YES"));
end
rule "No Step Rule for P3776/3C-YES"
	when
		StepPerformed(stepId=="P3776/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/3C-YES"));
end
rule "Yes Step Rule for P3776/3C-NO"
	when
		StepPerformed(stepId=="P3776/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/3C-NO"));
end
rule "No Step Rule for P3776/3C-NO"
	when
		StepPerformed(stepId=="P3776/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/3C-NO"));
end
rule "Yes Step Rule for P3776/4A"
	when
		StepPerformed(stepId=="P3776/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/4A"));
end
rule "No Step Rule for P3776/4A"
	when
		StepPerformed(stepId=="P3776/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/5A",$sum.doubleValue() + 100.0,"Answered No to step P3776/4A"));
end
rule "Yes Step Rule for P3776/4A-YES"
	when
		StepPerformed(stepId=="P3776/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/4A-YES"));
end
rule "No Step Rule for P3776/4A-YES"
	when
		StepPerformed(stepId=="P3776/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/4A-YES"));
end
rule "Yes Step Rule for P3776/4A-NO"
	when
		StepPerformed(stepId=="P3776/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/4A-NO"));
end
rule "No Step Rule for P3776/4A-NO"
	when
		StepPerformed(stepId=="P3776/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/4A-NO"));
end
rule "Yes Step Rule for P3776/5A"
	when
		StepPerformed(stepId=="P3776/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/5A"));
end
rule "No Step Rule for P3776/5A"
	when
		StepPerformed(stepId=="P3776/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3776/5A"));
end
rule "Yes Step Rule for P3776/5A-YES"
	when
		StepPerformed(stepId=="P3776/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/5A-YES"));
end
rule "No Step Rule for P3776/5A-YES"
	when
		StepPerformed(stepId=="P3776/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/5A-YES"));
end
rule "Yes Step Rule for P3776/5A-NO"
	when
		StepPerformed(stepId=="P3776/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3776/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3776/5A-NO"));
end
rule "No Step Rule for P3776/5A-NO"
	when
		StepPerformed(stepId=="P3776/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3776/5A-NO"));
end
rule "Yes Step Rule for P3779/1A"
	when
		StepPerformed(stepId=="P3779/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/1A"));
end
rule "No Step Rule for P3779/1A"
	when
		StepPerformed(stepId=="P3779/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/2A",$sum.doubleValue() + 100.0,"Answered No to step P3779/1A"));
end
rule "Yes Step Rule for P3779/1A-YES"
	when
		StepPerformed(stepId=="P3779/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/1A-YES"));
end
rule "No Step Rule for P3779/1A-YES"
	when
		StepPerformed(stepId=="P3779/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/1A-YES"));
end
rule "Yes Step Rule for P3779/1A-NO"
	when
		StepPerformed(stepId=="P3779/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/1A-NO"));
end
rule "No Step Rule for P3779/1A-NO"
	when
		StepPerformed(stepId=="P3779/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/1A-NO"));
end
rule "Yes Step Rule for P3779/2A"
	when
		StepPerformed(stepId=="P3779/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/2A"));
end
rule "No Step Rule for P3779/2A"
	when
		StepPerformed(stepId=="P3779/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/3A",$sum.doubleValue() + 100.0,"Answered No to step P3779/2A"));
end
rule "Yes Step Rule for P3779/2A-YES"
	when
		StepPerformed(stepId=="P3779/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/2A-YES"));
end
rule "No Step Rule for P3779/2A-YES"
	when
		StepPerformed(stepId=="P3779/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/2A-YES"));
end
rule "Yes Step Rule for P3779/2A-NO"
	when
		StepPerformed(stepId=="P3779/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/2A-NO"));
end
rule "No Step Rule for P3779/2A-NO"
	when
		StepPerformed(stepId=="P3779/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/2A-NO"));
end
rule "Yes Step Rule for P3779/3A"
	when
		StepPerformed(stepId=="P3779/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/3A"));
end
rule "No Step Rule for P3779/3A"
	when
		StepPerformed(stepId=="P3779/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/4A",$sum.doubleValue() + 100.0,"Answered No to step P3779/3A"));
end
rule "Yes Step Rule for P3779/3A-YES"
	when
		StepPerformed(stepId=="P3779/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/3A-YES"));
end
rule "No Step Rule for P3779/3A-YES"
	when
		StepPerformed(stepId=="P3779/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/3A-YES"));
end
rule "Yes Step Rule for P3779/3A-NO"
	when
		StepPerformed(stepId=="P3779/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/3A-NO"));
end
rule "No Step Rule for P3779/3A-NO"
	when
		StepPerformed(stepId=="P3779/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/3A-NO"));
end
rule "Yes Step Rule for P3779/4A"
	when
		StepPerformed(stepId=="P3779/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/4A"));
end
rule "No Step Rule for P3779/4A"
	when
		StepPerformed(stepId=="P3779/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/5A",$sum.doubleValue() + 100.0,"Answered No to step P3779/4A"));
end
rule "Yes Step Rule for P3779/4A-YES"
	when
		StepPerformed(stepId=="P3779/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/4A-YES"));
end
rule "No Step Rule for P3779/4A-YES"
	when
		StepPerformed(stepId=="P3779/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/4A-YES"));
end
rule "Yes Step Rule for P3779/4A-NO"
	when
		StepPerformed(stepId=="P3779/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/4A-NO"));
end
rule "No Step Rule for P3779/4A-NO"
	when
		StepPerformed(stepId=="P3779/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/4A-NO"));
end
rule "Yes Step Rule for P3779/5A"
	when
		StepPerformed(stepId=="P3779/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/5A"));
end
rule "No Step Rule for P3779/5A"
	when
		StepPerformed(stepId=="P3779/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/6A",$sum.doubleValue() + 100.0,"Answered No to step P3779/5A"));
end
rule "Yes Step Rule for P3779/5A-YES"
	when
		StepPerformed(stepId=="P3779/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/5A-YES"));
end
rule "No Step Rule for P3779/5A-YES"
	when
		StepPerformed(stepId=="P3779/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/5A-YES"));
end
rule "Yes Step Rule for P3779/5A-NO"
	when
		StepPerformed(stepId=="P3779/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/5A-NO"));
end
rule "No Step Rule for P3779/5A-NO"
	when
		StepPerformed(stepId=="P3779/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/5A-NO"));
end
rule "Yes Step Rule for P3779/6A"
	when
		StepPerformed(stepId=="P3779/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/6A"));
end
rule "No Step Rule for P3779/6A"
	when
		StepPerformed(stepId=="P3779/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3779/6A"));
end
rule "Yes Step Rule for P3779/6A-YES"
	when
		StepPerformed(stepId=="P3779/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/6A-YES"));
end
rule "No Step Rule for P3779/6A-YES"
	when
		StepPerformed(stepId=="P3779/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/6A-YES"));
end
rule "Yes Step Rule for P3779/6A-NO"
	when
		StepPerformed(stepId=="P3779/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3779/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3779/6A-NO"));
end
rule "No Step Rule for P3779/6A-NO"
	when
		StepPerformed(stepId=="P3779/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3779/6A-NO"));
end
rule "Yes Step Rule for P3784/1A"
	when
		StepPerformed(stepId=="P3784/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3784/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3784/1A"));
end
rule "No Step Rule for P3784/1A"
	when
		StepPerformed(stepId=="P3784/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3784/1B",$sum.doubleValue() + 100.0,"Answered No to step P3784/1A"));
end
rule "Yes Step Rule for P3784/1A-YES"
	when
		StepPerformed(stepId=="P3784/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3784/1A-YES"));
end
rule "No Step Rule for P3784/1A-YES"
	when
		StepPerformed(stepId=="P3784/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3784/1A-YES"));
end
rule "Yes Step Rule for P3784/1A-NO"
	when
		StepPerformed(stepId=="P3784/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3784/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3784/1A-NO"));
end
rule "No Step Rule for P3784/1A-NO"
	when
		StepPerformed(stepId=="P3784/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3784/1A-NO"));
end
rule "Yes Step Rule for P3784/1B"
	when
		StepPerformed(stepId=="P3784/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3784/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3784/1B"));
end
rule "No Step Rule for P3784/1B"
	when
		StepPerformed(stepId=="P3784/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3784/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3784/1B"));
end
rule "Yes Step Rule for P3784/1B-YES"
	when
		StepPerformed(stepId=="P3784/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3784/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3784/1B-YES"));
end
rule "No Step Rule for P3784/1B-YES"
	when
		StepPerformed(stepId=="P3784/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3784/1B-YES"));
end
rule "Yes Step Rule for P3784/1B-NO"
	when
		StepPerformed(stepId=="P3784/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3784/1B-NO"));
end
rule "No Step Rule for P3784/1B-NO"
	when
		StepPerformed(stepId=="P3784/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3784/1B-NO"));
end
rule "Yes Step Rule for P3784/2A"
	when
		StepPerformed(stepId=="P3784/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3784/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3784/2A"));
end
rule "No Step Rule for P3784/2A"
	when
		StepPerformed(stepId=="P3784/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3784/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3784/2A"));
end
rule "Yes Step Rule for P3784/2A-YES"
	when
		StepPerformed(stepId=="P3784/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3784/2A-YES"));
end
rule "No Step Rule for P3784/2A-YES"
	when
		StepPerformed(stepId=="P3784/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3784/2A-YES"));
end
rule "Yes Step Rule for P3784/2A-NO"
	when
		StepPerformed(stepId=="P3784/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3784/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3784/2A-NO"));
end
rule "No Step Rule for P3784/2A-NO"
	when
		StepPerformed(stepId=="P3784/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3784/2A-NO"));
end
rule "Yes Step Rule for P3785/1A"
	when
		StepPerformed(stepId=="P3785/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3785/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3785/1A"));
end
rule "No Step Rule for P3785/1A"
	when
		StepPerformed(stepId=="P3785/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3785/1B",$sum.doubleValue() + 100.0,"Answered No to step P3785/1A"));
end
rule "Yes Step Rule for P3785/1A-YES"
	when
		StepPerformed(stepId=="P3785/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3785/1A-YES"));
end
rule "No Step Rule for P3785/1A-YES"
	when
		StepPerformed(stepId=="P3785/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3785/1A-YES"));
end
rule "Yes Step Rule for P3785/1A-NO"
	when
		StepPerformed(stepId=="P3785/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3785/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3785/1A-NO"));
end
rule "No Step Rule for P3785/1A-NO"
	when
		StepPerformed(stepId=="P3785/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3785/1A-NO"));
end
rule "Yes Step Rule for P3785/1B"
	when
		StepPerformed(stepId=="P3785/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3785/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3785/1B"));
end
rule "No Step Rule for P3785/1B"
	when
		StepPerformed(stepId=="P3785/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3785/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3785/1B"));
end
rule "Yes Step Rule for P3785/1B-YES"
	when
		StepPerformed(stepId=="P3785/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3785/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3785/1B-YES"));
end
rule "No Step Rule for P3785/1B-YES"
	when
		StepPerformed(stepId=="P3785/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3785/1B-YES"));
end
rule "Yes Step Rule for P3785/1B-NO"
	when
		StepPerformed(stepId=="P3785/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3785/1B-NO"));
end
rule "No Step Rule for P3785/1B-NO"
	when
		StepPerformed(stepId=="P3785/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3785/1B-NO"));
end
rule "Yes Step Rule for P3785/2A"
	when
		StepPerformed(stepId=="P3785/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3785/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3785/2A"));
end
rule "No Step Rule for P3785/2A"
	when
		StepPerformed(stepId=="P3785/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3785/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3785/2A"));
end
rule "Yes Step Rule for P3785/2A-YES"
	when
		StepPerformed(stepId=="P3785/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3785/2A-YES"));
end
rule "No Step Rule for P3785/2A-YES"
	when
		StepPerformed(stepId=="P3785/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3785/2A-YES"));
end
rule "Yes Step Rule for P3785/2A-NO"
	when
		StepPerformed(stepId=="P3785/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3785/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3785/2A-NO"));
end
rule "No Step Rule for P3785/2A-NO"
	when
		StepPerformed(stepId=="P3785/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3785/2A-NO"));
end
rule "Yes Step Rule for P3787/1A"
	when
		StepPerformed(stepId=="P3787/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/1A"));
end
rule "No Step Rule for P3787/1A"
	when
		StepPerformed(stepId=="P3787/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/2A",$sum.doubleValue() + 100.0,"Answered No to step P3787/1A"));
end
rule "Yes Step Rule for P3787/1A-YES"
	when
		StepPerformed(stepId=="P3787/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/1A-YES"));
end
rule "No Step Rule for P3787/1A-YES"
	when
		StepPerformed(stepId=="P3787/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3787/1A-YES"));
end
rule "Yes Step Rule for P3787/1A-NO"
	when
		StepPerformed(stepId=="P3787/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/1A-NO"));
end
rule "No Step Rule for P3787/1A-NO"
	when
		StepPerformed(stepId=="P3787/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3787/1A-NO"));
end
rule "Yes Step Rule for P3787/2A"
	when
		StepPerformed(stepId=="P3787/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/2A"));
end
rule "No Step Rule for P3787/2A"
	when
		StepPerformed(stepId=="P3787/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3787/2A"));
end
rule "Yes Step Rule for P3787/2A-YES"
	when
		StepPerformed(stepId=="P3787/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/2A-YES"));
end
rule "No Step Rule for P3787/2A-YES"
	when
		StepPerformed(stepId=="P3787/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3787/2A-YES"));
end
rule "Yes Step Rule for P3787/2A-NO"
	when
		StepPerformed(stepId=="P3787/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/2A-NO"));
end
rule "No Step Rule for P3787/2A-NO"
	when
		StepPerformed(stepId=="P3787/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3787/2A-NO"));
end
rule "Yes Step Rule for P3787/2B"
	when
		StepPerformed(stepId=="P3787/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/2B"));
end
rule "No Step Rule for P3787/2B"
	when
		StepPerformed(stepId=="P3787/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3787/2B"));
end
rule "Yes Step Rule for P3787/2B-YES"
	when
		StepPerformed(stepId=="P3787/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/2B-YES"));
end
rule "No Step Rule for P3787/2B-YES"
	when
		StepPerformed(stepId=="P3787/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3787/2B-YES"));
end
rule "Yes Step Rule for P3787/2B-NO"
	when
		StepPerformed(stepId=="P3787/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/2B-NO"));
end
rule "No Step Rule for P3787/2B-NO"
	when
		StepPerformed(stepId=="P3787/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3787/2B-NO"));
end
rule "Yes Step Rule for P3787/3A"
	when
		StepPerformed(stepId=="P3787/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/3A"));
end
rule "No Step Rule for P3787/3A"
	when
		StepPerformed(stepId=="P3787/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3787/3A"));
end
rule "Yes Step Rule for P3787/3A-YES"
	when
		StepPerformed(stepId=="P3787/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/3A-YES"));
end
rule "No Step Rule for P3787/3A-YES"
	when
		StepPerformed(stepId=="P3787/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3787/3A-YES"));
end
rule "Yes Step Rule for P3787/3A-NO"
	when
		StepPerformed(stepId=="P3787/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3787/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3787/3A-NO"));
end
rule "No Step Rule for P3787/3A-NO"
	when
		StepPerformed(stepId=="P3787/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3787/3A-NO"));
end
rule "Yes Step Rule for P3791/1A"
	when
		StepPerformed(stepId=="P3791/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/1A"));
end
rule "No Step Rule for P3791/1A"
	when
		StepPerformed(stepId=="P3791/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/4A",$sum.doubleValue() + 100.0,"Answered No to step P3791/1A"));
end
rule "Yes Step Rule for P3791/1A-YES"
	when
		StepPerformed(stepId=="P3791/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/1A-YES"));
end
rule "No Step Rule for P3791/1A-YES"
	when
		StepPerformed(stepId=="P3791/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/1A-YES"));
end
rule "Yes Step Rule for P3791/1A-NO"
	when
		StepPerformed(stepId=="P3791/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/1A-NO"));
end
rule "No Step Rule for P3791/1A-NO"
	when
		StepPerformed(stepId=="P3791/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/1A-NO"));
end
rule "Yes Step Rule for P3791/1B"
	when
		StepPerformed(stepId=="P3791/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/1B"));
end
rule "No Step Rule for P3791/1B"
	when
		StepPerformed(stepId=="P3791/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/1C",$sum.doubleValue() + 100.0,"Answered No to step P3791/1B"));
end
rule "Yes Step Rule for P3791/1B-YES"
	when
		StepPerformed(stepId=="P3791/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/1B-YES"));
end
rule "No Step Rule for P3791/1B-YES"
	when
		StepPerformed(stepId=="P3791/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/1B-YES"));
end
rule "Yes Step Rule for P3791/1B-NO"
	when
		StepPerformed(stepId=="P3791/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/1B-NO"));
end
rule "No Step Rule for P3791/1B-NO"
	when
		StepPerformed(stepId=="P3791/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/1B-NO"));
end
rule "Yes Step Rule for P3791/1C"
	when
		StepPerformed(stepId=="P3791/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/1C"));
end
rule "No Step Rule for P3791/1C"
	when
		StepPerformed(stepId=="P3791/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/2A",$sum.doubleValue() + 100.0,"Answered No to step P3791/1C"));
end
rule "Yes Step Rule for P3791/1C-YES"
	when
		StepPerformed(stepId=="P3791/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/1C-YES"));
end
rule "No Step Rule for P3791/1C-YES"
	when
		StepPerformed(stepId=="P3791/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/1C-YES"));
end
rule "Yes Step Rule for P3791/1C-NO"
	when
		StepPerformed(stepId=="P3791/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/1C-NO"));
end
rule "No Step Rule for P3791/1C-NO"
	when
		StepPerformed(stepId=="P3791/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/1C-NO"));
end
rule "Yes Step Rule for P3791/2A"
	when
		StepPerformed(stepId=="P3791/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/2A"));
end
rule "No Step Rule for P3791/2A"
	when
		StepPerformed(stepId=="P3791/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/2B",$sum.doubleValue() + 100.0,"Answered No to step P3791/2A"));
end
rule "Yes Step Rule for P3791/2A-YES"
	when
		StepPerformed(stepId=="P3791/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/2A-YES"));
end
rule "No Step Rule for P3791/2A-YES"
	when
		StepPerformed(stepId=="P3791/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/2A-YES"));
end
rule "Yes Step Rule for P3791/2A-NO"
	when
		StepPerformed(stepId=="P3791/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/2A-NO"));
end
rule "No Step Rule for P3791/2A-NO"
	when
		StepPerformed(stepId=="P3791/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/2A-NO"));
end
rule "Yes Step Rule for P3791/2B"
	when
		StepPerformed(stepId=="P3791/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/2B"));
end
rule "No Step Rule for P3791/2B"
	when
		StepPerformed(stepId=="P3791/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3791/2B"));
end
rule "Yes Step Rule for P3791/2B-YES"
	when
		StepPerformed(stepId=="P3791/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/2B-YES"));
end
rule "No Step Rule for P3791/2B-YES"
	when
		StepPerformed(stepId=="P3791/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/2B-YES"));
end
rule "Yes Step Rule for P3791/2B-NO"
	when
		StepPerformed(stepId=="P3791/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/2B-NO"));
end
rule "No Step Rule for P3791/2B-NO"
	when
		StepPerformed(stepId=="P3791/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/2B-NO"));
end
rule "Yes Step Rule for P3791/3A"
	when
		StepPerformed(stepId=="P3791/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/3A"));
end
rule "No Step Rule for P3791/3A"
	when
		StepPerformed(stepId=="P3791/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/4A",$sum.doubleValue() + 100.0,"Answered No to step P3791/3A"));
end
rule "Yes Step Rule for P3791/3A-YES"
	when
		StepPerformed(stepId=="P3791/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/3A-YES"));
end
rule "No Step Rule for P3791/3A-YES"
	when
		StepPerformed(stepId=="P3791/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/3A-YES"));
end
rule "Yes Step Rule for P3791/3A-NO"
	when
		StepPerformed(stepId=="P3791/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/3A-NO"));
end
rule "No Step Rule for P3791/3A-NO"
	when
		StepPerformed(stepId=="P3791/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/3A-NO"));
end
rule "Yes Step Rule for P3791/4A"
	when
		StepPerformed(stepId=="P3791/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/4A"));
end
rule "No Step Rule for P3791/4A"
	when
		StepPerformed(stepId=="P3791/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3791/4A"));
end
rule "Yes Step Rule for P3791/4A-YES"
	when
		StepPerformed(stepId=="P3791/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/4A-YES"));
end
rule "No Step Rule for P3791/4A-YES"
	when
		StepPerformed(stepId=="P3791/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/4A-YES"));
end
rule "Yes Step Rule for P3791/4A-NO"
	when
		StepPerformed(stepId=="P3791/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3791/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3791/4A-NO"));
end
rule "No Step Rule for P3791/4A-NO"
	when
		StepPerformed(stepId=="P3791/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3791/4A-NO"));
end
rule "Yes Step Rule for P3792/1A"
	when
		StepPerformed(stepId=="P3792/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/1A"));
end
rule "No Step Rule for P3792/1A"
	when
		StepPerformed(stepId=="P3792/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/2A",$sum.doubleValue() + 100.0,"Answered No to step P3792/1A"));
end
rule "Yes Step Rule for P3792/1A-YES"
	when
		StepPerformed(stepId=="P3792/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/1A-YES"));
end
rule "No Step Rule for P3792/1A-YES"
	when
		StepPerformed(stepId=="P3792/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/1A-YES"));
end
rule "Yes Step Rule for P3792/1A-NO"
	when
		StepPerformed(stepId=="P3792/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/1A-NO"));
end
rule "No Step Rule for P3792/1A-NO"
	when
		StepPerformed(stepId=="P3792/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/1A-NO"));
end
rule "Yes Step Rule for P3792/2A"
	when
		StepPerformed(stepId=="P3792/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/2A"));
end
rule "No Step Rule for P3792/2A"
	when
		StepPerformed(stepId=="P3792/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/3A",$sum.doubleValue() + 100.0,"Answered No to step P3792/2A"));
end
rule "Yes Step Rule for P3792/2A-YES"
	when
		StepPerformed(stepId=="P3792/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/2A-YES"));
end
rule "No Step Rule for P3792/2A-YES"
	when
		StepPerformed(stepId=="P3792/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/2A-YES"));
end
rule "Yes Step Rule for P3792/2A-NO"
	when
		StepPerformed(stepId=="P3792/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/2A-NO"));
end
rule "No Step Rule for P3792/2A-NO"
	when
		StepPerformed(stepId=="P3792/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/2A-NO"));
end
rule "Yes Step Rule for P3792/3A"
	when
		StepPerformed(stepId=="P3792/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/3A"));
end
rule "No Step Rule for P3792/3A"
	when
		StepPerformed(stepId=="P3792/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/4A",$sum.doubleValue() + 100.0,"Answered No to step P3792/3A"));
end
rule "Yes Step Rule for P3792/3A-YES"
	when
		StepPerformed(stepId=="P3792/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/3A-YES"));
end
rule "No Step Rule for P3792/3A-YES"
	when
		StepPerformed(stepId=="P3792/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/3A-YES"));
end
rule "Yes Step Rule for P3792/3A-NO"
	when
		StepPerformed(stepId=="P3792/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/3A-NO"));
end
rule "No Step Rule for P3792/3A-NO"
	when
		StepPerformed(stepId=="P3792/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/3A-NO"));
end
rule "Yes Step Rule for P3792/4A"
	when
		StepPerformed(stepId=="P3792/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/4A"));
end
rule "No Step Rule for P3792/4A"
	when
		StepPerformed(stepId=="P3792/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/5A",$sum.doubleValue() + 100.0,"Answered No to step P3792/4A"));
end
rule "Yes Step Rule for P3792/4A-YES"
	when
		StepPerformed(stepId=="P3792/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/4A-YES"));
end
rule "No Step Rule for P3792/4A-YES"
	when
		StepPerformed(stepId=="P3792/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/4A-YES"));
end
rule "Yes Step Rule for P3792/4A-NO"
	when
		StepPerformed(stepId=="P3792/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/4A-NO"));
end
rule "No Step Rule for P3792/4A-NO"
	when
		StepPerformed(stepId=="P3792/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/4A-NO"));
end
rule "Yes Step Rule for P3792/5A"
	when
		StepPerformed(stepId=="P3792/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/5A"));
end
rule "No Step Rule for P3792/5A"
	when
		StepPerformed(stepId=="P3792/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/6A",$sum.doubleValue() + 100.0,"Answered No to step P3792/5A"));
end
rule "Yes Step Rule for P3792/5A-YES"
	when
		StepPerformed(stepId=="P3792/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/5A-YES"));
end
rule "No Step Rule for P3792/5A-YES"
	when
		StepPerformed(stepId=="P3792/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/5A-YES"));
end
rule "Yes Step Rule for P3792/5A-NO"
	when
		StepPerformed(stepId=="P3792/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/5A-NO"));
end
rule "No Step Rule for P3792/5A-NO"
	when
		StepPerformed(stepId=="P3792/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/5A-NO"));
end
rule "Yes Step Rule for P3792/6A"
	when
		StepPerformed(stepId=="P3792/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/6A"));
end
rule "No Step Rule for P3792/6A"
	when
		StepPerformed(stepId=="P3792/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3792/6A"));
end
rule "Yes Step Rule for P3792/6A-YES"
	when
		StepPerformed(stepId=="P3792/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/6A-YES"));
end
rule "No Step Rule for P3792/6A-YES"
	when
		StepPerformed(stepId=="P3792/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/6A-YES"));
end
rule "Yes Step Rule for P3792/6A-NO"
	when
		StepPerformed(stepId=="P3792/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3792/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3792/6A-NO"));
end
rule "No Step Rule for P3792/6A-NO"
	when
		StepPerformed(stepId=="P3792/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3792/6A-NO"));
end
rule "Yes Step Rule for P3797/1A"
	when
		StepPerformed(stepId=="P3797/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3797/1A"));
end
rule "No Step Rule for P3797/1A"
	when
		StepPerformed(stepId=="P3797/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/2A",$sum.doubleValue() + 100.0,"Answered No to step P3797/1A"));
end
rule "Yes Step Rule for P3797/1A-YES"
	when
		StepPerformed(stepId=="P3797/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3797/1A-YES"));
end
rule "No Step Rule for P3797/1A-YES"
	when
		StepPerformed(stepId=="P3797/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3797/1A-YES"));
end
rule "Yes Step Rule for P3797/1A-NO"
	when
		StepPerformed(stepId=="P3797/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3797/1A-NO"));
end
rule "No Step Rule for P3797/1A-NO"
	when
		StepPerformed(stepId=="P3797/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3797/1A-NO"));
end
rule "Yes Step Rule for P3797/2A"
	when
		StepPerformed(stepId=="P3797/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3797/2A"));
end
rule "No Step Rule for P3797/2A"
	when
		StepPerformed(stepId=="P3797/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/3A",$sum.doubleValue() + 100.0,"Answered No to step P3797/2A"));
end
rule "Yes Step Rule for P3797/2A-YES"
	when
		StepPerformed(stepId=="P3797/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3797/2A-YES"));
end
rule "No Step Rule for P3797/2A-YES"
	when
		StepPerformed(stepId=="P3797/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3797/2A-YES"));
end
rule "Yes Step Rule for P3797/2A-NO"
	when
		StepPerformed(stepId=="P3797/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3797/2A-NO"));
end
rule "No Step Rule for P3797/2A-NO"
	when
		StepPerformed(stepId=="P3797/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3797/2A-NO"));
end
rule "Yes Step Rule for P3797/3A"
	when
		StepPerformed(stepId=="P3797/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3797/3A"));
end
rule "No Step Rule for P3797/3A"
	when
		StepPerformed(stepId=="P3797/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3797/3A"));
end
rule "Yes Step Rule for P3797/3A-YES"
	when
		StepPerformed(stepId=="P3797/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3797/3A-YES"));
end
rule "No Step Rule for P3797/3A-YES"
	when
		StepPerformed(stepId=="P3797/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3797/3A-YES"));
end
rule "Yes Step Rule for P3797/3A-NO"
	when
		StepPerformed(stepId=="P3797/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3797/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3797/3A-NO"));
end
rule "No Step Rule for P3797/3A-NO"
	when
		StepPerformed(stepId=="P3797/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3797/3A-NO"));
end
rule "Yes Step Rule for P3800/1A"
	when
		StepPerformed(stepId=="P3800/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/1A"));
end
rule "No Step Rule for P3800/1A"
	when
		StepPerformed(stepId=="P3800/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/4A",$sum.doubleValue() + 100.0,"Answered No to step P3800/1A"));
end
rule "Yes Step Rule for P3800/1A-YES"
	when
		StepPerformed(stepId=="P3800/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/1A-YES"));
end
rule "No Step Rule for P3800/1A-YES"
	when
		StepPerformed(stepId=="P3800/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/1A-YES"));
end
rule "Yes Step Rule for P3800/1A-NO"
	when
		StepPerformed(stepId=="P3800/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/1A-NO"));
end
rule "No Step Rule for P3800/1A-NO"
	when
		StepPerformed(stepId=="P3800/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/1A-NO"));
end
rule "Yes Step Rule for P3800/1B"
	when
		StepPerformed(stepId=="P3800/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/1B"));
end
rule "No Step Rule for P3800/1B"
	when
		StepPerformed(stepId=="P3800/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/1C",$sum.doubleValue() + 100.0,"Answered No to step P3800/1B"));
end
rule "Yes Step Rule for P3800/1B-YES"
	when
		StepPerformed(stepId=="P3800/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/1B-YES"));
end
rule "No Step Rule for P3800/1B-YES"
	when
		StepPerformed(stepId=="P3800/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/1B-YES"));
end
rule "Yes Step Rule for P3800/1B-NO"
	when
		StepPerformed(stepId=="P3800/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/1B-NO"));
end
rule "No Step Rule for P3800/1B-NO"
	when
		StepPerformed(stepId=="P3800/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/1B-NO"));
end
rule "Yes Step Rule for P3800/1C"
	when
		StepPerformed(stepId=="P3800/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/1C"));
end
rule "No Step Rule for P3800/1C"
	when
		StepPerformed(stepId=="P3800/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/2A",$sum.doubleValue() + 100.0,"Answered No to step P3800/1C"));
end
rule "Yes Step Rule for P3800/1C-YES"
	when
		StepPerformed(stepId=="P3800/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/1C-YES"));
end
rule "No Step Rule for P3800/1C-YES"
	when
		StepPerformed(stepId=="P3800/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/1C-YES"));
end
rule "Yes Step Rule for P3800/1C-NO"
	when
		StepPerformed(stepId=="P3800/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/1C-NO"));
end
rule "No Step Rule for P3800/1C-NO"
	when
		StepPerformed(stepId=="P3800/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/1C-NO"));
end
rule "Yes Step Rule for P3800/2A"
	when
		StepPerformed(stepId=="P3800/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/2A"));
end
rule "No Step Rule for P3800/2A"
	when
		StepPerformed(stepId=="P3800/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/2B",$sum.doubleValue() + 100.0,"Answered No to step P3800/2A"));
end
rule "Yes Step Rule for P3800/2A-YES"
	when
		StepPerformed(stepId=="P3800/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/2A-YES"));
end
rule "No Step Rule for P3800/2A-YES"
	when
		StepPerformed(stepId=="P3800/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/2A-YES"));
end
rule "Yes Step Rule for P3800/2A-NO"
	when
		StepPerformed(stepId=="P3800/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/2A-NO"));
end
rule "No Step Rule for P3800/2A-NO"
	when
		StepPerformed(stepId=="P3800/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/2A-NO"));
end
rule "Yes Step Rule for P3800/2B"
	when
		StepPerformed(stepId=="P3800/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/2B"));
end
rule "No Step Rule for P3800/2B"
	when
		StepPerformed(stepId=="P3800/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3800/2B"));
end
rule "Yes Step Rule for P3800/2B-YES"
	when
		StepPerformed(stepId=="P3800/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/2B-YES"));
end
rule "No Step Rule for P3800/2B-YES"
	when
		StepPerformed(stepId=="P3800/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/2B-YES"));
end
rule "Yes Step Rule for P3800/2B-NO"
	when
		StepPerformed(stepId=="P3800/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/2B-NO"));
end
rule "No Step Rule for P3800/2B-NO"
	when
		StepPerformed(stepId=="P3800/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/2B-NO"));
end
rule "Yes Step Rule for P3800/3A"
	when
		StepPerformed(stepId=="P3800/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/3A"));
end
rule "No Step Rule for P3800/3A"
	when
		StepPerformed(stepId=="P3800/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/4A",$sum.doubleValue() + 100.0,"Answered No to step P3800/3A"));
end
rule "Yes Step Rule for P3800/3A-YES"
	when
		StepPerformed(stepId=="P3800/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/3A-YES"));
end
rule "No Step Rule for P3800/3A-YES"
	when
		StepPerformed(stepId=="P3800/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/3A-YES"));
end
rule "Yes Step Rule for P3800/3A-NO"
	when
		StepPerformed(stepId=="P3800/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/3A-NO"));
end
rule "No Step Rule for P3800/3A-NO"
	when
		StepPerformed(stepId=="P3800/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/3A-NO"));
end
rule "Yes Step Rule for P3800/4A"
	when
		StepPerformed(stepId=="P3800/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/4A"));
end
rule "No Step Rule for P3800/4A"
	when
		StepPerformed(stepId=="P3800/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3800/4A"));
end
rule "Yes Step Rule for P3800/4A-YES"
	when
		StepPerformed(stepId=="P3800/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/4A-YES"));
end
rule "No Step Rule for P3800/4A-YES"
	when
		StepPerformed(stepId=="P3800/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/4A-YES"));
end
rule "Yes Step Rule for P3800/4A-NO"
	when
		StepPerformed(stepId=="P3800/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3800/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3800/4A-NO"));
end
rule "No Step Rule for P3800/4A-NO"
	when
		StepPerformed(stepId=="P3800/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3800/4A-NO"));
end
rule "Yes Step Rule for P3802/1A"
	when
		StepPerformed(stepId=="P3802/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/1A"));
end
rule "No Step Rule for P3802/1A"
	when
		StepPerformed(stepId=="P3802/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/2A",$sum.doubleValue() + 100.0,"Answered No to step P3802/1A"));
end
rule "Yes Step Rule for P3802/1A-YES"
	when
		StepPerformed(stepId=="P3802/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/1A-YES"));
end
rule "No Step Rule for P3802/1A-YES"
	when
		StepPerformed(stepId=="P3802/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/1A-YES"));
end
rule "Yes Step Rule for P3802/1A-NO"
	when
		StepPerformed(stepId=="P3802/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/1A-NO"));
end
rule "No Step Rule for P3802/1A-NO"
	when
		StepPerformed(stepId=="P3802/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/1A-NO"));
end
rule "Yes Step Rule for P3802/2A"
	when
		StepPerformed(stepId=="P3802/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/2A"));
end
rule "No Step Rule for P3802/2A"
	when
		StepPerformed(stepId=="P3802/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/3A",$sum.doubleValue() + 100.0,"Answered No to step P3802/2A"));
end
rule "Yes Step Rule for P3802/2A-YES"
	when
		StepPerformed(stepId=="P3802/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/2A-YES"));
end
rule "No Step Rule for P3802/2A-YES"
	when
		StepPerformed(stepId=="P3802/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/2A-YES"));
end
rule "Yes Step Rule for P3802/2A-NO"
	when
		StepPerformed(stepId=="P3802/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/2A-NO"));
end
rule "No Step Rule for P3802/2A-NO"
	when
		StepPerformed(stepId=="P3802/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/2A-NO"));
end
rule "Yes Step Rule for P3802/3A"
	when
		StepPerformed(stepId=="P3802/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/3A"));
end
rule "No Step Rule for P3802/3A"
	when
		StepPerformed(stepId=="P3802/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/4A",$sum.doubleValue() + 100.0,"Answered No to step P3802/3A"));
end
rule "Yes Step Rule for P3802/3A-YES"
	when
		StepPerformed(stepId=="P3802/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/3A-YES"));
end
rule "No Step Rule for P3802/3A-YES"
	when
		StepPerformed(stepId=="P3802/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/3A-YES"));
end
rule "Yes Step Rule for P3802/3A-NO"
	when
		StepPerformed(stepId=="P3802/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/3A-NO"));
end
rule "No Step Rule for P3802/3A-NO"
	when
		StepPerformed(stepId=="P3802/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/3A-NO"));
end
rule "Yes Step Rule for P3802/4A"
	when
		StepPerformed(stepId=="P3802/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/4A"));
end
rule "No Step Rule for P3802/4A"
	when
		StepPerformed(stepId=="P3802/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/5A",$sum.doubleValue() + 100.0,"Answered No to step P3802/4A"));
end
rule "Yes Step Rule for P3802/4A-YES"
	when
		StepPerformed(stepId=="P3802/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/4A-YES"));
end
rule "No Step Rule for P3802/4A-YES"
	when
		StepPerformed(stepId=="P3802/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/4A-YES"));
end
rule "Yes Step Rule for P3802/4A-NO"
	when
		StepPerformed(stepId=="P3802/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/4A-NO"));
end
rule "No Step Rule for P3802/4A-NO"
	when
		StepPerformed(stepId=="P3802/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/4A-NO"));
end
rule "Yes Step Rule for P3802/5A"
	when
		StepPerformed(stepId=="P3802/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/5A"));
end
rule "No Step Rule for P3802/5A"
	when
		StepPerformed(stepId=="P3802/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/6A",$sum.doubleValue() + 100.0,"Answered No to step P3802/5A"));
end
rule "Yes Step Rule for P3802/5A-YES"
	when
		StepPerformed(stepId=="P3802/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/5A-YES"));
end
rule "No Step Rule for P3802/5A-YES"
	when
		StepPerformed(stepId=="P3802/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/5A-YES"));
end
rule "Yes Step Rule for P3802/5A-NO"
	when
		StepPerformed(stepId=="P3802/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/5A-NO"));
end
rule "No Step Rule for P3802/5A-NO"
	when
		StepPerformed(stepId=="P3802/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/5A-NO"));
end
rule "Yes Step Rule for P3802/6A"
	when
		StepPerformed(stepId=="P3802/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/6A"));
end
rule "No Step Rule for P3802/6A"
	when
		StepPerformed(stepId=="P3802/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3802/6A"));
end
rule "Yes Step Rule for P3802/6A-YES"
	when
		StepPerformed(stepId=="P3802/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/6A-YES"));
end
rule "No Step Rule for P3802/6A-YES"
	when
		StepPerformed(stepId=="P3802/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/6A-YES"));
end
rule "Yes Step Rule for P3802/6A-NO"
	when
		StepPerformed(stepId=="P3802/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3802/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3802/6A-NO"));
end
rule "No Step Rule for P3802/6A-NO"
	when
		StepPerformed(stepId=="P3802/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3802/6A-NO"));
end
rule "Yes Step Rule for P3803/1A"
	when
		StepPerformed(stepId=="P3803/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3803/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3803/1A"));
end
rule "No Step Rule for P3803/1A"
	when
		StepPerformed(stepId=="P3803/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3803/1B",$sum.doubleValue() + 100.0,"Answered No to step P3803/1A"));
end
rule "Yes Step Rule for P3803/1A-YES"
	when
		StepPerformed(stepId=="P3803/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3803/1A-YES"));
end
rule "No Step Rule for P3803/1A-YES"
	when
		StepPerformed(stepId=="P3803/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3803/1A-YES"));
end
rule "Yes Step Rule for P3803/1A-NO"
	when
		StepPerformed(stepId=="P3803/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3803/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3803/1A-NO"));
end
rule "No Step Rule for P3803/1A-NO"
	when
		StepPerformed(stepId=="P3803/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3803/1A-NO"));
end
rule "Yes Step Rule for P3803/1B"
	when
		StepPerformed(stepId=="P3803/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3803/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3803/1B"));
end
rule "No Step Rule for P3803/1B"
	when
		StepPerformed(stepId=="P3803/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3803/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3803/1B"));
end
rule "Yes Step Rule for P3803/1B-YES"
	when
		StepPerformed(stepId=="P3803/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3803/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3803/1B-YES"));
end
rule "No Step Rule for P3803/1B-YES"
	when
		StepPerformed(stepId=="P3803/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3803/1B-YES"));
end
rule "Yes Step Rule for P3803/1B-NO"
	when
		StepPerformed(stepId=="P3803/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3803/1B-NO"));
end
rule "No Step Rule for P3803/1B-NO"
	when
		StepPerformed(stepId=="P3803/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3803/1B-NO"));
end
rule "Yes Step Rule for P3803/2A"
	when
		StepPerformed(stepId=="P3803/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3803/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3803/2A"));
end
rule "No Step Rule for P3803/2A"
	when
		StepPerformed(stepId=="P3803/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3803/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3803/2A"));
end
rule "Yes Step Rule for P3803/2A-YES"
	when
		StepPerformed(stepId=="P3803/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3803/2A-YES"));
end
rule "No Step Rule for P3803/2A-YES"
	when
		StepPerformed(stepId=="P3803/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3803/2A-YES"));
end
rule "Yes Step Rule for P3803/2A-NO"
	when
		StepPerformed(stepId=="P3803/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3803/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3803/2A-NO"));
end
rule "No Step Rule for P3803/2A-NO"
	when
		StepPerformed(stepId=="P3803/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3803/2A-NO"));
end
rule "Yes Step Rule for P3805/1A"
	when
		StepPerformed(stepId=="P3805/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3805/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3805/1A"));
end
rule "No Step Rule for P3805/1A"
	when
		StepPerformed(stepId=="P3805/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3805/1B",$sum.doubleValue() + 100.0,"Answered No to step P3805/1A"));
end
rule "Yes Step Rule for P3805/1A-YES"
	when
		StepPerformed(stepId=="P3805/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3805/1A-YES"));
end
rule "No Step Rule for P3805/1A-YES"
	when
		StepPerformed(stepId=="P3805/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3805/1A-YES"));
end
rule "Yes Step Rule for P3805/1A-NO"
	when
		StepPerformed(stepId=="P3805/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3805/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3805/1A-NO"));
end
rule "No Step Rule for P3805/1A-NO"
	when
		StepPerformed(stepId=="P3805/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3805/1A-NO"));
end
rule "Yes Step Rule for P3805/1B"
	when
		StepPerformed(stepId=="P3805/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3805/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3805/1B"));
end
rule "No Step Rule for P3805/1B"
	when
		StepPerformed(stepId=="P3805/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3805/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3805/1B"));
end
rule "Yes Step Rule for P3805/1B-YES"
	when
		StepPerformed(stepId=="P3805/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3805/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3805/1B-YES"));
end
rule "No Step Rule for P3805/1B-YES"
	when
		StepPerformed(stepId=="P3805/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3805/1B-YES"));
end
rule "Yes Step Rule for P3805/1B-NO"
	when
		StepPerformed(stepId=="P3805/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3805/1B-NO"));
end
rule "No Step Rule for P3805/1B-NO"
	when
		StepPerformed(stepId=="P3805/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3805/1B-NO"));
end
rule "Yes Step Rule for P3805/2A"
	when
		StepPerformed(stepId=="P3805/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3805/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3805/2A"));
end
rule "No Step Rule for P3805/2A"
	when
		StepPerformed(stepId=="P3805/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3805/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3805/2A"));
end
rule "Yes Step Rule for P3805/2A-YES"
	when
		StepPerformed(stepId=="P3805/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3805/2A-YES"));
end
rule "No Step Rule for P3805/2A-YES"
	when
		StepPerformed(stepId=="P3805/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3805/2A-YES"));
end
rule "Yes Step Rule for P3805/2A-NO"
	when
		StepPerformed(stepId=="P3805/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3805/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3805/2A-NO"));
end
rule "No Step Rule for P3805/2A-NO"
	when
		StepPerformed(stepId=="P3805/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3805/2A-NO"));
end
rule "Yes Step Rule for P3811/1A"
	when
		StepPerformed(stepId=="P3811/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3811/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3811/1A"));
end
rule "No Step Rule for P3811/1A"
	when
		StepPerformed(stepId=="P3811/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3811/1B",$sum.doubleValue() + 100.0,"Answered No to step P3811/1A"));
end
rule "Yes Step Rule for P3811/1A-YES"
	when
		StepPerformed(stepId=="P3811/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3811/1A-YES"));
end
rule "No Step Rule for P3811/1A-YES"
	when
		StepPerformed(stepId=="P3811/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3811/1A-YES"));
end
rule "Yes Step Rule for P3811/1A-NO"
	when
		StepPerformed(stepId=="P3811/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3811/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3811/1A-NO"));
end
rule "No Step Rule for P3811/1A-NO"
	when
		StepPerformed(stepId=="P3811/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3811/1A-NO"));
end
rule "Yes Step Rule for P3811/1B"
	when
		StepPerformed(stepId=="P3811/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3811/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3811/1B"));
end
rule "No Step Rule for P3811/1B"
	when
		StepPerformed(stepId=="P3811/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3811/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3811/1B"));
end
rule "Yes Step Rule for P3811/1B-YES"
	when
		StepPerformed(stepId=="P3811/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3811/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3811/1B-YES"));
end
rule "No Step Rule for P3811/1B-YES"
	when
		StepPerformed(stepId=="P3811/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3811/1B-YES"));
end
rule "Yes Step Rule for P3811/1B-NO"
	when
		StepPerformed(stepId=="P3811/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3811/1B-NO"));
end
rule "No Step Rule for P3811/1B-NO"
	when
		StepPerformed(stepId=="P3811/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3811/1B-NO"));
end
rule "Yes Step Rule for P3811/2A"
	when
		StepPerformed(stepId=="P3811/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3811/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3811/2A"));
end
rule "No Step Rule for P3811/2A"
	when
		StepPerformed(stepId=="P3811/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3811/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3811/2A"));
end
rule "Yes Step Rule for P3811/2A-YES"
	when
		StepPerformed(stepId=="P3811/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3811/2A-YES"));
end
rule "No Step Rule for P3811/2A-YES"
	when
		StepPerformed(stepId=="P3811/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3811/2A-YES"));
end
rule "Yes Step Rule for P3811/2A-NO"
	when
		StepPerformed(stepId=="P3811/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3811/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3811/2A-NO"));
end
rule "No Step Rule for P3811/2A-NO"
	when
		StepPerformed(stepId=="P3811/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3811/2A-NO"));
end
rule "Yes Step Rule for P3815/1A"
	when
		StepPerformed(stepId=="P3815/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3815/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3815/1A"));
end
rule "No Step Rule for P3815/1A"
	when
		StepPerformed(stepId=="P3815/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3815/1B",$sum.doubleValue() + 100.0,"Answered No to step P3815/1A"));
end
rule "Yes Step Rule for P3815/1A-YES"
	when
		StepPerformed(stepId=="P3815/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3815/1A-YES"));
end
rule "No Step Rule for P3815/1A-YES"
	when
		StepPerformed(stepId=="P3815/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3815/1A-YES"));
end
rule "Yes Step Rule for P3815/1A-NO"
	when
		StepPerformed(stepId=="P3815/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3815/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3815/1A-NO"));
end
rule "No Step Rule for P3815/1A-NO"
	when
		StepPerformed(stepId=="P3815/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3815/1A-NO"));
end
rule "Yes Step Rule for P3815/1B"
	when
		StepPerformed(stepId=="P3815/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3815/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3815/1B"));
end
rule "No Step Rule for P3815/1B"
	when
		StepPerformed(stepId=="P3815/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3815/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3815/1B"));
end
rule "Yes Step Rule for P3815/1B-YES"
	when
		StepPerformed(stepId=="P3815/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3815/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3815/1B-YES"));
end
rule "No Step Rule for P3815/1B-YES"
	when
		StepPerformed(stepId=="P3815/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3815/1B-YES"));
end
rule "Yes Step Rule for P3815/1B-NO"
	when
		StepPerformed(stepId=="P3815/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3815/1B-NO"));
end
rule "No Step Rule for P3815/1B-NO"
	when
		StepPerformed(stepId=="P3815/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3815/1B-NO"));
end
rule "Yes Step Rule for P3815/2A"
	when
		StepPerformed(stepId=="P3815/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3815/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3815/2A"));
end
rule "No Step Rule for P3815/2A"
	when
		StepPerformed(stepId=="P3815/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3815/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3815/2A"));
end
rule "Yes Step Rule for P3815/2A-YES"
	when
		StepPerformed(stepId=="P3815/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3815/2A-YES"));
end
rule "No Step Rule for P3815/2A-YES"
	when
		StepPerformed(stepId=="P3815/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3815/2A-YES"));
end
rule "Yes Step Rule for P3815/2A-NO"
	when
		StepPerformed(stepId=="P3815/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3815/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3815/2A-NO"));
end
rule "No Step Rule for P3815/2A-NO"
	when
		StepPerformed(stepId=="P3815/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3815/2A-NO"));
end
rule "Yes Step Rule for P3818/1A"
	when
		StepPerformed(stepId=="P3818/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/1A"));
end
rule "No Step Rule for P3818/1A"
	when
		StepPerformed(stepId=="P3818/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2A",$sum.doubleValue() + 100.0,"Answered No to step P3818/1A"));
end
rule "Yes Step Rule for P3818/1A-YES"
	when
		StepPerformed(stepId=="P3818/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/1A-YES"));
end
rule "No Step Rule for P3818/1A-YES"
	when
		StepPerformed(stepId=="P3818/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/1A-YES"));
end
rule "Yes Step Rule for P3818/1A-NO"
	when
		StepPerformed(stepId=="P3818/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/1A-NO"));
end
rule "No Step Rule for P3818/1A-NO"
	when
		StepPerformed(stepId=="P3818/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/1A-NO"));
end
rule "Yes Step Rule for P3818/2A"
	when
		StepPerformed(stepId=="P3818/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2A"));
end
rule "No Step Rule for P3818/2A"
	when
		StepPerformed(stepId=="P3818/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2B",$sum.doubleValue() + 100.0,"Answered No to step P3818/2A"));
end
rule "Yes Step Rule for P3818/2A-YES"
	when
		StepPerformed(stepId=="P3818/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2A-YES"));
end
rule "No Step Rule for P3818/2A-YES"
	when
		StepPerformed(stepId=="P3818/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2A-YES"));
end
rule "Yes Step Rule for P3818/2A-NO"
	when
		StepPerformed(stepId=="P3818/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2A-NO"));
end
rule "No Step Rule for P3818/2A-NO"
	when
		StepPerformed(stepId=="P3818/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2A-NO"));
end
rule "Yes Step Rule for P3818/2B"
	when
		StepPerformed(stepId=="P3818/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2B"));
end
rule "No Step Rule for P3818/2B"
	when
		StepPerformed(stepId=="P3818/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2C",$sum.doubleValue() + 100.0,"Answered No to step P3818/2B"));
end
rule "Yes Step Rule for P3818/2B-YES"
	when
		StepPerformed(stepId=="P3818/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2B-YES"));
end
rule "No Step Rule for P3818/2B-YES"
	when
		StepPerformed(stepId=="P3818/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2B-YES"));
end
rule "Yes Step Rule for P3818/2B-NO"
	when
		StepPerformed(stepId=="P3818/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2B-NO"));
end
rule "No Step Rule for P3818/2B-NO"
	when
		StepPerformed(stepId=="P3818/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2B-NO"));
end
rule "Yes Step Rule for P3818/2C"
	when
		StepPerformed(stepId=="P3818/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2C"));
end
rule "No Step Rule for P3818/2C"
	when
		StepPerformed(stepId=="P3818/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3818/2C"));
end
rule "Yes Step Rule for P3818/2C-YES"
	when
		StepPerformed(stepId=="P3818/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2C-YES"));
end
rule "No Step Rule for P3818/2C-YES"
	when
		StepPerformed(stepId=="P3818/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2C-YES"));
end
rule "Yes Step Rule for P3818/2C-NO"
	when
		StepPerformed(stepId=="P3818/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2C-NO"));
end
rule "No Step Rule for P3818/2C-NO"
	when
		StepPerformed(stepId=="P3818/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2C-NO"));
end
rule "Yes Step Rule for P3818/2D"
	when
		StepPerformed(stepId=="P3818/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2E",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2D"));
end
rule "No Step Rule for P3818/2D"
	when
		StepPerformed(stepId=="P3818/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step P3818/2D"));
end
rule "Yes Step Rule for P3818/2D-YES"
	when
		StepPerformed(stepId=="P3818/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2E",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2D-YES"));
end
rule "No Step Rule for P3818/2D-YES"
	when
		StepPerformed(stepId=="P3818/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2D-YES"));
end
rule "Yes Step Rule for P3818/2D-NO"
	when
		StepPerformed(stepId=="P3818/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2D-NO"));
end
rule "No Step Rule for P3818/2D-NO"
	when
		StepPerformed(stepId=="P3818/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2D-NO"));
end
rule "Yes Step Rule for P3818/2E"
	when
		StepPerformed(stepId=="P3818/2E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2F",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2E"));
end
rule "No Step Rule for P3818/2E"
	when
		StepPerformed(stepId=="P3818/2E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2E-NO",$sum.doubleValue() + 100.0,"Answered No to step P3818/2E"));
end
rule "Yes Step Rule for P3818/2E-YES"
	when
		StepPerformed(stepId=="P3818/2E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2F",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2E-YES"));
end
rule "No Step Rule for P3818/2E-YES"
	when
		StepPerformed(stepId=="P3818/2E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2E-YES"));
end
rule "Yes Step Rule for P3818/2E-NO"
	when
		StepPerformed(stepId=="P3818/2E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2E-NO"));
end
rule "No Step Rule for P3818/2E-NO"
	when
		StepPerformed(stepId=="P3818/2E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2E-NO"));
end
rule "Yes Step Rule for P3818/2F"
	when
		StepPerformed(stepId=="P3818/2F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/2F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2F"));
end
rule "No Step Rule for P3818/2F"
	when
		StepPerformed(stepId=="P3818/2F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/3A",$sum.doubleValue() + 100.0,"Answered No to step P3818/2F"));
end
rule "Yes Step Rule for P3818/2F-YES"
	when
		StepPerformed(stepId=="P3818/2F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2F-YES"));
end
rule "No Step Rule for P3818/2F-YES"
	when
		StepPerformed(stepId=="P3818/2F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2F-YES"));
end
rule "Yes Step Rule for P3818/2F-NO"
	when
		StepPerformed(stepId=="P3818/2F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/2F-NO"));
end
rule "No Step Rule for P3818/2F-NO"
	when
		StepPerformed(stepId=="P3818/2F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/2F-NO"));
end
rule "Yes Step Rule for P3818/3A"
	when
		StepPerformed(stepId=="P3818/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/3A"));
end
rule "No Step Rule for P3818/3A"
	when
		StepPerformed(stepId=="P3818/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/3B",$sum.doubleValue() + 100.0,"Answered No to step P3818/3A"));
end
rule "Yes Step Rule for P3818/3A-YES"
	when
		StepPerformed(stepId=="P3818/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/3A-YES"));
end
rule "No Step Rule for P3818/3A-YES"
	when
		StepPerformed(stepId=="P3818/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/3A-YES"));
end
rule "Yes Step Rule for P3818/3A-NO"
	when
		StepPerformed(stepId=="P3818/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/3A-NO"));
end
rule "No Step Rule for P3818/3A-NO"
	when
		StepPerformed(stepId=="P3818/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/3A-NO"));
end
rule "Yes Step Rule for P3818/3B"
	when
		StepPerformed(stepId=="P3818/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/3B"));
end
rule "No Step Rule for P3818/3B"
	when
		StepPerformed(stepId=="P3818/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3818/3B"));
end
rule "Yes Step Rule for P3818/3B-YES"
	when
		StepPerformed(stepId=="P3818/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/3B-YES"));
end
rule "No Step Rule for P3818/3B-YES"
	when
		StepPerformed(stepId=="P3818/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/3B-YES"));
end
rule "Yes Step Rule for P3818/3B-NO"
	when
		StepPerformed(stepId=="P3818/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/3B-NO"));
end
rule "No Step Rule for P3818/3B-NO"
	when
		StepPerformed(stepId=="P3818/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/3B-NO"));
end
rule "Yes Step Rule for P3818/4A"
	when
		StepPerformed(stepId=="P3818/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/4A"));
end
rule "No Step Rule for P3818/4A"
	when
		StepPerformed(stepId=="P3818/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3818/4A"));
end
rule "Yes Step Rule for P3818/4A-YES"
	when
		StepPerformed(stepId=="P3818/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/4A-YES"));
end
rule "No Step Rule for P3818/4A-YES"
	when
		StepPerformed(stepId=="P3818/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/4A-YES"));
end
rule "Yes Step Rule for P3818/4A-NO"
	when
		StepPerformed(stepId=="P3818/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3818/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3818/4A-NO"));
end
rule "No Step Rule for P3818/4A-NO"
	when
		StepPerformed(stepId=="P3818/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3818/4A-NO"));
end
rule "Yes Step Rule for P3821/1A"
	when
		StepPerformed(stepId=="P3821/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3821/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3821/1A"));
end
rule "No Step Rule for P3821/1A"
	when
		StepPerformed(stepId=="P3821/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3821/1B",$sum.doubleValue() + 100.0,"Answered No to step P3821/1A"));
end
rule "Yes Step Rule for P3821/1A-YES"
	when
		StepPerformed(stepId=="P3821/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3821/1A-YES"));
end
rule "No Step Rule for P3821/1A-YES"
	when
		StepPerformed(stepId=="P3821/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3821/1A-YES"));
end
rule "Yes Step Rule for P3821/1A-NO"
	when
		StepPerformed(stepId=="P3821/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3821/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3821/1A-NO"));
end
rule "No Step Rule for P3821/1A-NO"
	when
		StepPerformed(stepId=="P3821/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3821/1A-NO"));
end
rule "Yes Step Rule for P3821/1B"
	when
		StepPerformed(stepId=="P3821/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3821/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3821/1B"));
end
rule "No Step Rule for P3821/1B"
	when
		StepPerformed(stepId=="P3821/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3821/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3821/1B"));
end
rule "Yes Step Rule for P3821/1B-YES"
	when
		StepPerformed(stepId=="P3821/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3821/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3821/1B-YES"));
end
rule "No Step Rule for P3821/1B-YES"
	when
		StepPerformed(stepId=="P3821/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3821/1B-YES"));
end
rule "Yes Step Rule for P3821/1B-NO"
	when
		StepPerformed(stepId=="P3821/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3821/1B-NO"));
end
rule "No Step Rule for P3821/1B-NO"
	when
		StepPerformed(stepId=="P3821/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3821/1B-NO"));
end
rule "Yes Step Rule for P3821/2A"
	when
		StepPerformed(stepId=="P3821/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3821/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3821/2A"));
end
rule "No Step Rule for P3821/2A"
	when
		StepPerformed(stepId=="P3821/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3821/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3821/2A"));
end
rule "Yes Step Rule for P3821/2A-YES"
	when
		StepPerformed(stepId=="P3821/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3821/2A-YES"));
end
rule "No Step Rule for P3821/2A-YES"
	when
		StepPerformed(stepId=="P3821/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3821/2A-YES"));
end
rule "Yes Step Rule for P3821/2A-NO"
	when
		StepPerformed(stepId=="P3821/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3821/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3821/2A-NO"));
end
rule "No Step Rule for P3821/2A-NO"
	when
		StepPerformed(stepId=="P3821/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3821/2A-NO"));
end
rule "Yes Step Rule for P3824/1A"
	when
		StepPerformed(stepId=="P3824/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/1A"));
end
rule "No Step Rule for P3824/1A"
	when
		StepPerformed(stepId=="P3824/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3824/1A"));
end
rule "Yes Step Rule for P3824/1A-YES"
	when
		StepPerformed(stepId=="P3824/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/1A-YES"));
end
rule "No Step Rule for P3824/1A-YES"
	when
		StepPerformed(stepId=="P3824/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3824/1A-YES"));
end
rule "Yes Step Rule for P3824/1A-NO"
	when
		StepPerformed(stepId=="P3824/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/1A-NO"));
end
rule "No Step Rule for P3824/1A-NO"
	when
		StepPerformed(stepId=="P3824/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3824/1A-NO"));
end
rule "Yes Step Rule for P3824/2A"
	when
		StepPerformed(stepId=="P3824/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/2A"));
end
rule "No Step Rule for P3824/2A"
	when
		StepPerformed(stepId=="P3824/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3824/2A"));
end
rule "Yes Step Rule for P3824/2A-YES"
	when
		StepPerformed(stepId=="P3824/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/2A-YES"));
end
rule "No Step Rule for P3824/2A-YES"
	when
		StepPerformed(stepId=="P3824/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3824/2A-YES"));
end
rule "Yes Step Rule for P3824/2A-NO"
	when
		StepPerformed(stepId=="P3824/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/2A-NO"));
end
rule "No Step Rule for P3824/2A-NO"
	when
		StepPerformed(stepId=="P3824/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3824/2A-NO"));
end
rule "Yes Step Rule for P3824/2B"
	when
		StepPerformed(stepId=="P3824/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/2B"));
end
rule "No Step Rule for P3824/2B"
	when
		StepPerformed(stepId=="P3824/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3824/2B"));
end
rule "Yes Step Rule for P3824/2B-YES"
	when
		StepPerformed(stepId=="P3824/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/2B-YES"));
end
rule "No Step Rule for P3824/2B-YES"
	when
		StepPerformed(stepId=="P3824/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3824/2B-YES"));
end
rule "Yes Step Rule for P3824/2B-NO"
	when
		StepPerformed(stepId=="P3824/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/2B-NO"));
end
rule "No Step Rule for P3824/2B-NO"
	when
		StepPerformed(stepId=="P3824/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3824/2B-NO"));
end
rule "Yes Step Rule for P3824/3A"
	when
		StepPerformed(stepId=="P3824/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/3A"));
end
rule "No Step Rule for P3824/3A"
	when
		StepPerformed(stepId=="P3824/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3824/3A"));
end
rule "Yes Step Rule for P3824/3A-YES"
	when
		StepPerformed(stepId=="P3824/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/3A-YES"));
end
rule "No Step Rule for P3824/3A-YES"
	when
		StepPerformed(stepId=="P3824/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3824/3A-YES"));
end
rule "Yes Step Rule for P3824/3A-NO"
	when
		StepPerformed(stepId=="P3824/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3824/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3824/3A-NO"));
end
rule "No Step Rule for P3824/3A-NO"
	when
		StepPerformed(stepId=="P3824/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3824/3A-NO"));
end
rule "Yes Step Rule for P3829/1A"
	when
		StepPerformed(stepId=="P3829/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/1A"));
end
rule "No Step Rule for P3829/1A"
	when
		StepPerformed(stepId=="P3829/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/1B",$sum.doubleValue() + 100.0,"Answered No to step P3829/1A"));
end
rule "Yes Step Rule for P3829/1A-YES"
	when
		StepPerformed(stepId=="P3829/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/1A-YES"));
end
rule "No Step Rule for P3829/1A-YES"
	when
		StepPerformed(stepId=="P3829/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/1A-YES"));
end
rule "Yes Step Rule for P3829/1A-NO"
	when
		StepPerformed(stepId=="P3829/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/1A-NO"));
end
rule "No Step Rule for P3829/1A-NO"
	when
		StepPerformed(stepId=="P3829/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/1A-NO"));
end
rule "Yes Step Rule for P3829/1B"
	when
		StepPerformed(stepId=="P3829/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/1B"));
end
rule "No Step Rule for P3829/1B"
	when
		StepPerformed(stepId=="P3829/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3829/1B"));
end
rule "Yes Step Rule for P3829/1B-YES"
	when
		StepPerformed(stepId=="P3829/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/1B-YES"));
end
rule "No Step Rule for P3829/1B-YES"
	when
		StepPerformed(stepId=="P3829/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/1B-YES"));
end
rule "Yes Step Rule for P3829/1B-NO"
	when
		StepPerformed(stepId=="P3829/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/1B-NO"));
end
rule "No Step Rule for P3829/1B-NO"
	when
		StepPerformed(stepId=="P3829/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/1B-NO"));
end
rule "Yes Step Rule for P3829/2A"
	when
		StepPerformed(stepId=="P3829/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/2A"));
end
rule "No Step Rule for P3829/2A"
	when
		StepPerformed(stepId=="P3829/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/2B",$sum.doubleValue() + 100.0,"Answered No to step P3829/2A"));
end
rule "Yes Step Rule for P3829/2A-YES"
	when
		StepPerformed(stepId=="P3829/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/2A-YES"));
end
rule "No Step Rule for P3829/2A-YES"
	when
		StepPerformed(stepId=="P3829/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/2A-YES"));
end
rule "Yes Step Rule for P3829/2A-NO"
	when
		StepPerformed(stepId=="P3829/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/2A-NO"));
end
rule "No Step Rule for P3829/2A-NO"
	when
		StepPerformed(stepId=="P3829/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/2A-NO"));
end
rule "Yes Step Rule for P3829/2B"
	when
		StepPerformed(stepId=="P3829/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/2B"));
end
rule "No Step Rule for P3829/2B"
	when
		StepPerformed(stepId=="P3829/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3829/2B"));
end
rule "Yes Step Rule for P3829/2B-YES"
	when
		StepPerformed(stepId=="P3829/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/2B-YES"));
end
rule "No Step Rule for P3829/2B-YES"
	when
		StepPerformed(stepId=="P3829/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/2B-YES"));
end
rule "Yes Step Rule for P3829/2B-NO"
	when
		StepPerformed(stepId=="P3829/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/2B-NO"));
end
rule "No Step Rule for P3829/2B-NO"
	when
		StepPerformed(stepId=="P3829/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/2B-NO"));
end
rule "Yes Step Rule for P3829/3A"
	when
		StepPerformed(stepId=="P3829/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/3A"));
end
rule "No Step Rule for P3829/3A"
	when
		StepPerformed(stepId=="P3829/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3829/3A"));
end
rule "Yes Step Rule for P3829/3A-YES"
	when
		StepPerformed(stepId=="P3829/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/3A-YES"));
end
rule "No Step Rule for P3829/3A-YES"
	when
		StepPerformed(stepId=="P3829/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/3A-YES"));
end
rule "Yes Step Rule for P3829/3A-NO"
	when
		StepPerformed(stepId=="P3829/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3829/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3829/3A-NO"));
end
rule "No Step Rule for P3829/3A-NO"
	when
		StepPerformed(stepId=="P3829/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3829/3A-NO"));
end
rule "Yes Step Rule for P3830/1A"
	when
		StepPerformed(stepId=="P3830/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/1A"));
end
rule "No Step Rule for P3830/1A"
	when
		StepPerformed(stepId=="P3830/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/1B",$sum.doubleValue() + 100.0,"Answered No to step P3830/1A"));
end
rule "Yes Step Rule for P3830/1A-YES"
	when
		StepPerformed(stepId=="P3830/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/1A-YES"));
end
rule "No Step Rule for P3830/1A-YES"
	when
		StepPerformed(stepId=="P3830/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/1A-YES"));
end
rule "Yes Step Rule for P3830/1A-NO"
	when
		StepPerformed(stepId=="P3830/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/1A-NO"));
end
rule "No Step Rule for P3830/1A-NO"
	when
		StepPerformed(stepId=="P3830/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/1A-NO"));
end
rule "Yes Step Rule for P3830/1B"
	when
		StepPerformed(stepId=="P3830/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/1B"));
end
rule "No Step Rule for P3830/1B"
	when
		StepPerformed(stepId=="P3830/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3830/1B"));
end
rule "Yes Step Rule for P3830/1B-YES"
	when
		StepPerformed(stepId=="P3830/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/1B-YES"));
end
rule "No Step Rule for P3830/1B-YES"
	when
		StepPerformed(stepId=="P3830/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/1B-YES"));
end
rule "Yes Step Rule for P3830/1B-NO"
	when
		StepPerformed(stepId=="P3830/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/1B-NO"));
end
rule "No Step Rule for P3830/1B-NO"
	when
		StepPerformed(stepId=="P3830/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/1B-NO"));
end
rule "Yes Step Rule for P3830/2A"
	when
		StepPerformed(stepId=="P3830/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/2A"));
end
rule "No Step Rule for P3830/2A"
	when
		StepPerformed(stepId=="P3830/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3830/2A"));
end
rule "Yes Step Rule for P3830/2A-YES"
	when
		StepPerformed(stepId=="P3830/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/2A-YES"));
end
rule "No Step Rule for P3830/2A-YES"
	when
		StepPerformed(stepId=="P3830/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/2A-YES"));
end
rule "Yes Step Rule for P3830/2A-NO"
	when
		StepPerformed(stepId=="P3830/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/2A-NO"));
end
rule "No Step Rule for P3830/2A-NO"
	when
		StepPerformed(stepId=="P3830/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/2A-NO"));
end
rule "Yes Step Rule for P3830/3A"
	when
		StepPerformed(stepId=="P3830/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/3A"));
end
rule "No Step Rule for P3830/3A"
	when
		StepPerformed(stepId=="P3830/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/4A",$sum.doubleValue() + 100.0,"Answered No to step P3830/3A"));
end
rule "Yes Step Rule for P3830/3A-YES"
	when
		StepPerformed(stepId=="P3830/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/3A-YES"));
end
rule "No Step Rule for P3830/3A-YES"
	when
		StepPerformed(stepId=="P3830/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/3A-YES"));
end
rule "Yes Step Rule for P3830/3A-NO"
	when
		StepPerformed(stepId=="P3830/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/3A-NO"));
end
rule "No Step Rule for P3830/3A-NO"
	when
		StepPerformed(stepId=="P3830/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/3A-NO"));
end
rule "Yes Step Rule for P3830/4A"
	when
		StepPerformed(stepId=="P3830/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/4A"));
end
rule "No Step Rule for P3830/4A"
	when
		StepPerformed(stepId=="P3830/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3830/4A"));
end
rule "Yes Step Rule for P3830/4A-YES"
	when
		StepPerformed(stepId=="P3830/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/4A-YES"));
end
rule "No Step Rule for P3830/4A-YES"
	when
		StepPerformed(stepId=="P3830/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/4A-YES"));
end
rule "Yes Step Rule for P3830/4A-NO"
	when
		StepPerformed(stepId=="P3830/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3830/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3830/4A-NO"));
end
rule "No Step Rule for P3830/4A-NO"
	when
		StepPerformed(stepId=="P3830/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3830/4A-NO"));
end
rule "Yes Step Rule for P3834/1A"
	when
		StepPerformed(stepId=="P3834/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/1A"));
end
rule "No Step Rule for P3834/1A"
	when
		StepPerformed(stepId=="P3834/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/2A",$sum.doubleValue() + 100.0,"Answered No to step P3834/1A"));
end
rule "Yes Step Rule for P3834/1A-YES"
	when
		StepPerformed(stepId=="P3834/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/1A-YES"));
end
rule "No Step Rule for P3834/1A-YES"
	when
		StepPerformed(stepId=="P3834/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/1A-YES"));
end
rule "Yes Step Rule for P3834/1A-NO"
	when
		StepPerformed(stepId=="P3834/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/1A-NO"));
end
rule "No Step Rule for P3834/1A-NO"
	when
		StepPerformed(stepId=="P3834/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/1A-NO"));
end
rule "Yes Step Rule for P3834/2A"
	when
		StepPerformed(stepId=="P3834/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/2A"));
end
rule "No Step Rule for P3834/2A"
	when
		StepPerformed(stepId=="P3834/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3834/2A"));
end
rule "Yes Step Rule for P3834/2A-YES"
	when
		StepPerformed(stepId=="P3834/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/2A-YES"));
end
rule "No Step Rule for P3834/2A-YES"
	when
		StepPerformed(stepId=="P3834/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/2A-YES"));
end
rule "Yes Step Rule for P3834/2A-NO"
	when
		StepPerformed(stepId=="P3834/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/2A-NO"));
end
rule "No Step Rule for P3834/2A-NO"
	when
		StepPerformed(stepId=="P3834/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/2A-NO"));
end
rule "Yes Step Rule for P3834/3A"
	when
		StepPerformed(stepId=="P3834/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/3A"));
end
rule "No Step Rule for P3834/3A"
	when
		StepPerformed(stepId=="P3834/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3834/3A"));
end
rule "Yes Step Rule for P3834/3A-YES"
	when
		StepPerformed(stepId=="P3834/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/3A-YES"));
end
rule "No Step Rule for P3834/3A-YES"
	when
		StepPerformed(stepId=="P3834/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/3A-YES"));
end
rule "Yes Step Rule for P3834/3A-NO"
	when
		StepPerformed(stepId=="P3834/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/3A-NO"));
end
rule "No Step Rule for P3834/3A-NO"
	when
		StepPerformed(stepId=="P3834/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/3A-NO"));
end
rule "Yes Step Rule for P3834/4A"
	when
		StepPerformed(stepId=="P3834/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/4A"));
end
rule "No Step Rule for P3834/4A"
	when
		StepPerformed(stepId=="P3834/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/5A",$sum.doubleValue() + 100.0,"Answered No to step P3834/4A"));
end
rule "Yes Step Rule for P3834/4A-YES"
	when
		StepPerformed(stepId=="P3834/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/4A-YES"));
end
rule "No Step Rule for P3834/4A-YES"
	when
		StepPerformed(stepId=="P3834/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/4A-YES"));
end
rule "Yes Step Rule for P3834/4A-NO"
	when
		StepPerformed(stepId=="P3834/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/4A-NO"));
end
rule "No Step Rule for P3834/4A-NO"
	when
		StepPerformed(stepId=="P3834/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/4A-NO"));
end
rule "Yes Step Rule for P3834/5A"
	when
		StepPerformed(stepId=="P3834/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/5A"));
end
rule "No Step Rule for P3834/5A"
	when
		StepPerformed(stepId=="P3834/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3834/5A"));
end
rule "Yes Step Rule for P3834/5A-YES"
	when
		StepPerformed(stepId=="P3834/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/5A-YES"));
end
rule "No Step Rule for P3834/5A-YES"
	when
		StepPerformed(stepId=="P3834/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/5A-YES"));
end
rule "Yes Step Rule for P3834/5A-NO"
	when
		StepPerformed(stepId=="P3834/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/5A-NO"));
end
rule "No Step Rule for P3834/5A-NO"
	when
		StepPerformed(stepId=="P3834/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/5A-NO"));
end
rule "Yes Step Rule for P3834/6A"
	when
		StepPerformed(stepId=="P3834/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/6A"));
end
rule "No Step Rule for P3834/6A"
	when
		StepPerformed(stepId=="P3834/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3834/6A"));
end
rule "Yes Step Rule for P3834/6A-YES"
	when
		StepPerformed(stepId=="P3834/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/6A-YES"));
end
rule "No Step Rule for P3834/6A-YES"
	when
		StepPerformed(stepId=="P3834/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/6A-YES"));
end
rule "Yes Step Rule for P3834/6A-NO"
	when
		StepPerformed(stepId=="P3834/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3834/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3834/6A-NO"));
end
rule "No Step Rule for P3834/6A-NO"
	when
		StepPerformed(stepId=="P3834/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3834/6A-NO"));
end
rule "Yes Step Rule for P3836/1A"
	when
		StepPerformed(stepId=="P3836/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/1A"));
end
rule "No Step Rule for P3836/1A"
	when
		StepPerformed(stepId=="P3836/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/2A",$sum.doubleValue() + 100.0,"Answered No to step P3836/1A"));
end
rule "Yes Step Rule for P3836/1A-YES"
	when
		StepPerformed(stepId=="P3836/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/1A-YES"));
end
rule "No Step Rule for P3836/1A-YES"
	when
		StepPerformed(stepId=="P3836/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3836/1A-YES"));
end
rule "Yes Step Rule for P3836/1A-NO"
	when
		StepPerformed(stepId=="P3836/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/1A-NO"));
end
rule "No Step Rule for P3836/1A-NO"
	when
		StepPerformed(stepId=="P3836/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3836/1A-NO"));
end
rule "Yes Step Rule for P3836/2A"
	when
		StepPerformed(stepId=="P3836/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/2A"));
end
rule "No Step Rule for P3836/2A"
	when
		StepPerformed(stepId=="P3836/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3836/2A"));
end
rule "Yes Step Rule for P3836/2A-YES"
	when
		StepPerformed(stepId=="P3836/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/2A-YES"));
end
rule "No Step Rule for P3836/2A-YES"
	when
		StepPerformed(stepId=="P3836/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3836/2A-YES"));
end
rule "Yes Step Rule for P3836/2A-NO"
	when
		StepPerformed(stepId=="P3836/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/2A-NO"));
end
rule "No Step Rule for P3836/2A-NO"
	when
		StepPerformed(stepId=="P3836/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3836/2A-NO"));
end
rule "Yes Step Rule for P3836/2B"
	when
		StepPerformed(stepId=="P3836/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/2B"));
end
rule "No Step Rule for P3836/2B"
	when
		StepPerformed(stepId=="P3836/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/3A",$sum.doubleValue() + 100.0,"Answered No to step P3836/2B"));
end
rule "Yes Step Rule for P3836/2B-YES"
	when
		StepPerformed(stepId=="P3836/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/2B-YES"));
end
rule "No Step Rule for P3836/2B-YES"
	when
		StepPerformed(stepId=="P3836/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3836/2B-YES"));
end
rule "Yes Step Rule for P3836/2B-NO"
	when
		StepPerformed(stepId=="P3836/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/2B-NO"));
end
rule "No Step Rule for P3836/2B-NO"
	when
		StepPerformed(stepId=="P3836/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3836/2B-NO"));
end
rule "Yes Step Rule for P3836/3A"
	when
		StepPerformed(stepId=="P3836/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/3A"));
end
rule "No Step Rule for P3836/3A"
	when
		StepPerformed(stepId=="P3836/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3836/3A"));
end
rule "Yes Step Rule for P3836/3A-YES"
	when
		StepPerformed(stepId=="P3836/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/3A-YES"));
end
rule "No Step Rule for P3836/3A-YES"
	when
		StepPerformed(stepId=="P3836/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3836/3A-YES"));
end
rule "Yes Step Rule for P3836/3A-NO"
	when
		StepPerformed(stepId=="P3836/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3836/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3836/3A-NO"));
end
rule "No Step Rule for P3836/3A-NO"
	when
		StepPerformed(stepId=="P3836/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3836/3A-NO"));
end
rule "Yes Step Rule for P3837/1A"
	when
		StepPerformed(stepId=="P3837/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/1A"));
end
rule "No Step Rule for P3837/1A"
	when
		StepPerformed(stepId=="P3837/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/1B",$sum.doubleValue() + 100.0,"Answered No to step P3837/1A"));
end
rule "Yes Step Rule for P3837/1A-YES"
	when
		StepPerformed(stepId=="P3837/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/1A-YES"));
end
rule "No Step Rule for P3837/1A-YES"
	when
		StepPerformed(stepId=="P3837/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/1A-YES"));
end
rule "Yes Step Rule for P3837/1A-NO"
	when
		StepPerformed(stepId=="P3837/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/1A-NO"));
end
rule "No Step Rule for P3837/1A-NO"
	when
		StepPerformed(stepId=="P3837/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/1A-NO"));
end
rule "Yes Step Rule for P3837/1B"
	when
		StepPerformed(stepId=="P3837/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/1B"));
end
rule "No Step Rule for P3837/1B"
	when
		StepPerformed(stepId=="P3837/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2A",$sum.doubleValue() + 100.0,"Answered No to step P3837/1B"));
end
rule "Yes Step Rule for P3837/1B-YES"
	when
		StepPerformed(stepId=="P3837/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/1B-YES"));
end
rule "No Step Rule for P3837/1B-YES"
	when
		StepPerformed(stepId=="P3837/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/1B-YES"));
end
rule "Yes Step Rule for P3837/1B-NO"
	when
		StepPerformed(stepId=="P3837/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/1B-NO"));
end
rule "No Step Rule for P3837/1B-NO"
	when
		StepPerformed(stepId=="P3837/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/1B-NO"));
end
rule "Yes Step Rule for P3837/2A"
	when
		StepPerformed(stepId=="P3837/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2A"));
end
rule "No Step Rule for P3837/2A"
	when
		StepPerformed(stepId=="P3837/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2B",$sum.doubleValue() + 100.0,"Answered No to step P3837/2A"));
end
rule "Yes Step Rule for P3837/2A-YES"
	when
		StepPerformed(stepId=="P3837/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2A-YES"));
end
rule "No Step Rule for P3837/2A-YES"
	when
		StepPerformed(stepId=="P3837/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/2A-YES"));
end
rule "Yes Step Rule for P3837/2A-NO"
	when
		StepPerformed(stepId=="P3837/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2A-NO"));
end
rule "No Step Rule for P3837/2A-NO"
	when
		StepPerformed(stepId=="P3837/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/2A-NO"));
end
rule "Yes Step Rule for P3837/2B"
	when
		StepPerformed(stepId=="P3837/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2B"));
end
rule "No Step Rule for P3837/2B"
	when
		StepPerformed(stepId=="P3837/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2C",$sum.doubleValue() + 100.0,"Answered No to step P3837/2B"));
end
rule "Yes Step Rule for P3837/2B-YES"
	when
		StepPerformed(stepId=="P3837/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2B-YES"));
end
rule "No Step Rule for P3837/2B-YES"
	when
		StepPerformed(stepId=="P3837/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/2B-YES"));
end
rule "Yes Step Rule for P3837/2B-NO"
	when
		StepPerformed(stepId=="P3837/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2B-NO"));
end
rule "No Step Rule for P3837/2B-NO"
	when
		StepPerformed(stepId=="P3837/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/2B-NO"));
end
rule "Yes Step Rule for P3837/2C"
	when
		StepPerformed(stepId=="P3837/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2C"));
end
rule "No Step Rule for P3837/2C"
	when
		StepPerformed(stepId=="P3837/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2D",$sum.doubleValue() + 100.0,"Answered No to step P3837/2C"));
end
rule "Yes Step Rule for P3837/2C-YES"
	when
		StepPerformed(stepId=="P3837/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2C-YES"));
end
rule "No Step Rule for P3837/2C-YES"
	when
		StepPerformed(stepId=="P3837/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/2C-YES"));
end
rule "Yes Step Rule for P3837/2C-NO"
	when
		StepPerformed(stepId=="P3837/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2C-NO"));
end
rule "No Step Rule for P3837/2C-NO"
	when
		StepPerformed(stepId=="P3837/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/2C-NO"));
end
rule "Yes Step Rule for P3837/2D"
	when
		StepPerformed(stepId=="P3837/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2D"));
end
rule "No Step Rule for P3837/2D"
	when
		StepPerformed(stepId=="P3837/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/3A",$sum.doubleValue() + 100.0,"Answered No to step P3837/2D"));
end
rule "Yes Step Rule for P3837/2D-YES"
	when
		StepPerformed(stepId=="P3837/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2D-YES"));
end
rule "No Step Rule for P3837/2D-YES"
	when
		StepPerformed(stepId=="P3837/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/2D-YES"));
end
rule "Yes Step Rule for P3837/2D-NO"
	when
		StepPerformed(stepId=="P3837/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/2D-NO"));
end
rule "No Step Rule for P3837/2D-NO"
	when
		StepPerformed(stepId=="P3837/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/2D-NO"));
end
rule "Yes Step Rule for P3837/3A"
	when
		StepPerformed(stepId=="P3837/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/3A"));
end
rule "No Step Rule for P3837/3A"
	when
		StepPerformed(stepId=="P3837/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3837/3A"));
end
rule "Yes Step Rule for P3837/3A-YES"
	when
		StepPerformed(stepId=="P3837/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/3A-YES"));
end
rule "No Step Rule for P3837/3A-YES"
	when
		StepPerformed(stepId=="P3837/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/3A-YES"));
end
rule "Yes Step Rule for P3837/3A-NO"
	when
		StepPerformed(stepId=="P3837/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3837/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3837/3A-NO"));
end
rule "No Step Rule for P3837/3A-NO"
	when
		StepPerformed(stepId=="P3837/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3837/3A-NO"));
end
rule "Yes Step Rule for P3838/1A"
	when
		StepPerformed(stepId=="P3838/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/1A"));
end
rule "No Step Rule for P3838/1A"
	when
		StepPerformed(stepId=="P3838/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/1B",$sum.doubleValue() + 100.0,"Answered No to step P3838/1A"));
end
rule "Yes Step Rule for P3838/1A-YES"
	when
		StepPerformed(stepId=="P3838/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/1A-YES"));
end
rule "No Step Rule for P3838/1A-YES"
	when
		StepPerformed(stepId=="P3838/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/1A-YES"));
end
rule "Yes Step Rule for P3838/1A-NO"
	when
		StepPerformed(stepId=="P3838/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/1A-NO"));
end
rule "No Step Rule for P3838/1A-NO"
	when
		StepPerformed(stepId=="P3838/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/1A-NO"));
end
rule "Yes Step Rule for P3838/1B"
	when
		StepPerformed(stepId=="P3838/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/1B"));
end
rule "No Step Rule for P3838/1B"
	when
		StepPerformed(stepId=="P3838/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/2A",$sum.doubleValue() + 100.0,"Answered No to step P3838/1B"));
end
rule "Yes Step Rule for P3838/1B-YES"
	when
		StepPerformed(stepId=="P3838/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/1B-YES"));
end
rule "No Step Rule for P3838/1B-YES"
	when
		StepPerformed(stepId=="P3838/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/1B-YES"));
end
rule "Yes Step Rule for P3838/1B-NO"
	when
		StepPerformed(stepId=="P3838/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/1B-NO"));
end
rule "No Step Rule for P3838/1B-NO"
	when
		StepPerformed(stepId=="P3838/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/1B-NO"));
end
rule "Yes Step Rule for P3838/2A"
	when
		StepPerformed(stepId=="P3838/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/2A"));
end
rule "No Step Rule for P3838/2A"
	when
		StepPerformed(stepId=="P3838/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/2B",$sum.doubleValue() + 100.0,"Answered No to step P3838/2A"));
end
rule "Yes Step Rule for P3838/2A-YES"
	when
		StepPerformed(stepId=="P3838/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/2A-YES"));
end
rule "No Step Rule for P3838/2A-YES"
	when
		StepPerformed(stepId=="P3838/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/2A-YES"));
end
rule "Yes Step Rule for P3838/2A-NO"
	when
		StepPerformed(stepId=="P3838/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/2A-NO"));
end
rule "No Step Rule for P3838/2A-NO"
	when
		StepPerformed(stepId=="P3838/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/2A-NO"));
end
rule "Yes Step Rule for P3838/2B"
	when
		StepPerformed(stepId=="P3838/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/2B"));
end
rule "No Step Rule for P3838/2B"
	when
		StepPerformed(stepId=="P3838/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3A",$sum.doubleValue() + 100.0,"Answered No to step P3838/2B"));
end
rule "Yes Step Rule for P3838/2B-YES"
	when
		StepPerformed(stepId=="P3838/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/2B-YES"));
end
rule "No Step Rule for P3838/2B-YES"
	when
		StepPerformed(stepId=="P3838/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/2B-YES"));
end
rule "Yes Step Rule for P3838/2B-NO"
	when
		StepPerformed(stepId=="P3838/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/2B-NO"));
end
rule "No Step Rule for P3838/2B-NO"
	when
		StepPerformed(stepId=="P3838/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/2B-NO"));
end
rule "Yes Step Rule for P3838/2C"
	when
		StepPerformed(stepId=="P3838/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/2C"));
end
rule "No Step Rule for P3838/2C"
	when
		StepPerformed(stepId=="P3838/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3A",$sum.doubleValue() + 100.0,"Answered No to step P3838/2C"));
end
rule "Yes Step Rule for P3838/2C-YES"
	when
		StepPerformed(stepId=="P3838/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/2C-YES"));
end
rule "No Step Rule for P3838/2C-YES"
	when
		StepPerformed(stepId=="P3838/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/2C-YES"));
end
rule "Yes Step Rule for P3838/2C-NO"
	when
		StepPerformed(stepId=="P3838/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/2C-NO"));
end
rule "No Step Rule for P3838/2C-NO"
	when
		StepPerformed(stepId=="P3838/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/2C-NO"));
end
rule "Yes Step Rule for P3838/3A"
	when
		StepPerformed(stepId=="P3838/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/3A"));
end
rule "No Step Rule for P3838/3A"
	when
		StepPerformed(stepId=="P3838/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3B",$sum.doubleValue() + 100.0,"Answered No to step P3838/3A"));
end
rule "Yes Step Rule for P3838/3A-YES"
	when
		StepPerformed(stepId=="P3838/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/3A-YES"));
end
rule "No Step Rule for P3838/3A-YES"
	when
		StepPerformed(stepId=="P3838/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/3A-YES"));
end
rule "Yes Step Rule for P3838/3A-NO"
	when
		StepPerformed(stepId=="P3838/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/3A-NO"));
end
rule "No Step Rule for P3838/3A-NO"
	when
		StepPerformed(stepId=="P3838/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/3A-NO"));
end
rule "Yes Step Rule for P3838/3B"
	when
		StepPerformed(stepId=="P3838/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/3B"));
end
rule "No Step Rule for P3838/3B"
	when
		StepPerformed(stepId=="P3838/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3C",$sum.doubleValue() + 100.0,"Answered No to step P3838/3B"));
end
rule "Yes Step Rule for P3838/3B-YES"
	when
		StepPerformed(stepId=="P3838/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/3B-YES"));
end
rule "No Step Rule for P3838/3B-YES"
	when
		StepPerformed(stepId=="P3838/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/3B-YES"));
end
rule "Yes Step Rule for P3838/3B-NO"
	when
		StepPerformed(stepId=="P3838/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/3B-NO"));
end
rule "No Step Rule for P3838/3B-NO"
	when
		StepPerformed(stepId=="P3838/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/3B-NO"));
end
rule "Yes Step Rule for P3838/3C"
	when
		StepPerformed(stepId=="P3838/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/3C"));
end
rule "No Step Rule for P3838/3C"
	when
		StepPerformed(stepId=="P3838/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/4A",$sum.doubleValue() + 100.0,"Answered No to step P3838/3C"));
end
rule "Yes Step Rule for P3838/3C-YES"
	when
		StepPerformed(stepId=="P3838/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/3C-YES"));
end
rule "No Step Rule for P3838/3C-YES"
	when
		StepPerformed(stepId=="P3838/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/3C-YES"));
end
rule "Yes Step Rule for P3838/3C-NO"
	when
		StepPerformed(stepId=="P3838/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/3C-NO"));
end
rule "No Step Rule for P3838/3C-NO"
	when
		StepPerformed(stepId=="P3838/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/3C-NO"));
end
rule "Yes Step Rule for P3838/4A"
	when
		StepPerformed(stepId=="P3838/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/4A"));
end
rule "No Step Rule for P3838/4A"
	when
		StepPerformed(stepId=="P3838/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3838/4A"));
end
rule "Yes Step Rule for P3838/4A-YES"
	when
		StepPerformed(stepId=="P3838/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/4A-YES"));
end
rule "No Step Rule for P3838/4A-YES"
	when
		StepPerformed(stepId=="P3838/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/4A-YES"));
end
rule "Yes Step Rule for P3838/4A-NO"
	when
		StepPerformed(stepId=="P3838/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3838/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3838/4A-NO"));
end
rule "No Step Rule for P3838/4A-NO"
	when
		StepPerformed(stepId=="P3838/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3838/4A-NO"));
end
rule "Yes Step Rule for P3850/1A"
	when
		StepPerformed(stepId=="P3850/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3850/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3850/1A"));
end
rule "No Step Rule for P3850/1A"
	when
		StepPerformed(stepId=="P3850/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3850/1B",$sum.doubleValue() + 100.0,"Answered No to step P3850/1A"));
end
rule "Yes Step Rule for P3850/1A-YES"
	when
		StepPerformed(stepId=="P3850/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3850/1A-YES"));
end
rule "No Step Rule for P3850/1A-YES"
	when
		StepPerformed(stepId=="P3850/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3850/1A-YES"));
end
rule "Yes Step Rule for P3850/1A-NO"
	when
		StepPerformed(stepId=="P3850/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3850/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3850/1A-NO"));
end
rule "No Step Rule for P3850/1A-NO"
	when
		StepPerformed(stepId=="P3850/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3850/1A-NO"));
end
rule "Yes Step Rule for P3850/1B"
	when
		StepPerformed(stepId=="P3850/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3850/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3850/1B"));
end
rule "No Step Rule for P3850/1B"
	when
		StepPerformed(stepId=="P3850/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3850/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3850/1B"));
end
rule "Yes Step Rule for P3850/1B-YES"
	when
		StepPerformed(stepId=="P3850/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3850/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3850/1B-YES"));
end
rule "No Step Rule for P3850/1B-YES"
	when
		StepPerformed(stepId=="P3850/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3850/1B-YES"));
end
rule "Yes Step Rule for P3850/1B-NO"
	when
		StepPerformed(stepId=="P3850/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3850/1B-NO"));
end
rule "No Step Rule for P3850/1B-NO"
	when
		StepPerformed(stepId=="P3850/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3850/1B-NO"));
end
rule "Yes Step Rule for P3850/2A"
	when
		StepPerformed(stepId=="P3850/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3850/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3850/2A"));
end
rule "No Step Rule for P3850/2A"
	when
		StepPerformed(stepId=="P3850/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3850/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3850/2A"));
end
rule "Yes Step Rule for P3850/2A-YES"
	when
		StepPerformed(stepId=="P3850/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3850/2A-YES"));
end
rule "No Step Rule for P3850/2A-YES"
	when
		StepPerformed(stepId=="P3850/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3850/2A-YES"));
end
rule "Yes Step Rule for P3850/2A-NO"
	when
		StepPerformed(stepId=="P3850/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3850/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3850/2A-NO"));
end
rule "No Step Rule for P3850/2A-NO"
	when
		StepPerformed(stepId=="P3850/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3850/2A-NO"));
end
rule "Yes Step Rule for P3857/1A"
	when
		StepPerformed(stepId=="P3857/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1A"));
end
rule "No Step Rule for P3857/1A"
	when
		StepPerformed(stepId=="P3857/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1B",$sum.doubleValue() + 100.0,"Answered No to step P3857/1A"));
end
rule "Yes Step Rule for P3857/1A-YES"
	when
		StepPerformed(stepId=="P3857/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1A-YES"));
end
rule "No Step Rule for P3857/1A-YES"
	when
		StepPerformed(stepId=="P3857/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1A-YES"));
end
rule "Yes Step Rule for P3857/1A-NO"
	when
		StepPerformed(stepId=="P3857/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1A-NO"));
end
rule "No Step Rule for P3857/1A-NO"
	when
		StepPerformed(stepId=="P3857/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1A-NO"));
end
rule "Yes Step Rule for P3857/1B"
	when
		StepPerformed(stepId=="P3857/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1B"));
end
rule "No Step Rule for P3857/1B"
	when
		StepPerformed(stepId=="P3857/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3857/1B"));
end
rule "Yes Step Rule for P3857/1B-YES"
	when
		StepPerformed(stepId=="P3857/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1B-YES"));
end
rule "No Step Rule for P3857/1B-YES"
	when
		StepPerformed(stepId=="P3857/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1B-YES"));
end
rule "Yes Step Rule for P3857/1B-NO"
	when
		StepPerformed(stepId=="P3857/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1B-NO"));
end
rule "No Step Rule for P3857/1B-NO"
	when
		StepPerformed(stepId=="P3857/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1B-NO"));
end
rule "Yes Step Rule for P3857/1C"
	when
		StepPerformed(stepId=="P3857/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1C"));
end
rule "No Step Rule for P3857/1C"
	when
		StepPerformed(stepId=="P3857/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1D",$sum.doubleValue() + 100.0,"Answered No to step P3857/1C"));
end
rule "Yes Step Rule for P3857/1C-YES"
	when
		StepPerformed(stepId=="P3857/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1E",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1C-YES"));
end
rule "No Step Rule for P3857/1C-YES"
	when
		StepPerformed(stepId=="P3857/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1C-YES"));
end
rule "Yes Step Rule for P3857/1C-NO"
	when
		StepPerformed(stepId=="P3857/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1D",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1C-NO"));
end
rule "No Step Rule for P3857/1C-NO"
	when
		StepPerformed(stepId=="P3857/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1C-NO"));
end
rule "Yes Step Rule for P3857/1D"
	when
		StepPerformed(stepId=="P3857/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1E",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1D"));
end
rule "No Step Rule for P3857/1D"
	when
		StepPerformed(stepId=="P3857/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2A",$sum.doubleValue() + 100.0,"Answered No to step P3857/1D"));
end
rule "Yes Step Rule for P3857/1D-YES"
	when
		StepPerformed(stepId=="P3857/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1E",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1D-YES"));
end
rule "No Step Rule for P3857/1D-YES"
	when
		StepPerformed(stepId=="P3857/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1D-YES"));
end
rule "Yes Step Rule for P3857/1D-NO"
	when
		StepPerformed(stepId=="P3857/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1D-NO"));
end
rule "No Step Rule for P3857/1D-NO"
	when
		StepPerformed(stepId=="P3857/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1D-NO"));
end
rule "Yes Step Rule for P3857/1E"
	when
		StepPerformed(stepId=="P3857/1E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1E"));
end
rule "No Step Rule for P3857/1E"
	when
		StepPerformed(stepId=="P3857/1E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2A",$sum.doubleValue() + 100.0,"Answered No to step P3857/1E"));
end
rule "Yes Step Rule for P3857/1E-YES"
	when
		StepPerformed(stepId=="P3857/1E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1E-YES"));
end
rule "No Step Rule for P3857/1E-YES"
	when
		StepPerformed(stepId=="P3857/1E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1E-YES"));
end
rule "Yes Step Rule for P3857/1E-NO"
	when
		StepPerformed(stepId=="P3857/1E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/1E-NO"));
end
rule "No Step Rule for P3857/1E-NO"
	when
		StepPerformed(stepId=="P3857/1E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/1E-NO"));
end
rule "Yes Step Rule for P3857/2A"
	when
		StepPerformed(stepId=="P3857/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2A"));
end
rule "No Step Rule for P3857/2A"
	when
		StepPerformed(stepId=="P3857/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/3A",$sum.doubleValue() + 100.0,"Answered No to step P3857/2A"));
end
rule "Yes Step Rule for P3857/2A-YES"
	when
		StepPerformed(stepId=="P3857/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2A-YES"));
end
rule "No Step Rule for P3857/2A-YES"
	when
		StepPerformed(stepId=="P3857/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/2A-YES"));
end
rule "Yes Step Rule for P3857/2A-NO"
	when
		StepPerformed(stepId=="P3857/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2A-NO"));
end
rule "No Step Rule for P3857/2A-NO"
	when
		StepPerformed(stepId=="P3857/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/2A-NO"));
end
rule "Yes Step Rule for P3857/2B"
	when
		StepPerformed(stepId=="P3857/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2B"));
end
rule "No Step Rule for P3857/2B"
	when
		StepPerformed(stepId=="P3857/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3857/2B"));
end
rule "Yes Step Rule for P3857/2B-YES"
	when
		StepPerformed(stepId=="P3857/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2B-YES"));
end
rule "No Step Rule for P3857/2B-YES"
	when
		StepPerformed(stepId=="P3857/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/2B-YES"));
end
rule "Yes Step Rule for P3857/2B-NO"
	when
		StepPerformed(stepId=="P3857/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2B-NO"));
end
rule "No Step Rule for P3857/2B-NO"
	when
		StepPerformed(stepId=="P3857/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/2B-NO"));
end
rule "Yes Step Rule for P3857/2C"
	when
		StepPerformed(stepId=="P3857/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2C"));
end
rule "No Step Rule for P3857/2C"
	when
		StepPerformed(stepId=="P3857/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3857/2C"));
end
rule "Yes Step Rule for P3857/2C-YES"
	when
		StepPerformed(stepId=="P3857/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2C-YES"));
end
rule "No Step Rule for P3857/2C-YES"
	when
		StepPerformed(stepId=="P3857/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/2C-YES"));
end
rule "Yes Step Rule for P3857/2C-NO"
	when
		StepPerformed(stepId=="P3857/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2C-NO"));
end
rule "No Step Rule for P3857/2C-NO"
	when
		StepPerformed(stepId=="P3857/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/2C-NO"));
end
rule "Yes Step Rule for P3857/2D"
	when
		StepPerformed(stepId=="P3857/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2D"));
end
rule "No Step Rule for P3857/2D"
	when
		StepPerformed(stepId=="P3857/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step P3857/2D"));
end
rule "Yes Step Rule for P3857/2D-YES"
	when
		StepPerformed(stepId=="P3857/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2D-YES"));
end
rule "No Step Rule for P3857/2D-YES"
	when
		StepPerformed(stepId=="P3857/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/2D-YES"));
end
rule "Yes Step Rule for P3857/2D-NO"
	when
		StepPerformed(stepId=="P3857/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/2D-NO"));
end
rule "No Step Rule for P3857/2D-NO"
	when
		StepPerformed(stepId=="P3857/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/2D-NO"));
end
rule "Yes Step Rule for P3857/3A"
	when
		StepPerformed(stepId=="P3857/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/3A"));
end
rule "No Step Rule for P3857/3A"
	when
		StepPerformed(stepId=="P3857/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3857/3A"));
end
rule "Yes Step Rule for P3857/3A-YES"
	when
		StepPerformed(stepId=="P3857/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/3A-YES"));
end
rule "No Step Rule for P3857/3A-YES"
	when
		StepPerformed(stepId=="P3857/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/3A-YES"));
end
rule "Yes Step Rule for P3857/3A-NO"
	when
		StepPerformed(stepId=="P3857/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/3A-NO"));
end
rule "No Step Rule for P3857/3A-NO"
	when
		StepPerformed(stepId=="P3857/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/3A-NO"));
end
rule "Yes Step Rule for P3857/3B"
	when
		StepPerformed(stepId=="P3857/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/3B"));
end
rule "No Step Rule for P3857/3B"
	when
		StepPerformed(stepId=="P3857/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/4A",$sum.doubleValue() + 100.0,"Answered No to step P3857/3B"));
end
rule "Yes Step Rule for P3857/3B-YES"
	when
		StepPerformed(stepId=="P3857/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/3B-YES"));
end
rule "No Step Rule for P3857/3B-YES"
	when
		StepPerformed(stepId=="P3857/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/3B-YES"));
end
rule "Yes Step Rule for P3857/3B-NO"
	when
		StepPerformed(stepId=="P3857/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/3B-NO"));
end
rule "No Step Rule for P3857/3B-NO"
	when
		StepPerformed(stepId=="P3857/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/3B-NO"));
end
rule "Yes Step Rule for P3857/3C"
	when
		StepPerformed(stepId=="P3857/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/3C"));
end
rule "No Step Rule for P3857/3C"
	when
		StepPerformed(stepId=="P3857/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/4A",$sum.doubleValue() + 100.0,"Answered No to step P3857/3C"));
end
rule "Yes Step Rule for P3857/3C-YES"
	when
		StepPerformed(stepId=="P3857/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/3C-YES"));
end
rule "No Step Rule for P3857/3C-YES"
	when
		StepPerformed(stepId=="P3857/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/3C-YES"));
end
rule "Yes Step Rule for P3857/3C-NO"
	when
		StepPerformed(stepId=="P3857/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/3C-NO"));
end
rule "No Step Rule for P3857/3C-NO"
	when
		StepPerformed(stepId=="P3857/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/3C-NO"));
end
rule "Yes Step Rule for P3857/4A"
	when
		StepPerformed(stepId=="P3857/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/4A"));
end
rule "No Step Rule for P3857/4A"
	when
		StepPerformed(stepId=="P3857/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A",$sum.doubleValue() + 100.0,"Answered No to step P3857/4A"));
end
rule "Yes Step Rule for P3857/4A-YES"
	when
		StepPerformed(stepId=="P3857/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/4A-YES"));
end
rule "No Step Rule for P3857/4A-YES"
	when
		StepPerformed(stepId=="P3857/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/4A-YES"));
end
rule "Yes Step Rule for P3857/4A-NO"
	when
		StepPerformed(stepId=="P3857/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/4A-NO"));
end
rule "No Step Rule for P3857/4A-NO"
	when
		StepPerformed(stepId=="P3857/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/4A-NO"));
end
rule "Yes Step Rule for P3857/5A"
	when
		StepPerformed(stepId=="P3857/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/5A"));
end
rule "No Step Rule for P3857/5A"
	when
		StepPerformed(stepId=="P3857/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3857/5A"));
end
rule "Yes Step Rule for P3857/5A-YES"
	when
		StepPerformed(stepId=="P3857/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/5A-YES"));
end
rule "No Step Rule for P3857/5A-YES"
	when
		StepPerformed(stepId=="P3857/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/5A-YES"));
end
rule "Yes Step Rule for P3857/5A-NO"
	when
		StepPerformed(stepId=="P3857/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/5A-NO"));
end
rule "No Step Rule for P3857/5A-NO"
	when
		StepPerformed(stepId=="P3857/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/5A-NO"));
end
rule "Yes Step Rule for P3857/6A"
	when
		StepPerformed(stepId=="P3857/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/6A"));
end
rule "No Step Rule for P3857/6A"
	when
		StepPerformed(stepId=="P3857/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3857/6A"));
end
rule "Yes Step Rule for P3857/6A-YES"
	when
		StepPerformed(stepId=="P3857/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/6A-YES"));
end
rule "No Step Rule for P3857/6A-YES"
	when
		StepPerformed(stepId=="P3857/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/6A-YES"));
end
rule "Yes Step Rule for P3857/6A-NO"
	when
		StepPerformed(stepId=="P3857/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3857/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3857/6A-NO"));
end
rule "No Step Rule for P3857/6A-NO"
	when
		StepPerformed(stepId=="P3857/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3857/6A-NO"));
end
rule "Yes Step Rule for P3858/1A"
	when
		StepPerformed(stepId=="P3858/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1A"));
end
rule "No Step Rule for P3858/1A"
	when
		StepPerformed(stepId=="P3858/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1B",$sum.doubleValue() + 100.0,"Answered No to step P3858/1A"));
end
rule "Yes Step Rule for P3858/1A-YES"
	when
		StepPerformed(stepId=="P3858/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1A-YES"));
end
rule "No Step Rule for P3858/1A-YES"
	when
		StepPerformed(stepId=="P3858/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1A-YES"));
end
rule "Yes Step Rule for P3858/1A-NO"
	when
		StepPerformed(stepId=="P3858/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1A-NO"));
end
rule "No Step Rule for P3858/1A-NO"
	when
		StepPerformed(stepId=="P3858/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1A-NO"));
end
rule "Yes Step Rule for P3858/1B"
	when
		StepPerformed(stepId=="P3858/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1B"));
end
rule "No Step Rule for P3858/1B"
	when
		StepPerformed(stepId=="P3858/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3858/1B"));
end
rule "Yes Step Rule for P3858/1B-YES"
	when
		StepPerformed(stepId=="P3858/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1B-YES"));
end
rule "No Step Rule for P3858/1B-YES"
	when
		StepPerformed(stepId=="P3858/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1B-YES"));
end
rule "Yes Step Rule for P3858/1B-NO"
	when
		StepPerformed(stepId=="P3858/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1B-NO"));
end
rule "No Step Rule for P3858/1B-NO"
	when
		StepPerformed(stepId=="P3858/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1B-NO"));
end
rule "Yes Step Rule for P3858/1C"
	when
		StepPerformed(stepId=="P3858/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1C"));
end
rule "No Step Rule for P3858/1C"
	when
		StepPerformed(stepId=="P3858/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1D",$sum.doubleValue() + 100.0,"Answered No to step P3858/1C"));
end
rule "Yes Step Rule for P3858/1C-YES"
	when
		StepPerformed(stepId=="P3858/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1E",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1C-YES"));
end
rule "No Step Rule for P3858/1C-YES"
	when
		StepPerformed(stepId=="P3858/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1C-YES"));
end
rule "Yes Step Rule for P3858/1C-NO"
	when
		StepPerformed(stepId=="P3858/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1D",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1C-NO"));
end
rule "No Step Rule for P3858/1C-NO"
	when
		StepPerformed(stepId=="P3858/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1C-NO"));
end
rule "Yes Step Rule for P3858/1D"
	when
		StepPerformed(stepId=="P3858/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1E",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1D"));
end
rule "No Step Rule for P3858/1D"
	when
		StepPerformed(stepId=="P3858/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2A",$sum.doubleValue() + 100.0,"Answered No to step P3858/1D"));
end
rule "Yes Step Rule for P3858/1D-YES"
	when
		StepPerformed(stepId=="P3858/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1E",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1D-YES"));
end
rule "No Step Rule for P3858/1D-YES"
	when
		StepPerformed(stepId=="P3858/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1D-YES"));
end
rule "Yes Step Rule for P3858/1D-NO"
	when
		StepPerformed(stepId=="P3858/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1D-NO"));
end
rule "No Step Rule for P3858/1D-NO"
	when
		StepPerformed(stepId=="P3858/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1D-NO"));
end
rule "Yes Step Rule for P3858/1E"
	when
		StepPerformed(stepId=="P3858/1E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1E"));
end
rule "No Step Rule for P3858/1E"
	when
		StepPerformed(stepId=="P3858/1E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2A",$sum.doubleValue() + 100.0,"Answered No to step P3858/1E"));
end
rule "Yes Step Rule for P3858/1E-YES"
	when
		StepPerformed(stepId=="P3858/1E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1E-YES"));
end
rule "No Step Rule for P3858/1E-YES"
	when
		StepPerformed(stepId=="P3858/1E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1E-YES"));
end
rule "Yes Step Rule for P3858/1E-NO"
	when
		StepPerformed(stepId=="P3858/1E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/1E-NO"));
end
rule "No Step Rule for P3858/1E-NO"
	when
		StepPerformed(stepId=="P3858/1E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/1E-NO"));
end
rule "Yes Step Rule for P3858/2A"
	when
		StepPerformed(stepId=="P3858/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2A"));
end
rule "No Step Rule for P3858/2A"
	when
		StepPerformed(stepId=="P3858/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/3A",$sum.doubleValue() + 100.0,"Answered No to step P3858/2A"));
end
rule "Yes Step Rule for P3858/2A-YES"
	when
		StepPerformed(stepId=="P3858/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2A-YES"));
end
rule "No Step Rule for P3858/2A-YES"
	when
		StepPerformed(stepId=="P3858/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/2A-YES"));
end
rule "Yes Step Rule for P3858/2A-NO"
	when
		StepPerformed(stepId=="P3858/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2A-NO"));
end
rule "No Step Rule for P3858/2A-NO"
	when
		StepPerformed(stepId=="P3858/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/2A-NO"));
end
rule "Yes Step Rule for P3858/2B"
	when
		StepPerformed(stepId=="P3858/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2B"));
end
rule "No Step Rule for P3858/2B"
	when
		StepPerformed(stepId=="P3858/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3858/2B"));
end
rule "Yes Step Rule for P3858/2B-YES"
	when
		StepPerformed(stepId=="P3858/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2B-YES"));
end
rule "No Step Rule for P3858/2B-YES"
	when
		StepPerformed(stepId=="P3858/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/2B-YES"));
end
rule "Yes Step Rule for P3858/2B-NO"
	when
		StepPerformed(stepId=="P3858/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2B-NO"));
end
rule "No Step Rule for P3858/2B-NO"
	when
		StepPerformed(stepId=="P3858/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/2B-NO"));
end
rule "Yes Step Rule for P3858/2C"
	when
		StepPerformed(stepId=="P3858/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2C"));
end
rule "No Step Rule for P3858/2C"
	when
		StepPerformed(stepId=="P3858/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3858/2C"));
end
rule "Yes Step Rule for P3858/2C-YES"
	when
		StepPerformed(stepId=="P3858/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2C-YES"));
end
rule "No Step Rule for P3858/2C-YES"
	when
		StepPerformed(stepId=="P3858/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/2C-YES"));
end
rule "Yes Step Rule for P3858/2C-NO"
	when
		StepPerformed(stepId=="P3858/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2C-NO"));
end
rule "No Step Rule for P3858/2C-NO"
	when
		StepPerformed(stepId=="P3858/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/2C-NO"));
end
rule "Yes Step Rule for P3858/2D"
	when
		StepPerformed(stepId=="P3858/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2D"));
end
rule "No Step Rule for P3858/2D"
	when
		StepPerformed(stepId=="P3858/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step P3858/2D"));
end
rule "Yes Step Rule for P3858/2D-YES"
	when
		StepPerformed(stepId=="P3858/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2D-YES"));
end
rule "No Step Rule for P3858/2D-YES"
	when
		StepPerformed(stepId=="P3858/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/2D-YES"));
end
rule "Yes Step Rule for P3858/2D-NO"
	when
		StepPerformed(stepId=="P3858/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/2D-NO"));
end
rule "No Step Rule for P3858/2D-NO"
	when
		StepPerformed(stepId=="P3858/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/2D-NO"));
end
rule "Yes Step Rule for P3858/3A"
	when
		StepPerformed(stepId=="P3858/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/3A"));
end
rule "No Step Rule for P3858/3A"
	when
		StepPerformed(stepId=="P3858/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3858/3A"));
end
rule "Yes Step Rule for P3858/3A-YES"
	when
		StepPerformed(stepId=="P3858/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/3A-YES"));
end
rule "No Step Rule for P3858/3A-YES"
	when
		StepPerformed(stepId=="P3858/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/3A-YES"));
end
rule "Yes Step Rule for P3858/3A-NO"
	when
		StepPerformed(stepId=="P3858/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/3A-NO"));
end
rule "No Step Rule for P3858/3A-NO"
	when
		StepPerformed(stepId=="P3858/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/3A-NO"));
end
rule "Yes Step Rule for P3858/3B"
	when
		StepPerformed(stepId=="P3858/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/3B"));
end
rule "No Step Rule for P3858/3B"
	when
		StepPerformed(stepId=="P3858/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/4A",$sum.doubleValue() + 100.0,"Answered No to step P3858/3B"));
end
rule "Yes Step Rule for P3858/3B-YES"
	when
		StepPerformed(stepId=="P3858/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/3B-YES"));
end
rule "No Step Rule for P3858/3B-YES"
	when
		StepPerformed(stepId=="P3858/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/3B-YES"));
end
rule "Yes Step Rule for P3858/3B-NO"
	when
		StepPerformed(stepId=="P3858/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/3B-NO"));
end
rule "No Step Rule for P3858/3B-NO"
	when
		StepPerformed(stepId=="P3858/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/3B-NO"));
end
rule "Yes Step Rule for P3858/3C"
	when
		StepPerformed(stepId=="P3858/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/3C"));
end
rule "No Step Rule for P3858/3C"
	when
		StepPerformed(stepId=="P3858/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/4A",$sum.doubleValue() + 100.0,"Answered No to step P3858/3C"));
end
rule "Yes Step Rule for P3858/3C-YES"
	when
		StepPerformed(stepId=="P3858/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/3C-YES"));
end
rule "No Step Rule for P3858/3C-YES"
	when
		StepPerformed(stepId=="P3858/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/3C-YES"));
end
rule "Yes Step Rule for P3858/3C-NO"
	when
		StepPerformed(stepId=="P3858/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/3C-NO"));
end
rule "No Step Rule for P3858/3C-NO"
	when
		StepPerformed(stepId=="P3858/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/3C-NO"));
end
rule "Yes Step Rule for P3858/4A"
	when
		StepPerformed(stepId=="P3858/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/4A"));
end
rule "No Step Rule for P3858/4A"
	when
		StepPerformed(stepId=="P3858/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A",$sum.doubleValue() + 100.0,"Answered No to step P3858/4A"));
end
rule "Yes Step Rule for P3858/4A-YES"
	when
		StepPerformed(stepId=="P3858/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/4A-YES"));
end
rule "No Step Rule for P3858/4A-YES"
	when
		StepPerformed(stepId=="P3858/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/4A-YES"));
end
rule "Yes Step Rule for P3858/4A-NO"
	when
		StepPerformed(stepId=="P3858/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/4A-NO"));
end
rule "No Step Rule for P3858/4A-NO"
	when
		StepPerformed(stepId=="P3858/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/4A-NO"));
end
rule "Yes Step Rule for P3858/5A"
	when
		StepPerformed(stepId=="P3858/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/5A"));
end
rule "No Step Rule for P3858/5A"
	when
		StepPerformed(stepId=="P3858/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3858/5A"));
end
rule "Yes Step Rule for P3858/5A-YES"
	when
		StepPerformed(stepId=="P3858/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/5A-YES"));
end
rule "No Step Rule for P3858/5A-YES"
	when
		StepPerformed(stepId=="P3858/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/5A-YES"));
end
rule "Yes Step Rule for P3858/5A-NO"
	when
		StepPerformed(stepId=="P3858/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/5A-NO"));
end
rule "No Step Rule for P3858/5A-NO"
	when
		StepPerformed(stepId=="P3858/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/5A-NO"));
end
rule "Yes Step Rule for P3858/6A"
	when
		StepPerformed(stepId=="P3858/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/6A"));
end
rule "No Step Rule for P3858/6A"
	when
		StepPerformed(stepId=="P3858/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3858/6A"));
end
rule "Yes Step Rule for P3858/6A-YES"
	when
		StepPerformed(stepId=="P3858/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/6A-YES"));
end
rule "No Step Rule for P3858/6A-YES"
	when
		StepPerformed(stepId=="P3858/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/6A-YES"));
end
rule "Yes Step Rule for P3858/6A-NO"
	when
		StepPerformed(stepId=="P3858/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3858/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3858/6A-NO"));
end
rule "No Step Rule for P3858/6A-NO"
	when
		StepPerformed(stepId=="P3858/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3858/6A-NO"));
end
rule "Yes Step Rule for P3859/1A"
	when
		StepPerformed(stepId=="P3859/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/1A"));
end
rule "No Step Rule for P3859/1A"
	when
		StepPerformed(stepId=="P3859/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/4A",$sum.doubleValue() + 100.0,"Answered No to step P3859/1A"));
end
rule "Yes Step Rule for P3859/1A-YES"
	when
		StepPerformed(stepId=="P3859/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/1A-YES"));
end
rule "No Step Rule for P3859/1A-YES"
	when
		StepPerformed(stepId=="P3859/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3859/1A-YES"));
end
rule "Yes Step Rule for P3859/1A-NO"
	when
		StepPerformed(stepId=="P3859/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/1A-NO"));
end
rule "No Step Rule for P3859/1A-NO"
	when
		StepPerformed(stepId=="P3859/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3859/1A-NO"));
end
rule "Yes Step Rule for P3859/2A"
	when
		StepPerformed(stepId=="P3859/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/2A"));
end
rule "No Step Rule for P3859/2A"
	when
		StepPerformed(stepId=="P3859/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3859/2A"));
end
rule "Yes Step Rule for P3859/2A-YES"
	when
		StepPerformed(stepId=="P3859/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/2A-YES"));
end
rule "No Step Rule for P3859/2A-YES"
	when
		StepPerformed(stepId=="P3859/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3859/2A-YES"));
end
rule "Yes Step Rule for P3859/2A-NO"
	when
		StepPerformed(stepId=="P3859/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/2A-NO"));
end
rule "No Step Rule for P3859/2A-NO"
	when
		StepPerformed(stepId=="P3859/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3859/2A-NO"));
end
rule "Yes Step Rule for P3859/3A"
	when
		StepPerformed(stepId=="P3859/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/3A"));
end
rule "No Step Rule for P3859/3A"
	when
		StepPerformed(stepId=="P3859/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3859/3A"));
end
rule "Yes Step Rule for P3859/3A-YES"
	when
		StepPerformed(stepId=="P3859/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/3A-YES"));
end
rule "No Step Rule for P3859/3A-YES"
	when
		StepPerformed(stepId=="P3859/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3859/3A-YES"));
end
rule "Yes Step Rule for P3859/3A-NO"
	when
		StepPerformed(stepId=="P3859/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/3A-NO"));
end
rule "No Step Rule for P3859/3A-NO"
	when
		StepPerformed(stepId=="P3859/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3859/3A-NO"));
end
rule "Yes Step Rule for P3859/4A"
	when
		StepPerformed(stepId=="P3859/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/4A"));
end
rule "No Step Rule for P3859/4A"
	when
		StepPerformed(stepId=="P3859/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3859/4A"));
end
rule "Yes Step Rule for P3859/4A-YES"
	when
		StepPerformed(stepId=="P3859/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/4A-YES"));
end
rule "No Step Rule for P3859/4A-YES"
	when
		StepPerformed(stepId=="P3859/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3859/4A-YES"));
end
rule "Yes Step Rule for P3859/4A-NO"
	when
		StepPerformed(stepId=="P3859/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3859/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3859/4A-NO"));
end
rule "No Step Rule for P3859/4A-NO"
	when
		StepPerformed(stepId=="P3859/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3859/4A-NO"));
end
rule "Yes Step Rule for P3896/1A"
	when
		StepPerformed(stepId=="P3896/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1A"));
end
rule "No Step Rule for P3896/1A"
	when
		StepPerformed(stepId=="P3896/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/1B",$sum.doubleValue() + 100.0,"Answered No to step P3896/1A"));
end
rule "Yes Step Rule for P3896/1A-YES"
	when
		StepPerformed(stepId=="P3896/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1A-YES"));
end
rule "No Step Rule for P3896/1A-YES"
	when
		StepPerformed(stepId=="P3896/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/1A-YES"));
end
rule "Yes Step Rule for P3896/1A-NO"
	when
		StepPerformed(stepId=="P3896/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1A-NO"));
end
rule "No Step Rule for P3896/1A-NO"
	when
		StepPerformed(stepId=="P3896/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/1A-NO"));
end
rule "Yes Step Rule for P3896/1B"
	when
		StepPerformed(stepId=="P3896/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1B"));
end
rule "No Step Rule for P3896/1B"
	when
		StepPerformed(stepId=="P3896/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3896/1B"));
end
rule "Yes Step Rule for P3896/1B-YES"
	when
		StepPerformed(stepId=="P3896/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1B-YES"));
end
rule "No Step Rule for P3896/1B-YES"
	when
		StepPerformed(stepId=="P3896/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/1B-YES"));
end
rule "Yes Step Rule for P3896/1B-NO"
	when
		StepPerformed(stepId=="P3896/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1B-NO"));
end
rule "No Step Rule for P3896/1B-NO"
	when
		StepPerformed(stepId=="P3896/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/1B-NO"));
end
rule "Yes Step Rule for P3896/1C"
	when
		StepPerformed(stepId=="P3896/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1C"));
end
rule "No Step Rule for P3896/1C"
	when
		StepPerformed(stepId=="P3896/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/1C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3896/1C"));
end
rule "Yes Step Rule for P3896/1C-YES"
	when
		StepPerformed(stepId=="P3896/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1C-YES"));
end
rule "No Step Rule for P3896/1C-YES"
	when
		StepPerformed(stepId=="P3896/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/1C-YES"));
end
rule "Yes Step Rule for P3896/1C-NO"
	when
		StepPerformed(stepId=="P3896/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1C-NO"));
end
rule "No Step Rule for P3896/1C-NO"
	when
		StepPerformed(stepId=="P3896/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/1C-NO"));
end
rule "Yes Step Rule for P3896/1D"
	when
		StepPerformed(stepId=="P3896/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1D"));
end
rule "No Step Rule for P3896/1D"
	when
		StepPerformed(stepId=="P3896/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/1D-NO",$sum.doubleValue() + 100.0,"Answered No to step P3896/1D"));
end
rule "Yes Step Rule for P3896/1D-YES"
	when
		StepPerformed(stepId=="P3896/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1D-YES"));
end
rule "No Step Rule for P3896/1D-YES"
	when
		StepPerformed(stepId=="P3896/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/1D-YES"));
end
rule "Yes Step Rule for P3896/1D-NO"
	when
		StepPerformed(stepId=="P3896/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/1D-NO"));
end
rule "No Step Rule for P3896/1D-NO"
	when
		StepPerformed(stepId=="P3896/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/1D-NO"));
end
rule "Yes Step Rule for P3896/2A"
	when
		StepPerformed(stepId=="P3896/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/2A"));
end
rule "No Step Rule for P3896/2A"
	when
		StepPerformed(stepId=="P3896/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3896/2A"));
end
rule "Yes Step Rule for P3896/2A-YES"
	when
		StepPerformed(stepId=="P3896/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/2A-YES"));
end
rule "No Step Rule for P3896/2A-YES"
	when
		StepPerformed(stepId=="P3896/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/2A-YES"));
end
rule "Yes Step Rule for P3896/2A-NO"
	when
		StepPerformed(stepId=="P3896/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/2A-NO"));
end
rule "No Step Rule for P3896/2A-NO"
	when
		StepPerformed(stepId=="P3896/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/2A-NO"));
end
rule "Yes Step Rule for P3896/3A"
	when
		StepPerformed(stepId=="P3896/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/3A"));
end
rule "No Step Rule for P3896/3A"
	when
		StepPerformed(stepId=="P3896/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3896/3A"));
end
rule "Yes Step Rule for P3896/3A-YES"
	when
		StepPerformed(stepId=="P3896/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/3A-YES"));
end
rule "No Step Rule for P3896/3A-YES"
	when
		StepPerformed(stepId=="P3896/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/3A-YES"));
end
rule "Yes Step Rule for P3896/3A-NO"
	when
		StepPerformed(stepId=="P3896/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3896/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3896/3A-NO"));
end
rule "No Step Rule for P3896/3A-NO"
	when
		StepPerformed(stepId=="P3896/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3896/3A-NO"));
end
rule "Yes Step Rule for P3912/1A"
	when
		StepPerformed(stepId=="P3912/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1A"));
end
rule "No Step Rule for P3912/1A"
	when
		StepPerformed(stepId=="P3912/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1B",$sum.doubleValue() + 100.0,"Answered No to step P3912/1A"));
end
rule "Yes Step Rule for P3912/1A-YES"
	when
		StepPerformed(stepId=="P3912/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1A-YES"));
end
rule "No Step Rule for P3912/1A-YES"
	when
		StepPerformed(stepId=="P3912/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1A-YES"));
end
rule "Yes Step Rule for P3912/1A-NO"
	when
		StepPerformed(stepId=="P3912/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1A-NO"));
end
rule "No Step Rule for P3912/1A-NO"
	when
		StepPerformed(stepId=="P3912/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1A-NO"));
end
rule "Yes Step Rule for P3912/1B"
	when
		StepPerformed(stepId=="P3912/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1B"));
end
rule "No Step Rule for P3912/1B"
	when
		StepPerformed(stepId=="P3912/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3912/1B"));
end
rule "Yes Step Rule for P3912/1B-YES"
	when
		StepPerformed(stepId=="P3912/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1B-YES"));
end
rule "No Step Rule for P3912/1B-YES"
	when
		StepPerformed(stepId=="P3912/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1B-YES"));
end
rule "Yes Step Rule for P3912/1B-NO"
	when
		StepPerformed(stepId=="P3912/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1B-NO"));
end
rule "No Step Rule for P3912/1B-NO"
	when
		StepPerformed(stepId=="P3912/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1B-NO"));
end
rule "Yes Step Rule for P3912/1C"
	when
		StepPerformed(stepId=="P3912/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1C"));
end
rule "No Step Rule for P3912/1C"
	when
		StepPerformed(stepId=="P3912/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1D",$sum.doubleValue() + 100.0,"Answered No to step P3912/1C"));
end
rule "Yes Step Rule for P3912/1C-YES"
	when
		StepPerformed(stepId=="P3912/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1E",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1C-YES"));
end
rule "No Step Rule for P3912/1C-YES"
	when
		StepPerformed(stepId=="P3912/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1C-YES"));
end
rule "Yes Step Rule for P3912/1C-NO"
	when
		StepPerformed(stepId=="P3912/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1D",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1C-NO"));
end
rule "No Step Rule for P3912/1C-NO"
	when
		StepPerformed(stepId=="P3912/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1C-NO"));
end
rule "Yes Step Rule for P3912/1D"
	when
		StepPerformed(stepId=="P3912/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1E",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1D"));
end
rule "No Step Rule for P3912/1D"
	when
		StepPerformed(stepId=="P3912/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2A",$sum.doubleValue() + 100.0,"Answered No to step P3912/1D"));
end
rule "Yes Step Rule for P3912/1D-YES"
	when
		StepPerformed(stepId=="P3912/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1E",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1D-YES"));
end
rule "No Step Rule for P3912/1D-YES"
	when
		StepPerformed(stepId=="P3912/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1D-YES"));
end
rule "Yes Step Rule for P3912/1D-NO"
	when
		StepPerformed(stepId=="P3912/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1D-NO"));
end
rule "No Step Rule for P3912/1D-NO"
	when
		StepPerformed(stepId=="P3912/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1D-NO"));
end
rule "Yes Step Rule for P3912/1E"
	when
		StepPerformed(stepId=="P3912/1E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1E"));
end
rule "No Step Rule for P3912/1E"
	when
		StepPerformed(stepId=="P3912/1E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2A",$sum.doubleValue() + 100.0,"Answered No to step P3912/1E"));
end
rule "Yes Step Rule for P3912/1E-YES"
	when
		StepPerformed(stepId=="P3912/1E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1E-YES"));
end
rule "No Step Rule for P3912/1E-YES"
	when
		StepPerformed(stepId=="P3912/1E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1E-YES"));
end
rule "Yes Step Rule for P3912/1E-NO"
	when
		StepPerformed(stepId=="P3912/1E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/1E-NO"));
end
rule "No Step Rule for P3912/1E-NO"
	when
		StepPerformed(stepId=="P3912/1E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/1E-NO"));
end
rule "Yes Step Rule for P3912/2A"
	when
		StepPerformed(stepId=="P3912/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2A"));
end
rule "No Step Rule for P3912/2A"
	when
		StepPerformed(stepId=="P3912/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/3A",$sum.doubleValue() + 100.0,"Answered No to step P3912/2A"));
end
rule "Yes Step Rule for P3912/2A-YES"
	when
		StepPerformed(stepId=="P3912/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2A-YES"));
end
rule "No Step Rule for P3912/2A-YES"
	when
		StepPerformed(stepId=="P3912/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/2A-YES"));
end
rule "Yes Step Rule for P3912/2A-NO"
	when
		StepPerformed(stepId=="P3912/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2A-NO"));
end
rule "No Step Rule for P3912/2A-NO"
	when
		StepPerformed(stepId=="P3912/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/2A-NO"));
end
rule "Yes Step Rule for P3912/2B"
	when
		StepPerformed(stepId=="P3912/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2B"));
end
rule "No Step Rule for P3912/2B"
	when
		StepPerformed(stepId=="P3912/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3912/2B"));
end
rule "Yes Step Rule for P3912/2B-YES"
	when
		StepPerformed(stepId=="P3912/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2B-YES"));
end
rule "No Step Rule for P3912/2B-YES"
	when
		StepPerformed(stepId=="P3912/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/2B-YES"));
end
rule "Yes Step Rule for P3912/2B-NO"
	when
		StepPerformed(stepId=="P3912/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2B-NO"));
end
rule "No Step Rule for P3912/2B-NO"
	when
		StepPerformed(stepId=="P3912/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/2B-NO"));
end
rule "Yes Step Rule for P3912/2C"
	when
		StepPerformed(stepId=="P3912/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2C"));
end
rule "No Step Rule for P3912/2C"
	when
		StepPerformed(stepId=="P3912/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3912/2C"));
end
rule "Yes Step Rule for P3912/2C-YES"
	when
		StepPerformed(stepId=="P3912/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2D",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2C-YES"));
end
rule "No Step Rule for P3912/2C-YES"
	when
		StepPerformed(stepId=="P3912/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/2C-YES"));
end
rule "Yes Step Rule for P3912/2C-NO"
	when
		StepPerformed(stepId=="P3912/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2C-NO"));
end
rule "No Step Rule for P3912/2C-NO"
	when
		StepPerformed(stepId=="P3912/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/2C-NO"));
end
rule "Yes Step Rule for P3912/2D"
	when
		StepPerformed(stepId=="P3912/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2D"));
end
rule "No Step Rule for P3912/2D"
	when
		StepPerformed(stepId=="P3912/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step P3912/2D"));
end
rule "Yes Step Rule for P3912/2D-YES"
	when
		StepPerformed(stepId=="P3912/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2D-YES"));
end
rule "No Step Rule for P3912/2D-YES"
	when
		StepPerformed(stepId=="P3912/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/2D-YES"));
end
rule "Yes Step Rule for P3912/2D-NO"
	when
		StepPerformed(stepId=="P3912/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/2D-NO"));
end
rule "No Step Rule for P3912/2D-NO"
	when
		StepPerformed(stepId=="P3912/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/2D-NO"));
end
rule "Yes Step Rule for P3912/3A"
	when
		StepPerformed(stepId=="P3912/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/3A"));
end
rule "No Step Rule for P3912/3A"
	when
		StepPerformed(stepId=="P3912/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3912/3A"));
end
rule "Yes Step Rule for P3912/3A-YES"
	when
		StepPerformed(stepId=="P3912/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/3B",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/3A-YES"));
end
rule "No Step Rule for P3912/3A-YES"
	when
		StepPerformed(stepId=="P3912/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/3A-YES"));
end
rule "Yes Step Rule for P3912/3A-NO"
	when
		StepPerformed(stepId=="P3912/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/3A-NO"));
end
rule "No Step Rule for P3912/3A-NO"
	when
		StepPerformed(stepId=="P3912/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/3A-NO"));
end
rule "Yes Step Rule for P3912/3B"
	when
		StepPerformed(stepId=="P3912/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/3B"));
end
rule "No Step Rule for P3912/3B"
	when
		StepPerformed(stepId=="P3912/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/4A",$sum.doubleValue() + 100.0,"Answered No to step P3912/3B"));
end
rule "Yes Step Rule for P3912/3B-YES"
	when
		StepPerformed(stepId=="P3912/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/3C",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/3B-YES"));
end
rule "No Step Rule for P3912/3B-YES"
	when
		StepPerformed(stepId=="P3912/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/3B-YES"));
end
rule "Yes Step Rule for P3912/3B-NO"
	when
		StepPerformed(stepId=="P3912/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/3B-NO"));
end
rule "No Step Rule for P3912/3B-NO"
	when
		StepPerformed(stepId=="P3912/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/3B-NO"));
end
rule "Yes Step Rule for P3912/3C"
	when
		StepPerformed(stepId=="P3912/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/3C"));
end
rule "No Step Rule for P3912/3C"
	when
		StepPerformed(stepId=="P3912/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/4A",$sum.doubleValue() + 100.0,"Answered No to step P3912/3C"));
end
rule "Yes Step Rule for P3912/3C-YES"
	when
		StepPerformed(stepId=="P3912/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/3C-YES"));
end
rule "No Step Rule for P3912/3C-YES"
	when
		StepPerformed(stepId=="P3912/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/3C-YES"));
end
rule "Yes Step Rule for P3912/3C-NO"
	when
		StepPerformed(stepId=="P3912/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/3C-NO"));
end
rule "No Step Rule for P3912/3C-NO"
	when
		StepPerformed(stepId=="P3912/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/3C-NO"));
end
rule "Yes Step Rule for P3912/4A"
	when
		StepPerformed(stepId=="P3912/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/4A"));
end
rule "No Step Rule for P3912/4A"
	when
		StepPerformed(stepId=="P3912/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A",$sum.doubleValue() + 100.0,"Answered No to step P3912/4A"));
end
rule "Yes Step Rule for P3912/4A-YES"
	when
		StepPerformed(stepId=="P3912/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/4A-YES"));
end
rule "No Step Rule for P3912/4A-YES"
	when
		StepPerformed(stepId=="P3912/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/4A-YES"));
end
rule "Yes Step Rule for P3912/4A-NO"
	when
		StepPerformed(stepId=="P3912/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/4A-NO"));
end
rule "No Step Rule for P3912/4A-NO"
	when
		StepPerformed(stepId=="P3912/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/4A-NO"));
end
rule "Yes Step Rule for P3912/5A"
	when
		StepPerformed(stepId=="P3912/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/5A"));
end
rule "No Step Rule for P3912/5A"
	when
		StepPerformed(stepId=="P3912/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3912/5A"));
end
rule "Yes Step Rule for P3912/5A-YES"
	when
		StepPerformed(stepId=="P3912/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/5A-YES"));
end
rule "No Step Rule for P3912/5A-YES"
	when
		StepPerformed(stepId=="P3912/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/5A-YES"));
end
rule "Yes Step Rule for P3912/5A-NO"
	when
		StepPerformed(stepId=="P3912/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/6A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/5A-NO"));
end
rule "No Step Rule for P3912/5A-NO"
	when
		StepPerformed(stepId=="P3912/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/5A-NO"));
end
rule "Yes Step Rule for P3912/6A"
	when
		StepPerformed(stepId=="P3912/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/6A"));
end
rule "No Step Rule for P3912/6A"
	when
		StepPerformed(stepId=="P3912/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3912/6A"));
end
rule "Yes Step Rule for P3912/6A-YES"
	when
		StepPerformed(stepId=="P3912/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/6A-YES"));
end
rule "No Step Rule for P3912/6A-YES"
	when
		StepPerformed(stepId=="P3912/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/6A-YES"));
end
rule "Yes Step Rule for P3912/6A-NO"
	when
		StepPerformed(stepId=="P3912/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3912/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3912/6A-NO"));
end
rule "No Step Rule for P3912/6A-NO"
	when
		StepPerformed(stepId=="P3912/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3912/6A-NO"));
end
rule "Yes Step Rule for P3913/1A"
	when
		StepPerformed(stepId=="P3913/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3913/1A"));
end
rule "No Step Rule for P3913/1A"
	when
		StepPerformed(stepId=="P3913/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/3A",$sum.doubleValue() + 100.0,"Answered No to step P3913/1A"));
end
rule "Yes Step Rule for P3913/1A-YES"
	when
		StepPerformed(stepId=="P3913/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3913/1A-YES"));
end
rule "No Step Rule for P3913/1A-YES"
	when
		StepPerformed(stepId=="P3913/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3913/1A-YES"));
end
rule "Yes Step Rule for P3913/1A-NO"
	when
		StepPerformed(stepId=="P3913/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3913/1A-NO"));
end
rule "No Step Rule for P3913/1A-NO"
	when
		StepPerformed(stepId=="P3913/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3913/1A-NO"));
end
rule "Yes Step Rule for P3913/2A"
	when
		StepPerformed(stepId=="P3913/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3913/2A"));
end
rule "No Step Rule for P3913/2A"
	when
		StepPerformed(stepId=="P3913/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3913/2A"));
end
rule "Yes Step Rule for P3913/2A-YES"
	when
		StepPerformed(stepId=="P3913/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3913/2A-YES"));
end
rule "No Step Rule for P3913/2A-YES"
	when
		StepPerformed(stepId=="P3913/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3913/2A-YES"));
end
rule "Yes Step Rule for P3913/2A-NO"
	when
		StepPerformed(stepId=="P3913/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3913/2A-NO"));
end
rule "No Step Rule for P3913/2A-NO"
	when
		StepPerformed(stepId=="P3913/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3913/2A-NO"));
end
rule "Yes Step Rule for P3913/3A"
	when
		StepPerformed(stepId=="P3913/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3913/3A"));
end
rule "No Step Rule for P3913/3A"
	when
		StepPerformed(stepId=="P3913/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3913/3A"));
end
rule "Yes Step Rule for P3913/3A-YES"
	when
		StepPerformed(stepId=="P3913/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3913/3A-YES"));
end
rule "No Step Rule for P3913/3A-YES"
	when
		StepPerformed(stepId=="P3913/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3913/3A-YES"));
end
rule "Yes Step Rule for P3913/3A-NO"
	when
		StepPerformed(stepId=="P3913/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3913/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3913/3A-NO"));
end
rule "No Step Rule for P3913/3A-NO"
	when
		StepPerformed(stepId=="P3913/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3913/3A-NO"));
end
rule "Yes Step Rule for P3914/1A"
	when
		StepPerformed(stepId=="P3914/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/1A"));
end
rule "No Step Rule for P3914/1A"
	when
		StepPerformed(stepId=="P3914/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/3A",$sum.doubleValue() + 100.0,"Answered No to step P3914/1A"));
end
rule "Yes Step Rule for P3914/1A-YES"
	when
		StepPerformed(stepId=="P3914/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/1A-YES"));
end
rule "No Step Rule for P3914/1A-YES"
	when
		StepPerformed(stepId=="P3914/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/1A-YES"));
end
rule "Yes Step Rule for P3914/1A-NO"
	when
		StepPerformed(stepId=="P3914/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/1A-NO"));
end
rule "No Step Rule for P3914/1A-NO"
	when
		StepPerformed(stepId=="P3914/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/1A-NO"));
end
rule "Yes Step Rule for P3914/1B"
	when
		StepPerformed(stepId=="P3914/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/1B"));
end
rule "No Step Rule for P3914/1B"
	when
		StepPerformed(stepId=="P3914/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/1C",$sum.doubleValue() + 100.0,"Answered No to step P3914/1B"));
end
rule "Yes Step Rule for P3914/1B-YES"
	when
		StepPerformed(stepId=="P3914/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/1B-YES"));
end
rule "No Step Rule for P3914/1B-YES"
	when
		StepPerformed(stepId=="P3914/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/1B-YES"));
end
rule "Yes Step Rule for P3914/1B-NO"
	when
		StepPerformed(stepId=="P3914/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/1B-NO"));
end
rule "No Step Rule for P3914/1B-NO"
	when
		StepPerformed(stepId=="P3914/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/1B-NO"));
end
rule "Yes Step Rule for P3914/1C"
	when
		StepPerformed(stepId=="P3914/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/1C"));
end
rule "No Step Rule for P3914/1C"
	when
		StepPerformed(stepId=="P3914/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/2A",$sum.doubleValue() + 100.0,"Answered No to step P3914/1C"));
end
rule "Yes Step Rule for P3914/1C-YES"
	when
		StepPerformed(stepId=="P3914/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/1C-YES"));
end
rule "No Step Rule for P3914/1C-YES"
	when
		StepPerformed(stepId=="P3914/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/1C-YES"));
end
rule "Yes Step Rule for P3914/1C-NO"
	when
		StepPerformed(stepId=="P3914/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/1C-NO"));
end
rule "No Step Rule for P3914/1C-NO"
	when
		StepPerformed(stepId=="P3914/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/1C-NO"));
end
rule "Yes Step Rule for P3914/2A"
	when
		StepPerformed(stepId=="P3914/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/2A"));
end
rule "No Step Rule for P3914/2A"
	when
		StepPerformed(stepId=="P3914/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3914/2A"));
end
rule "Yes Step Rule for P3914/2A-YES"
	when
		StepPerformed(stepId=="P3914/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/2A-YES"));
end
rule "No Step Rule for P3914/2A-YES"
	when
		StepPerformed(stepId=="P3914/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/2A-YES"));
end
rule "Yes Step Rule for P3914/2A-NO"
	when
		StepPerformed(stepId=="P3914/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/2A-NO"));
end
rule "No Step Rule for P3914/2A-NO"
	when
		StepPerformed(stepId=="P3914/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/2A-NO"));
end
rule "Yes Step Rule for P3914/3A"
	when
		StepPerformed(stepId=="P3914/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/3A"));
end
rule "No Step Rule for P3914/3A"
	when
		StepPerformed(stepId=="P3914/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/4A",$sum.doubleValue() + 100.0,"Answered No to step P3914/3A"));
end
rule "Yes Step Rule for P3914/3A-YES"
	when
		StepPerformed(stepId=="P3914/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/3A-YES"));
end
rule "No Step Rule for P3914/3A-YES"
	when
		StepPerformed(stepId=="P3914/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/3A-YES"));
end
rule "Yes Step Rule for P3914/3A-NO"
	when
		StepPerformed(stepId=="P3914/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/4A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/3A-NO"));
end
rule "No Step Rule for P3914/3A-NO"
	when
		StepPerformed(stepId=="P3914/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/3A-NO"));
end
rule "Yes Step Rule for P3914/4A"
	when
		StepPerformed(stepId=="P3914/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/4A"));
end
rule "No Step Rule for P3914/4A"
	when
		StepPerformed(stepId=="P3914/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3914/4A"));
end
rule "Yes Step Rule for P3914/4A-YES"
	when
		StepPerformed(stepId=="P3914/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/4A-YES"));
end
rule "No Step Rule for P3914/4A-YES"
	when
		StepPerformed(stepId=="P3914/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/4A-YES"));
end
rule "Yes Step Rule for P3914/4A-NO"
	when
		StepPerformed(stepId=="P3914/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/5A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/4A-NO"));
end
rule "No Step Rule for P3914/4A-NO"
	when
		StepPerformed(stepId=="P3914/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/4A-NO"));
end
rule "Yes Step Rule for P3914/5A"
	when
		StepPerformed(stepId=="P3914/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/5A"));
end
rule "No Step Rule for P3914/5A"
	when
		StepPerformed(stepId=="P3914/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3914/5A"));
end
rule "Yes Step Rule for P3914/5A-YES"
	when
		StepPerformed(stepId=="P3914/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/5A-YES"));
end
rule "No Step Rule for P3914/5A-YES"
	when
		StepPerformed(stepId=="P3914/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/5A-YES"));
end
rule "Yes Step Rule for P3914/5A-NO"
	when
		StepPerformed(stepId=="P3914/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3914/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3914/5A-NO"));
end
rule "No Step Rule for P3914/5A-NO"
	when
		StepPerformed(stepId=="P3914/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3914/5A-NO"));
end
rule "Yes Step Rule for P3917/1A"
	when
		StepPerformed(stepId=="P3917/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3917/1A"));
end
rule "No Step Rule for P3917/1A"
	when
		StepPerformed(stepId=="P3917/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/1B",$sum.doubleValue() + 100.0,"Answered No to step P3917/1A"));
end
rule "Yes Step Rule for P3917/1A-YES"
	when
		StepPerformed(stepId=="P3917/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3917/1A-YES"));
end
rule "No Step Rule for P3917/1A-YES"
	when
		StepPerformed(stepId=="P3917/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3917/1A-YES"));
end
rule "Yes Step Rule for P3917/1A-NO"
	when
		StepPerformed(stepId=="P3917/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3917/1A-NO"));
end
rule "No Step Rule for P3917/1A-NO"
	when
		StepPerformed(stepId=="P3917/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3917/1A-NO"));
end
rule "Yes Step Rule for P3917/1B"
	when
		StepPerformed(stepId=="P3917/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3917/1B"));
end
rule "No Step Rule for P3917/1B"
	when
		StepPerformed(stepId=="P3917/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/2A",$sum.doubleValue() + 100.0,"Answered No to step P3917/1B"));
end
rule "Yes Step Rule for P3917/1B-YES"
	when
		StepPerformed(stepId=="P3917/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3917/1B-YES"));
end
rule "No Step Rule for P3917/1B-YES"
	when
		StepPerformed(stepId=="P3917/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3917/1B-YES"));
end
rule "Yes Step Rule for P3917/1B-NO"
	when
		StepPerformed(stepId=="P3917/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3917/1B-NO"));
end
rule "No Step Rule for P3917/1B-NO"
	when
		StepPerformed(stepId=="P3917/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3917/1B-NO"));
end
rule "Yes Step Rule for P3917/2A"
	when
		StepPerformed(stepId=="P3917/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3917/2A"));
end
rule "No Step Rule for P3917/2A"
	when
		StepPerformed(stepId=="P3917/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3917/2A"));
end
rule "Yes Step Rule for P3917/2A-YES"
	when
		StepPerformed(stepId=="P3917/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3917/2A-YES"));
end
rule "No Step Rule for P3917/2A-YES"
	when
		StepPerformed(stepId=="P3917/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3917/2A-YES"));
end
rule "Yes Step Rule for P3917/2A-NO"
	when
		StepPerformed(stepId=="P3917/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3917/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3917/2A-NO"));
end
rule "No Step Rule for P3917/2A-NO"
	when
		StepPerformed(stepId=="P3917/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3917/2A-NO"));
end
rule "Yes Step Rule for P3918/1A"
	when
		StepPerformed(stepId=="P3918/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3918/1A"));
end
rule "No Step Rule for P3918/1A"
	when
		StepPerformed(stepId=="P3918/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/1B",$sum.doubleValue() + 100.0,"Answered No to step P3918/1A"));
end
rule "Yes Step Rule for P3918/1A-YES"
	when
		StepPerformed(stepId=="P3918/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3918/1A-YES"));
end
rule "No Step Rule for P3918/1A-YES"
	when
		StepPerformed(stepId=="P3918/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3918/1A-YES"));
end
rule "Yes Step Rule for P3918/1A-NO"
	when
		StepPerformed(stepId=="P3918/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3918/1A-NO"));
end
rule "No Step Rule for P3918/1A-NO"
	when
		StepPerformed(stepId=="P3918/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3918/1A-NO"));
end
rule "Yes Step Rule for P3918/1B"
	when
		StepPerformed(stepId=="P3918/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3918/1B"));
end
rule "No Step Rule for P3918/1B"
	when
		StepPerformed(stepId=="P3918/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/2A",$sum.doubleValue() + 100.0,"Answered No to step P3918/1B"));
end
rule "Yes Step Rule for P3918/1B-YES"
	when
		StepPerformed(stepId=="P3918/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3918/1B-YES"));
end
rule "No Step Rule for P3918/1B-YES"
	when
		StepPerformed(stepId=="P3918/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3918/1B-YES"));
end
rule "Yes Step Rule for P3918/1B-NO"
	when
		StepPerformed(stepId=="P3918/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3918/1B-NO"));
end
rule "No Step Rule for P3918/1B-NO"
	when
		StepPerformed(stepId=="P3918/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3918/1B-NO"));
end
rule "Yes Step Rule for P3918/2A"
	when
		StepPerformed(stepId=="P3918/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3918/2A"));
end
rule "No Step Rule for P3918/2A"
	when
		StepPerformed(stepId=="P3918/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3918/2A"));
end
rule "Yes Step Rule for P3918/2A-YES"
	when
		StepPerformed(stepId=="P3918/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3918/2A-YES"));
end
rule "No Step Rule for P3918/2A-YES"
	when
		StepPerformed(stepId=="P3918/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3918/2A-YES"));
end
rule "Yes Step Rule for P3918/2A-NO"
	when
		StepPerformed(stepId=="P3918/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3918/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3918/2A-NO"));
end
rule "No Step Rule for P3918/2A-NO"
	when
		StepPerformed(stepId=="P3918/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3918/2A-NO"));
end
rule "Yes Step Rule for P3919/1A"
	when
		StepPerformed(stepId=="P3919/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/1A"));
end
rule "No Step Rule for P3919/1A"
	when
		StepPerformed(stepId=="P3919/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3919/1A"));
end
rule "Yes Step Rule for P3919/1A-YES"
	when
		StepPerformed(stepId=="P3919/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/1A-YES"));
end
rule "No Step Rule for P3919/1A-YES"
	when
		StepPerformed(stepId=="P3919/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3919/1A-YES"));
end
rule "Yes Step Rule for P3919/1A-NO"
	when
		StepPerformed(stepId=="P3919/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/1A-NO"));
end
rule "No Step Rule for P3919/1A-NO"
	when
		StepPerformed(stepId=="P3919/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3919/1A-NO"));
end
rule "Yes Step Rule for P3919/2A"
	when
		StepPerformed(stepId=="P3919/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/2A"));
end
rule "No Step Rule for P3919/2A"
	when
		StepPerformed(stepId=="P3919/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3919/2A"));
end
rule "Yes Step Rule for P3919/2A-YES"
	when
		StepPerformed(stepId=="P3919/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/2A-YES"));
end
rule "No Step Rule for P3919/2A-YES"
	when
		StepPerformed(stepId=="P3919/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3919/2A-YES"));
end
rule "Yes Step Rule for P3919/2A-NO"
	when
		StepPerformed(stepId=="P3919/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/2A-NO"));
end
rule "No Step Rule for P3919/2A-NO"
	when
		StepPerformed(stepId=="P3919/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3919/2A-NO"));
end
rule "Yes Step Rule for P3919/2B"
	when
		StepPerformed(stepId=="P3919/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/2B"));
end
rule "No Step Rule for P3919/2B"
	when
		StepPerformed(stepId=="P3919/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3919/2B"));
end
rule "Yes Step Rule for P3919/2B-YES"
	when
		StepPerformed(stepId=="P3919/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/2B-YES"));
end
rule "No Step Rule for P3919/2B-YES"
	when
		StepPerformed(stepId=="P3919/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3919/2B-YES"));
end
rule "Yes Step Rule for P3919/2B-NO"
	when
		StepPerformed(stepId=="P3919/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/2B-NO"));
end
rule "No Step Rule for P3919/2B-NO"
	when
		StepPerformed(stepId=="P3919/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3919/2B-NO"));
end
rule "Yes Step Rule for P3919/3A"
	when
		StepPerformed(stepId=="P3919/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/3A"));
end
rule "No Step Rule for P3919/3A"
	when
		StepPerformed(stepId=="P3919/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3919/3A"));
end
rule "Yes Step Rule for P3919/3A-YES"
	when
		StepPerformed(stepId=="P3919/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/3A-YES"));
end
rule "No Step Rule for P3919/3A-YES"
	when
		StepPerformed(stepId=="P3919/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3919/3A-YES"));
end
rule "Yes Step Rule for P3919/3A-NO"
	when
		StepPerformed(stepId=="P3919/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3919/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3919/3A-NO"));
end
rule "No Step Rule for P3919/3A-NO"
	when
		StepPerformed(stepId=="P3919/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3919/3A-NO"));
end
rule "Yes Step Rule for P3920/1A"
	when
		StepPerformed(stepId=="P3920/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/1A"));
end
rule "No Step Rule for P3920/1A"
	when
		StepPerformed(stepId=="P3920/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/1B",$sum.doubleValue() + 100.0,"Answered No to step P3920/1A"));
end
rule "Yes Step Rule for P3920/1A-YES"
	when
		StepPerformed(stepId=="P3920/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/1A-YES"));
end
rule "No Step Rule for P3920/1A-YES"
	when
		StepPerformed(stepId=="P3920/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/1A-YES"));
end
rule "Yes Step Rule for P3920/1A-NO"
	when
		StepPerformed(stepId=="P3920/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/1A-NO"));
end
rule "No Step Rule for P3920/1A-NO"
	when
		StepPerformed(stepId=="P3920/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/1A-NO"));
end
rule "Yes Step Rule for P3920/1B"
	when
		StepPerformed(stepId=="P3920/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/1B"));
end
rule "No Step Rule for P3920/1B"
	when
		StepPerformed(stepId=="P3920/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/1C",$sum.doubleValue() + 100.0,"Answered No to step P3920/1B"));
end
rule "Yes Step Rule for P3920/1B-YES"
	when
		StepPerformed(stepId=="P3920/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/1B-YES"));
end
rule "No Step Rule for P3920/1B-YES"
	when
		StepPerformed(stepId=="P3920/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/1B-YES"));
end
rule "Yes Step Rule for P3920/1B-NO"
	when
		StepPerformed(stepId=="P3920/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/1B-NO"));
end
rule "No Step Rule for P3920/1B-NO"
	when
		StepPerformed(stepId=="P3920/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/1B-NO"));
end
rule "Yes Step Rule for P3920/1C"
	when
		StepPerformed(stepId=="P3920/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/1C"));
end
rule "No Step Rule for P3920/1C"
	when
		StepPerformed(stepId=="P3920/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/1C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3920/1C"));
end
rule "Yes Step Rule for P3920/1C-YES"
	when
		StepPerformed(stepId=="P3920/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/1C-YES"));
end
rule "No Step Rule for P3920/1C-YES"
	when
		StepPerformed(stepId=="P3920/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/1C-YES"));
end
rule "Yes Step Rule for P3920/1C-NO"
	when
		StepPerformed(stepId=="P3920/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/1C-NO"));
end
rule "No Step Rule for P3920/1C-NO"
	when
		StepPerformed(stepId=="P3920/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/1C-NO"));
end
rule "Yes Step Rule for P3920/2A"
	when
		StepPerformed(stepId=="P3920/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/2A"));
end
rule "No Step Rule for P3920/2A"
	when
		StepPerformed(stepId=="P3920/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3920/2A"));
end
rule "Yes Step Rule for P3920/2A-YES"
	when
		StepPerformed(stepId=="P3920/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/2A-YES"));
end
rule "No Step Rule for P3920/2A-YES"
	when
		StepPerformed(stepId=="P3920/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/2A-YES"));
end
rule "Yes Step Rule for P3920/2A-NO"
	when
		StepPerformed(stepId=="P3920/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/2A-NO"));
end
rule "No Step Rule for P3920/2A-NO"
	when
		StepPerformed(stepId=="P3920/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/2A-NO"));
end
rule "Yes Step Rule for P3920/3A"
	when
		StepPerformed(stepId=="P3920/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/3A"));
end
rule "No Step Rule for P3920/3A"
	when
		StepPerformed(stepId=="P3920/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3920/3A"));
end
rule "Yes Step Rule for P3920/3A-YES"
	when
		StepPerformed(stepId=="P3920/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/3A-YES"));
end
rule "No Step Rule for P3920/3A-YES"
	when
		StepPerformed(stepId=="P3920/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/3A-YES"));
end
rule "Yes Step Rule for P3920/3A-NO"
	when
		StepPerformed(stepId=="P3920/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3920/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3920/3A-NO"));
end
rule "No Step Rule for P3920/3A-NO"
	when
		StepPerformed(stepId=="P3920/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3920/3A-NO"));
end
rule "Yes Step Rule for P3925/1A"
	when
		StepPerformed(stepId=="P3925/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3925/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3925/1A"));
end
rule "No Step Rule for P3925/1A"
	when
		StepPerformed(stepId=="P3925/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3925/1B",$sum.doubleValue() + 100.0,"Answered No to step P3925/1A"));
end
rule "Yes Step Rule for P3925/1A-YES"
	when
		StepPerformed(stepId=="P3925/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3925/1A-YES"));
end
rule "No Step Rule for P3925/1A-YES"
	when
		StepPerformed(stepId=="P3925/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3925/1A-YES"));
end
rule "Yes Step Rule for P3925/1A-NO"
	when
		StepPerformed(stepId=="P3925/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3925/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3925/1A-NO"));
end
rule "No Step Rule for P3925/1A-NO"
	when
		StepPerformed(stepId=="P3925/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3925/1A-NO"));
end
rule "Yes Step Rule for P3925/1B"
	when
		StepPerformed(stepId=="P3925/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3925/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3925/1B"));
end
rule "No Step Rule for P3925/1B"
	when
		StepPerformed(stepId=="P3925/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3925/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3925/1B"));
end
rule "Yes Step Rule for P3925/1B-YES"
	when
		StepPerformed(stepId=="P3925/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3925/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3925/1B-YES"));
end
rule "No Step Rule for P3925/1B-YES"
	when
		StepPerformed(stepId=="P3925/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3925/1B-YES"));
end
rule "Yes Step Rule for P3925/1B-NO"
	when
		StepPerformed(stepId=="P3925/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3925/1B-NO"));
end
rule "No Step Rule for P3925/1B-NO"
	when
		StepPerformed(stepId=="P3925/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3925/1B-NO"));
end
rule "Yes Step Rule for P3925/2A"
	when
		StepPerformed(stepId=="P3925/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3925/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3925/2A"));
end
rule "No Step Rule for P3925/2A"
	when
		StepPerformed(stepId=="P3925/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3925/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3925/2A"));
end
rule "Yes Step Rule for P3925/2A-YES"
	when
		StepPerformed(stepId=="P3925/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3925/2A-YES"));
end
rule "No Step Rule for P3925/2A-YES"
	when
		StepPerformed(stepId=="P3925/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3925/2A-YES"));
end
rule "Yes Step Rule for P3925/2A-NO"
	when
		StepPerformed(stepId=="P3925/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3925/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3925/2A-NO"));
end
rule "No Step Rule for P3925/2A-NO"
	when
		StepPerformed(stepId=="P3925/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3925/2A-NO"));
end
rule "Yes Step Rule for P3926/1A"
	when
		StepPerformed(stepId=="P3926/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3926/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3926/1A"));
end
rule "No Step Rule for P3926/1A"
	when
		StepPerformed(stepId=="P3926/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3926/1B",$sum.doubleValue() + 100.0,"Answered No to step P3926/1A"));
end
rule "Yes Step Rule for P3926/1A-YES"
	when
		StepPerformed(stepId=="P3926/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3926/1A-YES"));
end
rule "No Step Rule for P3926/1A-YES"
	when
		StepPerformed(stepId=="P3926/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3926/1A-YES"));
end
rule "Yes Step Rule for P3926/1A-NO"
	when
		StepPerformed(stepId=="P3926/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3926/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3926/1A-NO"));
end
rule "No Step Rule for P3926/1A-NO"
	when
		StepPerformed(stepId=="P3926/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3926/1A-NO"));
end
rule "Yes Step Rule for P3926/1B"
	when
		StepPerformed(stepId=="P3926/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3926/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3926/1B"));
end
rule "No Step Rule for P3926/1B"
	when
		StepPerformed(stepId=="P3926/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3926/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3926/1B"));
end
rule "Yes Step Rule for P3926/1B-YES"
	when
		StepPerformed(stepId=="P3926/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3926/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3926/1B-YES"));
end
rule "No Step Rule for P3926/1B-YES"
	when
		StepPerformed(stepId=="P3926/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3926/1B-YES"));
end
rule "Yes Step Rule for P3926/1B-NO"
	when
		StepPerformed(stepId=="P3926/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3926/1B-NO"));
end
rule "No Step Rule for P3926/1B-NO"
	when
		StepPerformed(stepId=="P3926/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3926/1B-NO"));
end
rule "Yes Step Rule for P3926/2A"
	when
		StepPerformed(stepId=="P3926/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3926/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3926/2A"));
end
rule "No Step Rule for P3926/2A"
	when
		StepPerformed(stepId=="P3926/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3926/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3926/2A"));
end
rule "Yes Step Rule for P3926/2A-YES"
	when
		StepPerformed(stepId=="P3926/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3926/2A-YES"));
end
rule "No Step Rule for P3926/2A-YES"
	when
		StepPerformed(stepId=="P3926/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3926/2A-YES"));
end
rule "Yes Step Rule for P3926/2A-NO"
	when
		StepPerformed(stepId=="P3926/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3926/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3926/2A-NO"));
end
rule "No Step Rule for P3926/2A-NO"
	when
		StepPerformed(stepId=="P3926/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3926/2A-NO"));
end
rule "Yes Step Rule for P3928/1A"
	when
		StepPerformed(stepId=="P3928/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3928/1A"));
end
rule "No Step Rule for P3928/1A"
	when
		StepPerformed(stepId=="P3928/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/1B",$sum.doubleValue() + 100.0,"Answered No to step P3928/1A"));
end
rule "Yes Step Rule for P3928/1A-YES"
	when
		StepPerformed(stepId=="P3928/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3928/1A-YES"));
end
rule "No Step Rule for P3928/1A-YES"
	when
		StepPerformed(stepId=="P3928/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3928/1A-YES"));
end
rule "Yes Step Rule for P3928/1A-NO"
	when
		StepPerformed(stepId=="P3928/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3928/1A-NO"));
end
rule "No Step Rule for P3928/1A-NO"
	when
		StepPerformed(stepId=="P3928/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3928/1A-NO"));
end
rule "Yes Step Rule for P3928/1B"
	when
		StepPerformed(stepId=="P3928/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3928/1B"));
end
rule "No Step Rule for P3928/1B"
	when
		StepPerformed(stepId=="P3928/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/2A",$sum.doubleValue() + 100.0,"Answered No to step P3928/1B"));
end
rule "Yes Step Rule for P3928/1B-YES"
	when
		StepPerformed(stepId=="P3928/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3928/1B-YES"));
end
rule "No Step Rule for P3928/1B-YES"
	when
		StepPerformed(stepId=="P3928/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3928/1B-YES"));
end
rule "Yes Step Rule for P3928/1B-NO"
	when
		StepPerformed(stepId=="P3928/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3928/1B-NO"));
end
rule "No Step Rule for P3928/1B-NO"
	when
		StepPerformed(stepId=="P3928/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3928/1B-NO"));
end
rule "Yes Step Rule for P3928/2A"
	when
		StepPerformed(stepId=="P3928/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3928/2A"));
end
rule "No Step Rule for P3928/2A"
	when
		StepPerformed(stepId=="P3928/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3928/2A"));
end
rule "Yes Step Rule for P3928/2A-YES"
	when
		StepPerformed(stepId=="P3928/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3928/2A-YES"));
end
rule "No Step Rule for P3928/2A-YES"
	when
		StepPerformed(stepId=="P3928/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3928/2A-YES"));
end
rule "Yes Step Rule for P3928/2A-NO"
	when
		StepPerformed(stepId=="P3928/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3928/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3928/2A-NO"));
end
rule "No Step Rule for P3928/2A-NO"
	when
		StepPerformed(stepId=="P3928/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3928/2A-NO"));
end
rule "Yes Step Rule for P3929/1A"
	when
		StepPerformed(stepId=="P3929/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3929/1A"));
end
rule "No Step Rule for P3929/1A"
	when
		StepPerformed(stepId=="P3929/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/1B",$sum.doubleValue() + 100.0,"Answered No to step P3929/1A"));
end
rule "Yes Step Rule for P3929/1A-YES"
	when
		StepPerformed(stepId=="P3929/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3929/1A-YES"));
end
rule "No Step Rule for P3929/1A-YES"
	when
		StepPerformed(stepId=="P3929/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3929/1A-YES"));
end
rule "Yes Step Rule for P3929/1A-NO"
	when
		StepPerformed(stepId=="P3929/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3929/1A-NO"));
end
rule "No Step Rule for P3929/1A-NO"
	when
		StepPerformed(stepId=="P3929/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3929/1A-NO"));
end
rule "Yes Step Rule for P3929/1B"
	when
		StepPerformed(stepId=="P3929/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3929/1B"));
end
rule "No Step Rule for P3929/1B"
	when
		StepPerformed(stepId=="P3929/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/2A",$sum.doubleValue() + 100.0,"Answered No to step P3929/1B"));
end
rule "Yes Step Rule for P3929/1B-YES"
	when
		StepPerformed(stepId=="P3929/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3929/1B-YES"));
end
rule "No Step Rule for P3929/1B-YES"
	when
		StepPerformed(stepId=="P3929/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3929/1B-YES"));
end
rule "Yes Step Rule for P3929/1B-NO"
	when
		StepPerformed(stepId=="P3929/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3929/1B-NO"));
end
rule "No Step Rule for P3929/1B-NO"
	when
		StepPerformed(stepId=="P3929/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3929/1B-NO"));
end
rule "Yes Step Rule for P3929/2A"
	when
		StepPerformed(stepId=="P3929/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3929/2A"));
end
rule "No Step Rule for P3929/2A"
	when
		StepPerformed(stepId=="P3929/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3929/2A"));
end
rule "Yes Step Rule for P3929/2A-YES"
	when
		StepPerformed(stepId=="P3929/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3929/2A-YES"));
end
rule "No Step Rule for P3929/2A-YES"
	when
		StepPerformed(stepId=="P3929/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3929/2A-YES"));
end
rule "Yes Step Rule for P3929/2A-NO"
	when
		StepPerformed(stepId=="P3929/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3929/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3929/2A-NO"));
end
rule "No Step Rule for P3929/2A-NO"
	when
		StepPerformed(stepId=="P3929/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3929/2A-NO"));
end
rule "Yes Step Rule for P3931/1A"
	when
		StepPerformed(stepId=="P3931/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3931/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3931/1A"));
end
rule "No Step Rule for P3931/1A"
	when
		StepPerformed(stepId=="P3931/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3931/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3931/1A"));
end
rule "Yes Step Rule for P3931/1A-YES"
	when
		StepPerformed(stepId=="P3931/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3931/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3931/1A-YES"));
end
rule "No Step Rule for P3931/1A-YES"
	when
		StepPerformed(stepId=="P3931/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3931/1A-YES"));
end
rule "Yes Step Rule for P3931/1A-NO"
	when
		StepPerformed(stepId=="P3931/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3931/1A-NO"));
end
rule "No Step Rule for P3931/1A-NO"
	when
		StepPerformed(stepId=="P3931/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3931/1A-NO"));
end
rule "Yes Step Rule for P3931/2A"
	when
		StepPerformed(stepId=="P3931/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3931/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3931/2A"));
end
rule "No Step Rule for P3931/2A"
	when
		StepPerformed(stepId=="P3931/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3931/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3931/2A"));
end
rule "Yes Step Rule for P3931/2A-YES"
	when
		StepPerformed(stepId=="P3931/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3931/2A-YES"));
end
rule "No Step Rule for P3931/2A-YES"
	when
		StepPerformed(stepId=="P3931/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3931/2A-YES"));
end
rule "Yes Step Rule for P3931/2A-NO"
	when
		StepPerformed(stepId=="P3931/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3931/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3931/2A-NO"));
end
rule "No Step Rule for P3931/2A-NO"
	when
		StepPerformed(stepId=="P3931/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3931/2A-NO"));
end
rule "Yes Step Rule for P3932/1A"
	when
		StepPerformed(stepId=="P3932/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3932/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3932/1A"));
end
rule "No Step Rule for P3932/1A"
	when
		StepPerformed(stepId=="P3932/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3932/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3932/1A"));
end
rule "Yes Step Rule for P3932/1A-YES"
	when
		StepPerformed(stepId=="P3932/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3932/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3932/1A-YES"));
end
rule "No Step Rule for P3932/1A-YES"
	when
		StepPerformed(stepId=="P3932/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3932/1A-YES"));
end
rule "Yes Step Rule for P3932/1A-NO"
	when
		StepPerformed(stepId=="P3932/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3932/1A-NO"));
end
rule "No Step Rule for P3932/1A-NO"
	when
		StepPerformed(stepId=="P3932/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3932/1A-NO"));
end
rule "Yes Step Rule for P3932/2A"
	when
		StepPerformed(stepId=="P3932/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3932/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3932/2A"));
end
rule "No Step Rule for P3932/2A"
	when
		StepPerformed(stepId=="P3932/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3932/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3932/2A"));
end
rule "Yes Step Rule for P3932/2A-YES"
	when
		StepPerformed(stepId=="P3932/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3932/2A-YES"));
end
rule "No Step Rule for P3932/2A-YES"
	when
		StepPerformed(stepId=="P3932/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3932/2A-YES"));
end
rule "Yes Step Rule for P3932/2A-NO"
	when
		StepPerformed(stepId=="P3932/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3932/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3932/2A-NO"));
end
rule "No Step Rule for P3932/2A-NO"
	when
		StepPerformed(stepId=="P3932/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3932/2A-NO"));
end
rule "Yes Step Rule for P3933/1A"
	when
		StepPerformed(stepId=="P3933/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3933/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3933/1A"));
end
rule "No Step Rule for P3933/1A"
	when
		StepPerformed(stepId=="P3933/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3933/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3933/1A"));
end
rule "Yes Step Rule for P3933/1A-YES"
	when
		StepPerformed(stepId=="P3933/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3933/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3933/1A-YES"));
end
rule "No Step Rule for P3933/1A-YES"
	when
		StepPerformed(stepId=="P3933/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3933/1A-YES"));
end
rule "Yes Step Rule for P3933/1A-NO"
	when
		StepPerformed(stepId=="P3933/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3933/1A-NO"));
end
rule "No Step Rule for P3933/1A-NO"
	when
		StepPerformed(stepId=="P3933/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3933/1A-NO"));
end
rule "Yes Step Rule for P3933/2A"
	when
		StepPerformed(stepId=="P3933/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3933/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3933/2A"));
end
rule "No Step Rule for P3933/2A"
	when
		StepPerformed(stepId=="P3933/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3933/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3933/2A"));
end
rule "Yes Step Rule for P3933/2A-YES"
	when
		StepPerformed(stepId=="P3933/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3933/2A-YES"));
end
rule "No Step Rule for P3933/2A-YES"
	when
		StepPerformed(stepId=="P3933/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3933/2A-YES"));
end
rule "Yes Step Rule for P3933/2A-NO"
	when
		StepPerformed(stepId=="P3933/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3933/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3933/2A-NO"));
end
rule "No Step Rule for P3933/2A-NO"
	when
		StepPerformed(stepId=="P3933/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3933/2A-NO"));
end
rule "Yes Step Rule for P3934/1A"
	when
		StepPerformed(stepId=="P3934/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3934/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3934/1A"));
end
rule "No Step Rule for P3934/1A"
	when
		StepPerformed(stepId=="P3934/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3934/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3934/1A"));
end
rule "Yes Step Rule for P3934/1A-YES"
	when
		StepPerformed(stepId=="P3934/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3934/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3934/1A-YES"));
end
rule "No Step Rule for P3934/1A-YES"
	when
		StepPerformed(stepId=="P3934/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3934/1A-YES"));
end
rule "Yes Step Rule for P3934/1A-NO"
	when
		StepPerformed(stepId=="P3934/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3934/1A-NO"));
end
rule "No Step Rule for P3934/1A-NO"
	when
		StepPerformed(stepId=="P3934/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3934/1A-NO"));
end
rule "Yes Step Rule for P3934/2A"
	when
		StepPerformed(stepId=="P3934/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3934/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3934/2A"));
end
rule "No Step Rule for P3934/2A"
	when
		StepPerformed(stepId=="P3934/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3934/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3934/2A"));
end
rule "Yes Step Rule for P3934/2A-YES"
	when
		StepPerformed(stepId=="P3934/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3934/2A-YES"));
end
rule "No Step Rule for P3934/2A-YES"
	when
		StepPerformed(stepId=="P3934/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3934/2A-YES"));
end
rule "Yes Step Rule for P3934/2A-NO"
	when
		StepPerformed(stepId=="P3934/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3934/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3934/2A-NO"));
end
rule "No Step Rule for P3934/2A-NO"
	when
		StepPerformed(stepId=="P3934/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3934/2A-NO"));
end
rule "Yes Step Rule for P3935/1A"
	when
		StepPerformed(stepId=="P3935/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3935/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3935/1A"));
end
rule "No Step Rule for P3935/1A"
	when
		StepPerformed(stepId=="P3935/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3935/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3935/1A"));
end
rule "Yes Step Rule for P3935/1A-YES"
	when
		StepPerformed(stepId=="P3935/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3935/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3935/1A-YES"));
end
rule "No Step Rule for P3935/1A-YES"
	when
		StepPerformed(stepId=="P3935/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3935/1A-YES"));
end
rule "Yes Step Rule for P3935/1A-NO"
	when
		StepPerformed(stepId=="P3935/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3935/1A-NO"));
end
rule "No Step Rule for P3935/1A-NO"
	when
		StepPerformed(stepId=="P3935/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3935/1A-NO"));
end
rule "Yes Step Rule for P3935/2A"
	when
		StepPerformed(stepId=="P3935/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3935/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3935/2A"));
end
rule "No Step Rule for P3935/2A"
	when
		StepPerformed(stepId=="P3935/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3935/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3935/2A"));
end
rule "Yes Step Rule for P3935/2A-YES"
	when
		StepPerformed(stepId=="P3935/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3935/2A-YES"));
end
rule "No Step Rule for P3935/2A-YES"
	when
		StepPerformed(stepId=="P3935/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3935/2A-YES"));
end
rule "Yes Step Rule for P3935/2A-NO"
	when
		StepPerformed(stepId=="P3935/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3935/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3935/2A-NO"));
end
rule "No Step Rule for P3935/2A-NO"
	when
		StepPerformed(stepId=="P3935/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3935/2A-NO"));
end
rule "Yes Step Rule for P3936/1A"
	when
		StepPerformed(stepId=="P3936/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3936/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3936/1A"));
end
rule "No Step Rule for P3936/1A"
	when
		StepPerformed(stepId=="P3936/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3936/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3936/1A"));
end
rule "Yes Step Rule for P3936/1A-YES"
	when
		StepPerformed(stepId=="P3936/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3936/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3936/1A-YES"));
end
rule "No Step Rule for P3936/1A-YES"
	when
		StepPerformed(stepId=="P3936/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3936/1A-YES"));
end
rule "Yes Step Rule for P3936/1A-NO"
	when
		StepPerformed(stepId=="P3936/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3936/1A-NO"));
end
rule "No Step Rule for P3936/1A-NO"
	when
		StepPerformed(stepId=="P3936/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3936/1A-NO"));
end
rule "Yes Step Rule for P3936/2A"
	when
		StepPerformed(stepId=="P3936/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3936/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3936/2A"));
end
rule "No Step Rule for P3936/2A"
	when
		StepPerformed(stepId=="P3936/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3936/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3936/2A"));
end
rule "Yes Step Rule for P3936/2A-YES"
	when
		StepPerformed(stepId=="P3936/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3936/2A-YES"));
end
rule "No Step Rule for P3936/2A-YES"
	when
		StepPerformed(stepId=="P3936/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3936/2A-YES"));
end
rule "Yes Step Rule for P3936/2A-NO"
	when
		StepPerformed(stepId=="P3936/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3936/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3936/2A-NO"));
end
rule "No Step Rule for P3936/2A-NO"
	when
		StepPerformed(stepId=="P3936/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3936/2A-NO"));
end
rule "Yes Step Rule for P3937/1A"
	when
		StepPerformed(stepId=="P3937/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/1A"));
end
rule "No Step Rule for P3937/1A"
	when
		StepPerformed(stepId=="P3937/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3937/1A"));
end
rule "Yes Step Rule for P3937/1A-YES"
	when
		StepPerformed(stepId=="P3937/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/1A-YES"));
end
rule "No Step Rule for P3937/1A-YES"
	when
		StepPerformed(stepId=="P3937/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3937/1A-YES"));
end
rule "Yes Step Rule for P3937/1A-NO"
	when
		StepPerformed(stepId=="P3937/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/1A-NO"));
end
rule "No Step Rule for P3937/1A-NO"
	when
		StepPerformed(stepId=="P3937/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3937/1A-NO"));
end
rule "Yes Step Rule for P3937/2A"
	when
		StepPerformed(stepId=="P3937/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/2A"));
end
rule "No Step Rule for P3937/2A"
	when
		StepPerformed(stepId=="P3937/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3937/2A"));
end
rule "Yes Step Rule for P3937/2A-YES"
	when
		StepPerformed(stepId=="P3937/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/2A-YES"));
end
rule "No Step Rule for P3937/2A-YES"
	when
		StepPerformed(stepId=="P3937/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3937/2A-YES"));
end
rule "Yes Step Rule for P3937/2A-NO"
	when
		StepPerformed(stepId=="P3937/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/2A-NO"));
end
rule "No Step Rule for P3937/2A-NO"
	when
		StepPerformed(stepId=="P3937/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3937/2A-NO"));
end
rule "Yes Step Rule for P3937/2B"
	when
		StepPerformed(stepId=="P3937/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/2B"));
end
rule "No Step Rule for P3937/2B"
	when
		StepPerformed(stepId=="P3937/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3937/2B"));
end
rule "Yes Step Rule for P3937/2B-YES"
	when
		StepPerformed(stepId=="P3937/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/2B-YES"));
end
rule "No Step Rule for P3937/2B-YES"
	when
		StepPerformed(stepId=="P3937/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3937/2B-YES"));
end
rule "Yes Step Rule for P3937/2B-NO"
	when
		StepPerformed(stepId=="P3937/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/2B-NO"));
end
rule "No Step Rule for P3937/2B-NO"
	when
		StepPerformed(stepId=="P3937/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3937/2B-NO"));
end
rule "Yes Step Rule for P3937/3A"
	when
		StepPerformed(stepId=="P3937/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/3A"));
end
rule "No Step Rule for P3937/3A"
	when
		StepPerformed(stepId=="P3937/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3937/3A"));
end
rule "Yes Step Rule for P3937/3A-YES"
	when
		StepPerformed(stepId=="P3937/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/3A-YES"));
end
rule "No Step Rule for P3937/3A-YES"
	when
		StepPerformed(stepId=="P3937/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3937/3A-YES"));
end
rule "Yes Step Rule for P3937/3A-NO"
	when
		StepPerformed(stepId=="P3937/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3937/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3937/3A-NO"));
end
rule "No Step Rule for P3937/3A-NO"
	when
		StepPerformed(stepId=="P3937/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3937/3A-NO"));
end
rule "Yes Step Rule for P3941/1A"
	when
		StepPerformed(stepId=="P3941/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3941/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3941/1A"));
end
rule "No Step Rule for P3941/1A"
	when
		StepPerformed(stepId=="P3941/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3941/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3941/1A"));
end
rule "Yes Step Rule for P3941/1A-YES"
	when
		StepPerformed(stepId=="P3941/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3941/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3941/1A-YES"));
end
rule "No Step Rule for P3941/1A-YES"
	when
		StepPerformed(stepId=="P3941/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3941/1A-YES"));
end
rule "Yes Step Rule for P3941/1A-NO"
	when
		StepPerformed(stepId=="P3941/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3941/1A-NO"));
end
rule "No Step Rule for P3941/1A-NO"
	when
		StepPerformed(stepId=="P3941/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3941/1A-NO"));
end
rule "Yes Step Rule for P3941/2A"
	when
		StepPerformed(stepId=="P3941/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3941/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3941/2A"));
end
rule "No Step Rule for P3941/2A"
	when
		StepPerformed(stepId=="P3941/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3941/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3941/2A"));
end
rule "Yes Step Rule for P3941/2A-YES"
	when
		StepPerformed(stepId=="P3941/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3941/2A-YES"));
end
rule "No Step Rule for P3941/2A-YES"
	when
		StepPerformed(stepId=="P3941/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3941/2A-YES"));
end
rule "Yes Step Rule for P3941/2A-NO"
	when
		StepPerformed(stepId=="P3941/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3941/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3941/2A-NO"));
end
rule "No Step Rule for P3941/2A-NO"
	when
		StepPerformed(stepId=="P3941/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3941/2A-NO"));
end
rule "Yes Step Rule for P3950/1A"
	when
		StepPerformed(stepId=="P3950/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3950/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3950/1A"));
end
rule "No Step Rule for P3950/1A"
	when
		StepPerformed(stepId=="P3950/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3950/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3950/1A"));
end
rule "Yes Step Rule for P3950/1A-YES"
	when
		StepPerformed(stepId=="P3950/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3950/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3950/1A-YES"));
end
rule "No Step Rule for P3950/1A-YES"
	when
		StepPerformed(stepId=="P3950/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3950/1A-YES"));
end
rule "Yes Step Rule for P3950/1A-NO"
	when
		StepPerformed(stepId=="P3950/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3950/1A-NO"));
end
rule "No Step Rule for P3950/1A-NO"
	when
		StepPerformed(stepId=="P3950/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3950/1A-NO"));
end
rule "Yes Step Rule for P3950/2A"
	when
		StepPerformed(stepId=="P3950/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3950/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3950/2A"));
end
rule "No Step Rule for P3950/2A"
	when
		StepPerformed(stepId=="P3950/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3950/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3950/2A"));
end
rule "Yes Step Rule for P3950/2A-YES"
	when
		StepPerformed(stepId=="P3950/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3950/2A-YES"));
end
rule "No Step Rule for P3950/2A-YES"
	when
		StepPerformed(stepId=="P3950/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3950/2A-YES"));
end
rule "Yes Step Rule for P3950/2A-NO"
	when
		StepPerformed(stepId=="P3950/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3950/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3950/2A-NO"));
end
rule "No Step Rule for P3950/2A-NO"
	when
		StepPerformed(stepId=="P3950/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3950/2A-NO"));
end
rule "Yes Step Rule for P3958/1A"
	when
		StepPerformed(stepId=="P3958/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3958/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3958/1A"));
end
rule "No Step Rule for P3958/1A"
	when
		StepPerformed(stepId=="P3958/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3958/1B",$sum.doubleValue() + 100.0,"Answered No to step P3958/1A"));
end
rule "Yes Step Rule for P3958/1A-YES"
	when
		StepPerformed(stepId=="P3958/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3958/1A-YES"));
end
rule "No Step Rule for P3958/1A-YES"
	when
		StepPerformed(stepId=="P3958/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3958/1A-YES"));
end
rule "Yes Step Rule for P3958/1A-NO"
	when
		StepPerformed(stepId=="P3958/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3958/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3958/1A-NO"));
end
rule "No Step Rule for P3958/1A-NO"
	when
		StepPerformed(stepId=="P3958/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3958/1A-NO"));
end
rule "Yes Step Rule for P3958/1B"
	when
		StepPerformed(stepId=="P3958/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3958/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3958/1B"));
end
rule "No Step Rule for P3958/1B"
	when
		StepPerformed(stepId=="P3958/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3958/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3958/1B"));
end
rule "Yes Step Rule for P3958/1B-YES"
	when
		StepPerformed(stepId=="P3958/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3958/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3958/1B-YES"));
end
rule "No Step Rule for P3958/1B-YES"
	when
		StepPerformed(stepId=="P3958/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3958/1B-YES"));
end
rule "Yes Step Rule for P3958/1B-NO"
	when
		StepPerformed(stepId=="P3958/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3958/1B-NO"));
end
rule "No Step Rule for P3958/1B-NO"
	when
		StepPerformed(stepId=="P3958/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3958/1B-NO"));
end
rule "Yes Step Rule for P3958/2A"
	when
		StepPerformed(stepId=="P3958/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3958/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3958/2A"));
end
rule "No Step Rule for P3958/2A"
	when
		StepPerformed(stepId=="P3958/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3958/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3958/2A"));
end
rule "Yes Step Rule for P3958/2A-YES"
	when
		StepPerformed(stepId=="P3958/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3958/2A-YES"));
end
rule "No Step Rule for P3958/2A-YES"
	when
		StepPerformed(stepId=="P3958/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3958/2A-YES"));
end
rule "Yes Step Rule for P3958/2A-NO"
	when
		StepPerformed(stepId=="P3958/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3958/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3958/2A-NO"));
end
rule "No Step Rule for P3958/2A-NO"
	when
		StepPerformed(stepId=="P3958/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3958/2A-NO"));
end
rule "Yes Step Rule for P3959/1A"
	when
		StepPerformed(stepId=="P3959/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/1A"));
end
rule "No Step Rule for P3959/1A"
	when
		StepPerformed(stepId=="P3959/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3959/1A"));
end
rule "Yes Step Rule for P3959/1A-YES"
	when
		StepPerformed(stepId=="P3959/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/1A-YES"));
end
rule "No Step Rule for P3959/1A-YES"
	when
		StepPerformed(stepId=="P3959/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3959/1A-YES"));
end
rule "Yes Step Rule for P3959/1A-NO"
	when
		StepPerformed(stepId=="P3959/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/1A-NO"));
end
rule "No Step Rule for P3959/1A-NO"
	when
		StepPerformed(stepId=="P3959/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3959/1A-NO"));
end
rule "Yes Step Rule for P3959/1B"
	when
		StepPerformed(stepId=="P3959/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/1B"));
end
rule "No Step Rule for P3959/1B"
	when
		StepPerformed(stepId=="P3959/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3959/1B"));
end
rule "Yes Step Rule for P3959/1B-YES"
	when
		StepPerformed(stepId=="P3959/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/1B-YES"));
end
rule "No Step Rule for P3959/1B-YES"
	when
		StepPerformed(stepId=="P3959/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3959/1B-YES"));
end
rule "Yes Step Rule for P3959/1B-NO"
	when
		StepPerformed(stepId=="P3959/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/1B-NO"));
end
rule "No Step Rule for P3959/1B-NO"
	when
		StepPerformed(stepId=="P3959/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3959/1B-NO"));
end
rule "Yes Step Rule for P3959/2A"
	when
		StepPerformed(stepId=="P3959/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/2A"));
end
rule "No Step Rule for P3959/2A"
	when
		StepPerformed(stepId=="P3959/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3959/2A"));
end
rule "Yes Step Rule for P3959/2A-YES"
	when
		StepPerformed(stepId=="P3959/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/2A-YES"));
end
rule "No Step Rule for P3959/2A-YES"
	when
		StepPerformed(stepId=="P3959/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3959/2A-YES"));
end
rule "Yes Step Rule for P3959/2A-NO"
	when
		StepPerformed(stepId=="P3959/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/2A-NO"));
end
rule "No Step Rule for P3959/2A-NO"
	when
		StepPerformed(stepId=="P3959/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3959/2A-NO"));
end
rule "Yes Step Rule for P3959/3A"
	when
		StepPerformed(stepId=="P3959/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/3A"));
end
rule "No Step Rule for P3959/3A"
	when
		StepPerformed(stepId=="P3959/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3959/3A"));
end
rule "Yes Step Rule for P3959/3A-YES"
	when
		StepPerformed(stepId=="P3959/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/3A-YES"));
end
rule "No Step Rule for P3959/3A-YES"
	when
		StepPerformed(stepId=="P3959/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3959/3A-YES"));
end
rule "Yes Step Rule for P3959/3A-NO"
	when
		StepPerformed(stepId=="P3959/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3959/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3959/3A-NO"));
end
rule "No Step Rule for P3959/3A-NO"
	when
		StepPerformed(stepId=="P3959/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3959/3A-NO"));
end
rule "Yes Step Rule for P3960/1A"
	when
		StepPerformed(stepId=="P3960/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1A"));
end
rule "No Step Rule for P3960/1A"
	when
		StepPerformed(stepId=="P3960/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1B",$sum.doubleValue() + 100.0,"Answered No to step P3960/1A"));
end
rule "Yes Step Rule for P3960/1A-YES"
	when
		StepPerformed(stepId=="P3960/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1A-YES"));
end
rule "No Step Rule for P3960/1A-YES"
	when
		StepPerformed(stepId=="P3960/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/1A-YES"));
end
rule "Yes Step Rule for P3960/1A-NO"
	when
		StepPerformed(stepId=="P3960/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1A-NO"));
end
rule "No Step Rule for P3960/1A-NO"
	when
		StepPerformed(stepId=="P3960/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/1A-NO"));
end
rule "Yes Step Rule for P3960/1B"
	when
		StepPerformed(stepId=="P3960/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1B"));
end
rule "No Step Rule for P3960/1B"
	when
		StepPerformed(stepId=="P3960/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3960/1B"));
end
rule "Yes Step Rule for P3960/1B-YES"
	when
		StepPerformed(stepId=="P3960/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1B-YES"));
end
rule "No Step Rule for P3960/1B-YES"
	when
		StepPerformed(stepId=="P3960/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/1B-YES"));
end
rule "Yes Step Rule for P3960/1B-NO"
	when
		StepPerformed(stepId=="P3960/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1B-NO"));
end
rule "No Step Rule for P3960/1B-NO"
	when
		StepPerformed(stepId=="P3960/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/1B-NO"));
end
rule "Yes Step Rule for P3960/1C"
	when
		StepPerformed(stepId=="P3960/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1C"));
end
rule "No Step Rule for P3960/1C"
	when
		StepPerformed(stepId=="P3960/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3960/1C"));
end
rule "Yes Step Rule for P3960/1C-YES"
	when
		StepPerformed(stepId=="P3960/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1C-YES"));
end
rule "No Step Rule for P3960/1C-YES"
	when
		StepPerformed(stepId=="P3960/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/1C-YES"));
end
rule "Yes Step Rule for P3960/1C-NO"
	when
		StepPerformed(stepId=="P3960/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1C-NO"));
end
rule "No Step Rule for P3960/1C-NO"
	when
		StepPerformed(stepId=="P3960/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/1C-NO"));
end
rule "Yes Step Rule for P3960/1D"
	when
		StepPerformed(stepId=="P3960/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1D"));
end
rule "No Step Rule for P3960/1D"
	when
		StepPerformed(stepId=="P3960/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1D-NO",$sum.doubleValue() + 100.0,"Answered No to step P3960/1D"));
end
rule "Yes Step Rule for P3960/1D-YES"
	when
		StepPerformed(stepId=="P3960/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1D-YES"));
end
rule "No Step Rule for P3960/1D-YES"
	when
		StepPerformed(stepId=="P3960/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/1D-YES"));
end
rule "Yes Step Rule for P3960/1D-NO"
	when
		StepPerformed(stepId=="P3960/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/1D-NO"));
end
rule "No Step Rule for P3960/1D-NO"
	when
		StepPerformed(stepId=="P3960/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/1D-NO"));
end
rule "Yes Step Rule for P3960/2A"
	when
		StepPerformed(stepId=="P3960/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/2A"));
end
rule "No Step Rule for P3960/2A"
	when
		StepPerformed(stepId=="P3960/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3960/2A"));
end
rule "Yes Step Rule for P3960/2A-YES"
	when
		StepPerformed(stepId=="P3960/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/2A-YES"));
end
rule "No Step Rule for P3960/2A-YES"
	when
		StepPerformed(stepId=="P3960/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/2A-YES"));
end
rule "Yes Step Rule for P3960/2A-NO"
	when
		StepPerformed(stepId=="P3960/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3960/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3960/2A-NO"));
end
rule "No Step Rule for P3960/2A-NO"
	when
		StepPerformed(stepId=="P3960/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3960/2A-NO"));
end
rule "Yes Step Rule for P3961/1A"
	when
		StepPerformed(stepId=="P3961/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/1A"));
end
rule "No Step Rule for P3961/1A"
	when
		StepPerformed(stepId=="P3961/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/1B",$sum.doubleValue() + 100.0,"Answered No to step P3961/1A"));
end
rule "Yes Step Rule for P3961/1A-YES"
	when
		StepPerformed(stepId=="P3961/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/1A-YES"));
end
rule "No Step Rule for P3961/1A-YES"
	when
		StepPerformed(stepId=="P3961/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3961/1A-YES"));
end
rule "Yes Step Rule for P3961/1A-NO"
	when
		StepPerformed(stepId=="P3961/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/1A-NO"));
end
rule "No Step Rule for P3961/1A-NO"
	when
		StepPerformed(stepId=="P3961/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3961/1A-NO"));
end
rule "Yes Step Rule for P3961/1B"
	when
		StepPerformed(stepId=="P3961/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/1B"));
end
rule "No Step Rule for P3961/1B"
	when
		StepPerformed(stepId=="P3961/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/1C",$sum.doubleValue() + 100.0,"Answered No to step P3961/1B"));
end
rule "Yes Step Rule for P3961/1B-YES"
	when
		StepPerformed(stepId=="P3961/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/1B-YES"));
end
rule "No Step Rule for P3961/1B-YES"
	when
		StepPerformed(stepId=="P3961/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3961/1B-YES"));
end
rule "Yes Step Rule for P3961/1B-NO"
	when
		StepPerformed(stepId=="P3961/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/1B-NO"));
end
rule "No Step Rule for P3961/1B-NO"
	when
		StepPerformed(stepId=="P3961/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3961/1B-NO"));
end
rule "Yes Step Rule for P3961/1C"
	when
		StepPerformed(stepId=="P3961/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/1C"));
end
rule "No Step Rule for P3961/1C"
	when
		StepPerformed(stepId=="P3961/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/1C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3961/1C"));
end
rule "Yes Step Rule for P3961/1C-YES"
	when
		StepPerformed(stepId=="P3961/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/1C-YES"));
end
rule "No Step Rule for P3961/1C-YES"
	when
		StepPerformed(stepId=="P3961/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3961/1C-YES"));
end
rule "Yes Step Rule for P3961/1C-NO"
	when
		StepPerformed(stepId=="P3961/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/1C-NO"));
end
rule "No Step Rule for P3961/1C-NO"
	when
		StepPerformed(stepId=="P3961/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3961/1C-NO"));
end
rule "Yes Step Rule for P3961/2A"
	when
		StepPerformed(stepId=="P3961/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/2A"));
end
rule "No Step Rule for P3961/2A"
	when
		StepPerformed(stepId=="P3961/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3961/2A"));
end
rule "Yes Step Rule for P3961/2A-YES"
	when
		StepPerformed(stepId=="P3961/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/2A-YES"));
end
rule "No Step Rule for P3961/2A-YES"
	when
		StepPerformed(stepId=="P3961/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3961/2A-YES"));
end
rule "Yes Step Rule for P3961/2A-NO"
	when
		StepPerformed(stepId=="P3961/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3961/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3961/2A-NO"));
end
rule "No Step Rule for P3961/2A-NO"
	when
		StepPerformed(stepId=="P3961/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3961/2A-NO"));
end
rule "Yes Step Rule for P3962/1A"
	when
		StepPerformed(stepId=="P3962/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/1A"));
end
rule "No Step Rule for P3962/1A"
	when
		StepPerformed(stepId=="P3962/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/1B",$sum.doubleValue() + 100.0,"Answered No to step P3962/1A"));
end
rule "Yes Step Rule for P3962/1A-YES"
	when
		StepPerformed(stepId=="P3962/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/1A-YES"));
end
rule "No Step Rule for P3962/1A-YES"
	when
		StepPerformed(stepId=="P3962/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3962/1A-YES"));
end
rule "Yes Step Rule for P3962/1A-NO"
	when
		StepPerformed(stepId=="P3962/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/1A-NO"));
end
rule "No Step Rule for P3962/1A-NO"
	when
		StepPerformed(stepId=="P3962/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3962/1A-NO"));
end
rule "Yes Step Rule for P3962/1B"
	when
		StepPerformed(stepId=="P3962/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/1B"));
end
rule "No Step Rule for P3962/1B"
	when
		StepPerformed(stepId=="P3962/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/1C",$sum.doubleValue() + 100.0,"Answered No to step P3962/1B"));
end
rule "Yes Step Rule for P3962/1B-YES"
	when
		StepPerformed(stepId=="P3962/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/1B-YES"));
end
rule "No Step Rule for P3962/1B-YES"
	when
		StepPerformed(stepId=="P3962/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3962/1B-YES"));
end
rule "Yes Step Rule for P3962/1B-NO"
	when
		StepPerformed(stepId=="P3962/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/1C",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/1B-NO"));
end
rule "No Step Rule for P3962/1B-NO"
	when
		StepPerformed(stepId=="P3962/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3962/1B-NO"));
end
rule "Yes Step Rule for P3962/1C"
	when
		StepPerformed(stepId=="P3962/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/1C"));
end
rule "No Step Rule for P3962/1C"
	when
		StepPerformed(stepId=="P3962/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/1C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3962/1C"));
end
rule "Yes Step Rule for P3962/1C-YES"
	when
		StepPerformed(stepId=="P3962/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/1C-YES"));
end
rule "No Step Rule for P3962/1C-YES"
	when
		StepPerformed(stepId=="P3962/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3962/1C-YES"));
end
rule "Yes Step Rule for P3962/1C-NO"
	when
		StepPerformed(stepId=="P3962/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/1C-NO"));
end
rule "No Step Rule for P3962/1C-NO"
	when
		StepPerformed(stepId=="P3962/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3962/1C-NO"));
end
rule "Yes Step Rule for P3962/2A"
	when
		StepPerformed(stepId=="P3962/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/2A"));
end
rule "No Step Rule for P3962/2A"
	when
		StepPerformed(stepId=="P3962/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3962/2A"));
end
rule "Yes Step Rule for P3962/2A-YES"
	when
		StepPerformed(stepId=="P3962/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/2A-YES"));
end
rule "No Step Rule for P3962/2A-YES"
	when
		StepPerformed(stepId=="P3962/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3962/2A-YES"));
end
rule "Yes Step Rule for P3962/2A-NO"
	when
		StepPerformed(stepId=="P3962/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3962/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3962/2A-NO"));
end
rule "No Step Rule for P3962/2A-NO"
	when
		StepPerformed(stepId=="P3962/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3962/2A-NO"));
end
rule "Yes Step Rule for P3963/1A"
	when
		StepPerformed(stepId=="P3963/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/1A"));
end
rule "No Step Rule for P3963/1A"
	when
		StepPerformed(stepId=="P3963/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3963/1A"));
end
rule "Yes Step Rule for P3963/1A-YES"
	when
		StepPerformed(stepId=="P3963/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/1A-YES"));
end
rule "No Step Rule for P3963/1A-YES"
	when
		StepPerformed(stepId=="P3963/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3963/1A-YES"));
end
rule "Yes Step Rule for P3963/1A-NO"
	when
		StepPerformed(stepId=="P3963/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/1A-NO"));
end
rule "No Step Rule for P3963/1A-NO"
	when
		StepPerformed(stepId=="P3963/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3963/1A-NO"));
end
rule "Yes Step Rule for P3963/2A"
	when
		StepPerformed(stepId=="P3963/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/2A"));
end
rule "No Step Rule for P3963/2A"
	when
		StepPerformed(stepId=="P3963/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3963/2A"));
end
rule "Yes Step Rule for P3963/2A-YES"
	when
		StepPerformed(stepId=="P3963/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/2A-YES"));
end
rule "No Step Rule for P3963/2A-YES"
	when
		StepPerformed(stepId=="P3963/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3963/2A-YES"));
end
rule "Yes Step Rule for P3963/2A-NO"
	when
		StepPerformed(stepId=="P3963/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/2A-NO"));
end
rule "No Step Rule for P3963/2A-NO"
	when
		StepPerformed(stepId=="P3963/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3963/2A-NO"));
end
rule "Yes Step Rule for P3963/2B"
	when
		StepPerformed(stepId=="P3963/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/2B"));
end
rule "No Step Rule for P3963/2B"
	when
		StepPerformed(stepId=="P3963/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/3A",$sum.doubleValue() + 100.0,"Answered No to step P3963/2B"));
end
rule "Yes Step Rule for P3963/2B-YES"
	when
		StepPerformed(stepId=="P3963/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/2B-YES"));
end
rule "No Step Rule for P3963/2B-YES"
	when
		StepPerformed(stepId=="P3963/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3963/2B-YES"));
end
rule "Yes Step Rule for P3963/2B-NO"
	when
		StepPerformed(stepId=="P3963/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/2B-NO"));
end
rule "No Step Rule for P3963/2B-NO"
	when
		StepPerformed(stepId=="P3963/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3963/2B-NO"));
end
rule "Yes Step Rule for P3963/3A"
	when
		StepPerformed(stepId=="P3963/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/3A"));
end
rule "No Step Rule for P3963/3A"
	when
		StepPerformed(stepId=="P3963/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3963/3A"));
end
rule "Yes Step Rule for P3963/3A-YES"
	when
		StepPerformed(stepId=="P3963/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/3A-YES"));
end
rule "No Step Rule for P3963/3A-YES"
	when
		StepPerformed(stepId=="P3963/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3963/3A-YES"));
end
rule "Yes Step Rule for P3963/3A-NO"
	when
		StepPerformed(stepId=="P3963/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3963/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3963/3A-NO"));
end
rule "No Step Rule for P3963/3A-NO"
	when
		StepPerformed(stepId=="P3963/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3963/3A-NO"));
end
rule "Yes Step Rule for P3966/1A"
	when
		StepPerformed(stepId=="P3966/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3966/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3966/1A"));
end
rule "No Step Rule for P3966/1A"
	when
		StepPerformed(stepId=="P3966/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3966/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3966/1A"));
end
rule "Yes Step Rule for P3966/1A-YES"
	when
		StepPerformed(stepId=="P3966/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3966/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3966/1A-YES"));
end
rule "No Step Rule for P3966/1A-YES"
	when
		StepPerformed(stepId=="P3966/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3966/1A-YES"));
end
rule "Yes Step Rule for P3966/1A-NO"
	when
		StepPerformed(stepId=="P3966/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3966/1A-NO"));
end
rule "No Step Rule for P3966/1A-NO"
	when
		StepPerformed(stepId=="P3966/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3966/1A-NO"));
end
rule "Yes Step Rule for P3966/2A"
	when
		StepPerformed(stepId=="P3966/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3966/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3966/2A"));
end
rule "No Step Rule for P3966/2A"
	when
		StepPerformed(stepId=="P3966/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3966/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3966/2A"));
end
rule "Yes Step Rule for P3966/2A-YES"
	when
		StepPerformed(stepId=="P3966/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3966/2A-YES"));
end
rule "No Step Rule for P3966/2A-YES"
	when
		StepPerformed(stepId=="P3966/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3966/2A-YES"));
end
rule "Yes Step Rule for P3966/2A-NO"
	when
		StepPerformed(stepId=="P3966/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3966/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3966/2A-NO"));
end
rule "No Step Rule for P3966/2A-NO"
	when
		StepPerformed(stepId=="P3966/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3966/2A-NO"));
end
rule "Yes Step Rule for P3968/1A"
	when
		StepPerformed(stepId=="P3968/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3968/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3968/1A"));
end
rule "No Step Rule for P3968/1A"
	when
		StepPerformed(stepId=="P3968/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3968/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3968/1A"));
end
rule "Yes Step Rule for P3968/1A-YES"
	when
		StepPerformed(stepId=="P3968/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3968/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3968/1A-YES"));
end
rule "No Step Rule for P3968/1A-YES"
	when
		StepPerformed(stepId=="P3968/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3968/1A-YES"));
end
rule "Yes Step Rule for P3968/1A-NO"
	when
		StepPerformed(stepId=="P3968/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3968/1A-NO"));
end
rule "No Step Rule for P3968/1A-NO"
	when
		StepPerformed(stepId=="P3968/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3968/1A-NO"));
end
rule "Yes Step Rule for P3968/2A"
	when
		StepPerformed(stepId=="P3968/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3968/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3968/2A"));
end
rule "No Step Rule for P3968/2A"
	when
		StepPerformed(stepId=="P3968/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3968/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3968/2A"));
end
rule "Yes Step Rule for P3968/2A-YES"
	when
		StepPerformed(stepId=="P3968/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3968/2A-YES"));
end
rule "No Step Rule for P3968/2A-YES"
	when
		StepPerformed(stepId=="P3968/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3968/2A-YES"));
end
rule "Yes Step Rule for P3968/2A-NO"
	when
		StepPerformed(stepId=="P3968/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3968/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3968/2A-NO"));
end
rule "No Step Rule for P3968/2A-NO"
	when
		StepPerformed(stepId=="P3968/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3968/2A-NO"));
end
rule "Yes Step Rule for P3996/1A"
	when
		StepPerformed(stepId=="P3996/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/1A"));
end
rule "No Step Rule for P3996/1A"
	when
		StepPerformed(stepId=="P3996/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/3A",$sum.doubleValue() + 100.0,"Answered No to step P3996/1A"));
end
rule "Yes Step Rule for P3996/1A-YES"
	when
		StepPerformed(stepId=="P3996/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/1A-YES"));
end
rule "No Step Rule for P3996/1A-YES"
	when
		StepPerformed(stepId=="P3996/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/1A-YES"));
end
rule "Yes Step Rule for P3996/1A-NO"
	when
		StepPerformed(stepId=="P3996/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/1A-NO"));
end
rule "No Step Rule for P3996/1A-NO"
	when
		StepPerformed(stepId=="P3996/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/1A-NO"));
end
rule "Yes Step Rule for P3996/2A"
	when
		StepPerformed(stepId=="P3996/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/2A"));
end
rule "No Step Rule for P3996/2A"
	when
		StepPerformed(stepId=="P3996/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3996/2A"));
end
rule "Yes Step Rule for P3996/2A-YES"
	when
		StepPerformed(stepId=="P3996/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/2A-YES"));
end
rule "No Step Rule for P3996/2A-YES"
	when
		StepPerformed(stepId=="P3996/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/2A-YES"));
end
rule "Yes Step Rule for P3996/2A-NO"
	when
		StepPerformed(stepId=="P3996/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2B",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/2A-NO"));
end
rule "No Step Rule for P3996/2A-NO"
	when
		StepPerformed(stepId=="P3996/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/2A-NO"));
end
rule "Yes Step Rule for P3996/2B"
	when
		StepPerformed(stepId=="P3996/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/2B"));
end
rule "No Step Rule for P3996/2B"
	when
		StepPerformed(stepId=="P3996/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3996/2B"));
end
rule "Yes Step Rule for P3996/2B-YES"
	when
		StepPerformed(stepId=="P3996/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2C",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/2B-YES"));
end
rule "No Step Rule for P3996/2B-YES"
	when
		StepPerformed(stepId=="P3996/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/2B-YES"));
end
rule "Yes Step Rule for P3996/2B-NO"
	when
		StepPerformed(stepId=="P3996/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/2B-NO"));
end
rule "No Step Rule for P3996/2B-NO"
	when
		StepPerformed(stepId=="P3996/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/2B-NO"));
end
rule "Yes Step Rule for P3996/2C"
	when
		StepPerformed(stepId=="P3996/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/2C"));
end
rule "No Step Rule for P3996/2C"
	when
		StepPerformed(stepId=="P3996/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step P3996/2C"));
end
rule "Yes Step Rule for P3996/2C-YES"
	when
		StepPerformed(stepId=="P3996/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/2C-YES"));
end
rule "No Step Rule for P3996/2C-YES"
	when
		StepPerformed(stepId=="P3996/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/2C-YES"));
end
rule "Yes Step Rule for P3996/2C-NO"
	when
		StepPerformed(stepId=="P3996/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/3A",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/2C-NO"));
end
rule "No Step Rule for P3996/2C-NO"
	when
		StepPerformed(stepId=="P3996/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/2C-NO"));
end
rule "Yes Step Rule for P3996/3A"
	when
		StepPerformed(stepId=="P3996/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/3A"));
end
rule "No Step Rule for P3996/3A"
	when
		StepPerformed(stepId=="P3996/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3996/3A"));
end
rule "Yes Step Rule for P3996/3A-YES"
	when
		StepPerformed(stepId=="P3996/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/3A-YES"));
end
rule "No Step Rule for P3996/3A-YES"
	when
		StepPerformed(stepId=="P3996/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/3A-YES"));
end
rule "Yes Step Rule for P3996/3A-NO"
	when
		StepPerformed(stepId=="P3996/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3996/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3996/3A-NO"));
end
rule "No Step Rule for P3996/3A-NO"
	when
		StepPerformed(stepId=="P3996/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3996/3A-NO"));
end
rule "Yes Step Rule for P3999/1A"
	when
		StepPerformed(stepId=="P3999/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3999/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3999/1A"));
end
rule "No Step Rule for P3999/1A"
	when
		StepPerformed(stepId=="P3999/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3999/1B",$sum.doubleValue() + 100.0,"Answered No to step P3999/1A"));
end
rule "Yes Step Rule for P3999/1A-YES"
	when
		StepPerformed(stepId=="P3999/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3999/1A-YES"));
end
rule "No Step Rule for P3999/1A-YES"
	when
		StepPerformed(stepId=="P3999/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3999/1A-YES"));
end
rule "Yes Step Rule for P3999/1A-NO"
	when
		StepPerformed(stepId=="P3999/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3999/1B",$sum.doubleValue() + 100.0,"Answered Yes to step P3999/1A-NO"));
end
rule "No Step Rule for P3999/1A-NO"
	when
		StepPerformed(stepId=="P3999/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3999/1A-NO"));
end
rule "Yes Step Rule for P3999/1B"
	when
		StepPerformed(stepId=="P3999/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3999/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3999/1B"));
end
rule "No Step Rule for P3999/1B"
	when
		StepPerformed(stepId=="P3999/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3999/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step P3999/1B"));
end
rule "Yes Step Rule for P3999/1B-YES"
	when
		StepPerformed(stepId=="P3999/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3999/2A",$sum.doubleValue() + 100.0,"Answered Yes to step P3999/1B-YES"));
end
rule "No Step Rule for P3999/1B-YES"
	when
		StepPerformed(stepId=="P3999/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3999/1B-YES"));
end
rule "Yes Step Rule for P3999/1B-NO"
	when
		StepPerformed(stepId=="P3999/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step P3999/1B-NO"));
end
rule "No Step Rule for P3999/1B-NO"
	when
		StepPerformed(stepId=="P3999/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3999/1B-NO"));
end
rule "Yes Step Rule for P3999/2A"
	when
		StepPerformed(stepId=="P3999/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3999/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step P3999/2A"));
end
rule "No Step Rule for P3999/2A"
	when
		StepPerformed(stepId=="P3999/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3999/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step P3999/2A"));
end
rule "Yes Step Rule for P3999/2A-YES"
	when
		StepPerformed(stepId=="P3999/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step P3999/2A-YES"));
end
rule "No Step Rule for P3999/2A-YES"
	when
		StepPerformed(stepId=="P3999/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3999/2A-YES"));
end
rule "Yes Step Rule for P3999/2A-NO"
	when
		StepPerformed(stepId=="P3999/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("P3999/1A",$sum.doubleValue() + 100.0,"Answered Yes to step P3999/2A-NO"));
end
rule "No Step Rule for P3999/2A-NO"
	when
		StepPerformed(stepId=="P3999/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step P3999/2A-NO"));
end
rule "Yes Step Rule for U1011/1A"
	when
		StepPerformed(stepId=="U1011/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/1A"));
end
rule "No Step Rule for U1011/1A"
	when
		StepPerformed(stepId=="U1011/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/1A"));
end
rule "Yes Step Rule for U1011/1A-YES"
	when
		StepPerformed(stepId=="U1011/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/1A-YES"));
end
rule "No Step Rule for U1011/1A-YES"
	when
		StepPerformed(stepId=="U1011/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/1A-YES"));
end
rule "Yes Step Rule for U1011/1A-NO"
	when
		StepPerformed(stepId=="U1011/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/1A-NO"));
end
rule "No Step Rule for U1011/1A-NO"
	when
		StepPerformed(stepId=="U1011/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/1A-NO"));
end
rule "Yes Step Rule for U1011/2A"
	when
		StepPerformed(stepId=="U1011/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2B",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2A"));
end
rule "No Step Rule for U1011/2A"
	when
		StepPerformed(stepId=="U1011/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2C",$sum.doubleValue() + 100.0,"Answered No to step U1011/2A"));
end
rule "Yes Step Rule for U1011/2A-YES"
	when
		StepPerformed(stepId=="U1011/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2B",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2A-YES"));
end
rule "No Step Rule for U1011/2A-YES"
	when
		StepPerformed(stepId=="U1011/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/2A-YES"));
end
rule "Yes Step Rule for U1011/2A-NO"
	when
		StepPerformed(stepId=="U1011/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2C",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2A-NO"));
end
rule "No Step Rule for U1011/2A-NO"
	when
		StepPerformed(stepId=="U1011/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/2A-NO"));
end
rule "Yes Step Rule for U1011/2B"
	when
		StepPerformed(stepId=="U1011/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2B"));
end
rule "No Step Rule for U1011/2B"
	when
		StepPerformed(stepId=="U1011/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/2B"));
end
rule "Yes Step Rule for U1011/2B-YES"
	when
		StepPerformed(stepId=="U1011/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2B-YES"));
end
rule "No Step Rule for U1011/2B-YES"
	when
		StepPerformed(stepId=="U1011/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/2B-YES"));
end
rule "Yes Step Rule for U1011/2B-NO"
	when
		StepPerformed(stepId=="U1011/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2B-NO"));
end
rule "No Step Rule for U1011/2B-NO"
	when
		StepPerformed(stepId=="U1011/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/2B-NO"));
end
rule "Yes Step Rule for U1011/2C"
	when
		StepPerformed(stepId=="U1011/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2C"));
end
rule "No Step Rule for U1011/2C"
	when
		StepPerformed(stepId=="U1011/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/2C"));
end
rule "Yes Step Rule for U1011/2C-YES"
	when
		StepPerformed(stepId=="U1011/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2C-YES"));
end
rule "No Step Rule for U1011/2C-YES"
	when
		StepPerformed(stepId=="U1011/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/2C-YES"));
end
rule "Yes Step Rule for U1011/2C-NO"
	when
		StepPerformed(stepId=="U1011/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2D",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2C-NO"));
end
rule "No Step Rule for U1011/2C-NO"
	when
		StepPerformed(stepId=="U1011/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/2C-NO"));
end
rule "Yes Step Rule for U1011/2D"
	when
		StepPerformed(stepId=="U1011/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2D"));
end
rule "No Step Rule for U1011/2D"
	when
		StepPerformed(stepId=="U1011/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered No to step U1011/2D"));
end
rule "Yes Step Rule for U1011/2D-YES"
	when
		StepPerformed(stepId=="U1011/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2D-YES"));
end
rule "No Step Rule for U1011/2D-YES"
	when
		StepPerformed(stepId=="U1011/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/2D-YES"));
end
rule "Yes Step Rule for U1011/2D-NO"
	when
		StepPerformed(stepId=="U1011/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/2D-NO"));
end
rule "No Step Rule for U1011/2D-NO"
	when
		StepPerformed(stepId=="U1011/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/2D-NO"));
end
rule "Yes Step Rule for U1011/3A"
	when
		StepPerformed(stepId=="U1011/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3A"));
end
rule "No Step Rule for U1011/3A"
	when
		StepPerformed(stepId=="U1011/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3B",$sum.doubleValue() + 100.0,"Answered No to step U1011/3A"));
end
rule "Yes Step Rule for U1011/3A-YES"
	when
		StepPerformed(stepId=="U1011/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3I",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3A-YES"));
end
rule "No Step Rule for U1011/3A-YES"
	when
		StepPerformed(stepId=="U1011/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3A-YES"));
end
rule "Yes Step Rule for U1011/3A-NO"
	when
		StepPerformed(stepId=="U1011/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3B",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3A-NO"));
end
rule "No Step Rule for U1011/3A-NO"
	when
		StepPerformed(stepId=="U1011/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3A-NO"));
end
rule "Yes Step Rule for U1011/3B"
	when
		StepPerformed(stepId=="U1011/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3B"));
end
rule "No Step Rule for U1011/3B"
	when
		StepPerformed(stepId=="U1011/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/3B"));
end
rule "Yes Step Rule for U1011/3B-YES"
	when
		StepPerformed(stepId=="U1011/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3B-YES"));
end
rule "No Step Rule for U1011/3B-YES"
	when
		StepPerformed(stepId=="U1011/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3B-YES"));
end
rule "Yes Step Rule for U1011/3B-NO"
	when
		StepPerformed(stepId=="U1011/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3C",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3B-NO"));
end
rule "No Step Rule for U1011/3B-NO"
	when
		StepPerformed(stepId=="U1011/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3B-NO"));
end
rule "Yes Step Rule for U1011/3C"
	when
		StepPerformed(stepId=="U1011/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3C"));
end
rule "No Step Rule for U1011/3C"
	when
		StepPerformed(stepId=="U1011/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3D",$sum.doubleValue() + 100.0,"Answered No to step U1011/3C"));
end
rule "Yes Step Rule for U1011/3C-YES"
	when
		StepPerformed(stepId=="U1011/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3I",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3C-YES"));
end
rule "No Step Rule for U1011/3C-YES"
	when
		StepPerformed(stepId=="U1011/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3C-YES"));
end
rule "Yes Step Rule for U1011/3C-NO"
	when
		StepPerformed(stepId=="U1011/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3D",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3C-NO"));
end
rule "No Step Rule for U1011/3C-NO"
	when
		StepPerformed(stepId=="U1011/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3C-NO"));
end
rule "Yes Step Rule for U1011/3D"
	when
		StepPerformed(stepId=="U1011/3D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3D"));
end
rule "No Step Rule for U1011/3D"
	when
		StepPerformed(stepId=="U1011/3D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3D-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/3D"));
end
rule "Yes Step Rule for U1011/3D-YES"
	when
		StepPerformed(stepId=="U1011/3D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3D-YES"));
end
rule "No Step Rule for U1011/3D-YES"
	when
		StepPerformed(stepId=="U1011/3D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3D-YES"));
end
rule "Yes Step Rule for U1011/3D-NO"
	when
		StepPerformed(stepId=="U1011/3D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3E",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3D-NO"));
end
rule "No Step Rule for U1011/3D-NO"
	when
		StepPerformed(stepId=="U1011/3D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3D-NO"));
end
rule "Yes Step Rule for U1011/3E"
	when
		StepPerformed(stepId=="U1011/3E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3E"));
end
rule "No Step Rule for U1011/3E"
	when
		StepPerformed(stepId=="U1011/3E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3F",$sum.doubleValue() + 100.0,"Answered No to step U1011/3E"));
end
rule "Yes Step Rule for U1011/3E-YES"
	when
		StepPerformed(stepId=="U1011/3E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3I",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3E-YES"));
end
rule "No Step Rule for U1011/3E-YES"
	when
		StepPerformed(stepId=="U1011/3E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3E-YES"));
end
rule "Yes Step Rule for U1011/3E-NO"
	when
		StepPerformed(stepId=="U1011/3E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3F",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3E-NO"));
end
rule "No Step Rule for U1011/3E-NO"
	when
		StepPerformed(stepId=="U1011/3E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3E-NO"));
end
rule "Yes Step Rule for U1011/3F"
	when
		StepPerformed(stepId=="U1011/3F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3F"));
end
rule "No Step Rule for U1011/3F"
	when
		StepPerformed(stepId=="U1011/3F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3F-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/3F"));
end
rule "Yes Step Rule for U1011/3F-YES"
	when
		StepPerformed(stepId=="U1011/3F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3F-YES"));
end
rule "No Step Rule for U1011/3F-YES"
	when
		StepPerformed(stepId=="U1011/3F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3F-YES"));
end
rule "Yes Step Rule for U1011/3F-NO"
	when
		StepPerformed(stepId=="U1011/3F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3G",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3F-NO"));
end
rule "No Step Rule for U1011/3F-NO"
	when
		StepPerformed(stepId=="U1011/3F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3F-NO"));
end
rule "Yes Step Rule for U1011/3G"
	when
		StepPerformed(stepId=="U1011/3G", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3G-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3G"));
end
rule "No Step Rule for U1011/3G"
	when
		StepPerformed(stepId=="U1011/3G", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3H",$sum.doubleValue() + 100.0,"Answered No to step U1011/3G"));
end
rule "Yes Step Rule for U1011/3G-YES"
	when
		StepPerformed(stepId=="U1011/3G-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3I",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3G-YES"));
end
rule "No Step Rule for U1011/3G-YES"
	when
		StepPerformed(stepId=="U1011/3G-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3G-YES"));
end
rule "Yes Step Rule for U1011/3G-NO"
	when
		StepPerformed(stepId=="U1011/3G-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3H",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3G-NO"));
end
rule "No Step Rule for U1011/3G-NO"
	when
		StepPerformed(stepId=="U1011/3G-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3G-NO"));
end
rule "Yes Step Rule for U1011/3H"
	when
		StepPerformed(stepId=="U1011/3H", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3H-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3H"));
end
rule "No Step Rule for U1011/3H"
	when
		StepPerformed(stepId=="U1011/3H", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3H-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/3H"));
end
rule "Yes Step Rule for U1011/3H-YES"
	when
		StepPerformed(stepId=="U1011/3H-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3H-YES"));
end
rule "No Step Rule for U1011/3H-YES"
	when
		StepPerformed(stepId=="U1011/3H-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3H-YES"));
end
rule "Yes Step Rule for U1011/3H-NO"
	when
		StepPerformed(stepId=="U1011/3H-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3J",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3H-NO"));
end
rule "No Step Rule for U1011/3H-NO"
	when
		StepPerformed(stepId=="U1011/3H-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3H-NO"));
end
rule "Yes Step Rule for U1011/3I"
	when
		StepPerformed(stepId=="U1011/3I", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3I-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3I"));
end
rule "No Step Rule for U1011/3I"
	when
		StepPerformed(stepId=="U1011/3I", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3I-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/3I"));
end
rule "Yes Step Rule for U1011/3I-YES"
	when
		StepPerformed(stepId=="U1011/3I-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3I-YES"));
end
rule "No Step Rule for U1011/3I-YES"
	when
		StepPerformed(stepId=="U1011/3I-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3I-YES"));
end
rule "Yes Step Rule for U1011/3I-NO"
	when
		StepPerformed(stepId=="U1011/3I-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3I-NO"));
end
rule "No Step Rule for U1011/3I-NO"
	when
		StepPerformed(stepId=="U1011/3I-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3I-NO"));
end
rule "Yes Step Rule for U1011/3J"
	when
		StepPerformed(stepId=="U1011/3J", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3J-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3J"));
end
rule "No Step Rule for U1011/3J"
	when
		StepPerformed(stepId=="U1011/3J", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3K",$sum.doubleValue() + 100.0,"Answered No to step U1011/3J"));
end
rule "Yes Step Rule for U1011/3J-YES"
	when
		StepPerformed(stepId=="U1011/3J-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3J-YES"));
end
rule "No Step Rule for U1011/3J-YES"
	when
		StepPerformed(stepId=="U1011/3J-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3J-YES"));
end
rule "Yes Step Rule for U1011/3J-NO"
	when
		StepPerformed(stepId=="U1011/3J-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3K",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3J-NO"));
end
rule "No Step Rule for U1011/3J-NO"
	when
		StepPerformed(stepId=="U1011/3J-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3J-NO"));
end
rule "Yes Step Rule for U1011/3K"
	when
		StepPerformed(stepId=="U1011/3K", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3K-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3K"));
end
rule "No Step Rule for U1011/3K"
	when
		StepPerformed(stepId=="U1011/3K", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/3K-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/3K"));
end
rule "Yes Step Rule for U1011/3K-YES"
	when
		StepPerformed(stepId=="U1011/3K-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3K-YES"));
end
rule "No Step Rule for U1011/3K-YES"
	when
		StepPerformed(stepId=="U1011/3K-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3K-YES"));
end
rule "Yes Step Rule for U1011/3K-NO"
	when
		StepPerformed(stepId=="U1011/3K-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/3K-NO"));
end
rule "No Step Rule for U1011/3K-NO"
	when
		StepPerformed(stepId=="U1011/3K-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/3K-NO"));
end
rule "Yes Step Rule for U1011/4A"
	when
		StepPerformed(stepId=="U1011/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/4A"));
end
rule "No Step Rule for U1011/4A"
	when
		StepPerformed(stepId=="U1011/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/4A"));
end
rule "Yes Step Rule for U1011/4A-YES"
	when
		StepPerformed(stepId=="U1011/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/4A-YES"));
end
rule "No Step Rule for U1011/4A-YES"
	when
		StepPerformed(stepId=="U1011/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/4A-YES"));
end
rule "Yes Step Rule for U1011/4A-NO"
	when
		StepPerformed(stepId=="U1011/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/4A-NO"));
end
rule "No Step Rule for U1011/4A-NO"
	when
		StepPerformed(stepId=="U1011/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/4A-NO"));
end
rule "Yes Step Rule for U1011/4B"
	when
		StepPerformed(stepId=="U1011/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/4B"));
end
rule "No Step Rule for U1011/4B"
	when
		StepPerformed(stepId=="U1011/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/4B"));
end
rule "Yes Step Rule for U1011/4B-YES"
	when
		StepPerformed(stepId=="U1011/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/4C",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/4B-YES"));
end
rule "No Step Rule for U1011/4B-YES"
	when
		StepPerformed(stepId=="U1011/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/4B-YES"));
end
rule "Yes Step Rule for U1011/4B-NO"
	when
		StepPerformed(stepId=="U1011/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/4B-NO"));
end
rule "No Step Rule for U1011/4B-NO"
	when
		StepPerformed(stepId=="U1011/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/4B-NO"));
end
rule "Yes Step Rule for U1011/4C"
	when
		StepPerformed(stepId=="U1011/4C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/4C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/4C"));
end
rule "No Step Rule for U1011/4C"
	when
		StepPerformed(stepId=="U1011/4C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/4C-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/4C"));
end
rule "Yes Step Rule for U1011/4C-YES"
	when
		StepPerformed(stepId=="U1011/4C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/4C-YES"));
end
rule "No Step Rule for U1011/4C-YES"
	when
		StepPerformed(stepId=="U1011/4C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/4C-YES"));
end
rule "Yes Step Rule for U1011/4C-NO"
	when
		StepPerformed(stepId=="U1011/4C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/4C-NO"));
end
rule "No Step Rule for U1011/4C-NO"
	when
		StepPerformed(stepId=="U1011/4C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/4C-NO"));
end
rule "Yes Step Rule for U1011/5A"
	when
		StepPerformed(stepId=="U1011/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/5A"));
end
rule "No Step Rule for U1011/5A"
	when
		StepPerformed(stepId=="U1011/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step U1011/5A"));
end
rule "Yes Step Rule for U1011/5A-YES"
	when
		StepPerformed(stepId=="U1011/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/5A-YES"));
end
rule "No Step Rule for U1011/5A-YES"
	when
		StepPerformed(stepId=="U1011/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/5A-YES"));
end
rule "Yes Step Rule for U1011/5A-NO"
	when
		StepPerformed(stepId=="U1011/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1011/1A",$sum.doubleValue() + 100.0,"Answered Yes to step U1011/5A-NO"));
end
rule "No Step Rule for U1011/5A-NO"
	when
		StepPerformed(stepId=="U1011/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1011/5A-NO"));
end
rule "Yes Step Rule for U1048/1A"
	when
		StepPerformed(stepId=="U1048/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1048/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1048/1A"));
end
rule "No Step Rule for U1048/1A"
	when
		StepPerformed(stepId=="U1048/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1048/1B",$sum.doubleValue() + 100.0,"Answered No to step U1048/1A"));
end
rule "Yes Step Rule for U1048/1A-YES"
	when
		StepPerformed(stepId=="U1048/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1048/1A-YES"));
end
rule "No Step Rule for U1048/1A-YES"
	when
		StepPerformed(stepId=="U1048/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1048/1A-YES"));
end
rule "Yes Step Rule for U1048/1A-NO"
	when
		StepPerformed(stepId=="U1048/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1048/1B",$sum.doubleValue() + 100.0,"Answered Yes to step U1048/1A-NO"));
end
rule "No Step Rule for U1048/1A-NO"
	when
		StepPerformed(stepId=="U1048/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1048/1A-NO"));
end
rule "Yes Step Rule for U1048/1B"
	when
		StepPerformed(stepId=="U1048/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1048/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1048/1B"));
end
rule "No Step Rule for U1048/1B"
	when
		StepPerformed(stepId=="U1048/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1048/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step U1048/1B"));
end
rule "Yes Step Rule for U1048/1B-YES"
	when
		StepPerformed(stepId=="U1048/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1048/1B-YES"));
end
rule "No Step Rule for U1048/1B-YES"
	when
		StepPerformed(stepId=="U1048/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1048/1B-YES"));
end
rule "Yes Step Rule for U1048/1B-NO"
	when
		StepPerformed(stepId=="U1048/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1048/2A",$sum.doubleValue() + 100.0,"Answered Yes to step U1048/1B-NO"));
end
rule "No Step Rule for U1048/1B-NO"
	when
		StepPerformed(stepId=="U1048/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1048/1B-NO"));
end
rule "Yes Step Rule for U1048/2A"
	when
		StepPerformed(stepId=="U1048/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1048/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1048/2A"));
end
rule "No Step Rule for U1048/2A"
	when
		StepPerformed(stepId=="U1048/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1048/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step U1048/2A"));
end
rule "Yes Step Rule for U1048/2A-YES"
	when
		StepPerformed(stepId=="U1048/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step U1048/2A-YES"));
end
rule "No Step Rule for U1048/2A-YES"
	when
		StepPerformed(stepId=="U1048/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1048/2A-YES"));
end
rule "Yes Step Rule for U1048/2A-NO"
	when
		StepPerformed(stepId=="U1048/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1048/1A",$sum.doubleValue() + 100.0,"Answered Yes to step U1048/2A-NO"));
end
rule "No Step Rule for U1048/2A-NO"
	when
		StepPerformed(stepId=="U1048/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1048/2A-NO"));
end
rule "Yes Step Rule for U1049/1A"
	when
		StepPerformed(stepId=="U1049/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1049/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1049/1A"));
end
rule "No Step Rule for U1049/1A"
	when
		StepPerformed(stepId=="U1049/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1049/1B",$sum.doubleValue() + 100.0,"Answered No to step U1049/1A"));
end
rule "Yes Step Rule for U1049/1A-YES"
	when
		StepPerformed(stepId=="U1049/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1049/1A-YES"));
end
rule "No Step Rule for U1049/1A-YES"
	when
		StepPerformed(stepId=="U1049/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1049/1A-YES"));
end
rule "Yes Step Rule for U1049/1A-NO"
	when
		StepPerformed(stepId=="U1049/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1049/1B",$sum.doubleValue() + 100.0,"Answered Yes to step U1049/1A-NO"));
end
rule "No Step Rule for U1049/1A-NO"
	when
		StepPerformed(stepId=="U1049/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1049/1A-NO"));
end
rule "Yes Step Rule for U1049/1B"
	when
		StepPerformed(stepId=="U1049/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1049/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1049/1B"));
end
rule "No Step Rule for U1049/1B"
	when
		StepPerformed(stepId=="U1049/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1049/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step U1049/1B"));
end
rule "Yes Step Rule for U1049/1B-YES"
	when
		StepPerformed(stepId=="U1049/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1049/1B-YES"));
end
rule "No Step Rule for U1049/1B-YES"
	when
		StepPerformed(stepId=="U1049/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1049/1B-YES"));
end
rule "Yes Step Rule for U1049/1B-NO"
	when
		StepPerformed(stepId=="U1049/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1049/2A",$sum.doubleValue() + 100.0,"Answered Yes to step U1049/1B-NO"));
end
rule "No Step Rule for U1049/1B-NO"
	when
		StepPerformed(stepId=="U1049/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1049/1B-NO"));
end
rule "Yes Step Rule for U1049/2A"
	when
		StepPerformed(stepId=="U1049/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1049/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1049/2A"));
end
rule "No Step Rule for U1049/2A"
	when
		StepPerformed(stepId=="U1049/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1049/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step U1049/2A"));
end
rule "Yes Step Rule for U1049/2A-YES"
	when
		StepPerformed(stepId=="U1049/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step U1049/2A-YES"));
end
rule "No Step Rule for U1049/2A-YES"
	when
		StepPerformed(stepId=="U1049/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1049/2A-YES"));
end
rule "Yes Step Rule for U1049/2A-NO"
	when
		StepPerformed(stepId=="U1049/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1049/1A",$sum.doubleValue() + 100.0,"Answered Yes to step U1049/2A-NO"));
end
rule "No Step Rule for U1049/2A-NO"
	when
		StepPerformed(stepId=="U1049/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1049/2A-NO"));
end
rule "Yes Step Rule for U104C/1A"
	when
		StepPerformed(stepId=="U104C/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2A",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/1A"));
end
rule "No Step Rule for U104C/1A"
	when
		StepPerformed(stepId=="U104C/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2B",$sum.doubleValue() + 100.0,"Answered No to step U104C/1A"));
end
rule "Yes Step Rule for U104C/1A-YES"
	when
		StepPerformed(stepId=="U104C/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2A",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/1A-YES"));
end
rule "No Step Rule for U104C/1A-YES"
	when
		StepPerformed(stepId=="U104C/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/1A-YES"));
end
rule "Yes Step Rule for U104C/1A-NO"
	when
		StepPerformed(stepId=="U104C/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2B",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/1A-NO"));
end
rule "No Step Rule for U104C/1A-NO"
	when
		StepPerformed(stepId=="U104C/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/1A-NO"));
end
rule "Yes Step Rule for U104C/2A"
	when
		StepPerformed(stepId=="U104C/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2A"));
end
rule "No Step Rule for U104C/2A"
	when
		StepPerformed(stepId=="U104C/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2B",$sum.doubleValue() + 100.0,"Answered No to step U104C/2A"));
end
rule "Yes Step Rule for U104C/2A-YES"
	when
		StepPerformed(stepId=="U104C/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2A-YES"));
end
rule "No Step Rule for U104C/2A-YES"
	when
		StepPerformed(stepId=="U104C/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/2A-YES"));
end
rule "Yes Step Rule for U104C/2A-NO"
	when
		StepPerformed(stepId=="U104C/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2B",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2A-NO"));
end
rule "No Step Rule for U104C/2A-NO"
	when
		StepPerformed(stepId=="U104C/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/2A-NO"));
end
rule "Yes Step Rule for U104C/2B"
	when
		StepPerformed(stepId=="U104C/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2B"));
end
rule "No Step Rule for U104C/2B"
	when
		StepPerformed(stepId=="U104C/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2C",$sum.doubleValue() + 100.0,"Answered No to step U104C/2B"));
end
rule "Yes Step Rule for U104C/2B-YES"
	when
		StepPerformed(stepId=="U104C/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2B-YES"));
end
rule "No Step Rule for U104C/2B-YES"
	when
		StepPerformed(stepId=="U104C/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/2B-YES"));
end
rule "Yes Step Rule for U104C/2B-NO"
	when
		StepPerformed(stepId=="U104C/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2C",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2B-NO"));
end
rule "No Step Rule for U104C/2B-NO"
	when
		StepPerformed(stepId=="U104C/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/2B-NO"));
end
rule "Yes Step Rule for U104C/2C"
	when
		StepPerformed(stepId=="U104C/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2D",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2C"));
end
rule "No Step Rule for U104C/2C"
	when
		StepPerformed(stepId=="U104C/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2C-NO",$sum.doubleValue() + 100.0,"Answered No to step U104C/2C"));
end
rule "Yes Step Rule for U104C/2C-YES"
	when
		StepPerformed(stepId=="U104C/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2D",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2C-YES"));
end
rule "No Step Rule for U104C/2C-YES"
	when
		StepPerformed(stepId=="U104C/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/2C-YES"));
end
rule "Yes Step Rule for U104C/2C-NO"
	when
		StepPerformed(stepId=="U104C/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2C-NO"));
end
rule "No Step Rule for U104C/2C-NO"
	when
		StepPerformed(stepId=="U104C/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/2C-NO"));
end
rule "Yes Step Rule for U104C/2D"
	when
		StepPerformed(stepId=="U104C/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2D"));
end
rule "No Step Rule for U104C/2D"
	when
		StepPerformed(stepId=="U104C/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/2D-NO",$sum.doubleValue() + 100.0,"Answered No to step U104C/2D"));
end
rule "Yes Step Rule for U104C/2D-YES"
	when
		StepPerformed(stepId=="U104C/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2D-YES"));
end
rule "No Step Rule for U104C/2D-YES"
	when
		StepPerformed(stepId=="U104C/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/2D-YES"));
end
rule "Yes Step Rule for U104C/2D-NO"
	when
		StepPerformed(stepId=="U104C/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/2D-NO"));
end
rule "No Step Rule for U104C/2D-NO"
	when
		StepPerformed(stepId=="U104C/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/2D-NO"));
end
rule "Yes Step Rule for U104C/3A"
	when
		StepPerformed(stepId=="U104C/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/3A"));
end
rule "No Step Rule for U104C/3A"
	when
		StepPerformed(stepId=="U104C/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step U104C/3A"));
end
rule "Yes Step Rule for U104C/3A-YES"
	when
		StepPerformed(stepId=="U104C/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/3A-YES"));
end
rule "No Step Rule for U104C/3A-YES"
	when
		StepPerformed(stepId=="U104C/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/3A-YES"));
end
rule "Yes Step Rule for U104C/3A-NO"
	when
		StepPerformed(stepId=="U104C/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U104C/1A",$sum.doubleValue() + 100.0,"Answered Yes to step U104C/3A-NO"));
end
rule "No Step Rule for U104C/3A-NO"
	when
		StepPerformed(stepId=="U104C/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U104C/3A-NO"));
end
rule "Yes Step Rule for U1835/1A"
	when
		StepPerformed(stepId=="U1835/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/1A"));
end
rule "No Step Rule for U1835/1A"
	when
		StepPerformed(stepId=="U1835/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2C",$sum.doubleValue() + 100.0,"Answered No to step U1835/1A"));
end
rule "Yes Step Rule for U1835/1A-YES"
	when
		StepPerformed(stepId=="U1835/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/1A-YES"));
end
rule "No Step Rule for U1835/1A-YES"
	when
		StepPerformed(stepId=="U1835/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/1A-YES"));
end
rule "Yes Step Rule for U1835/1A-NO"
	when
		StepPerformed(stepId=="U1835/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2C",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/1A-NO"));
end
rule "No Step Rule for U1835/1A-NO"
	when
		StepPerformed(stepId=="U1835/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/1A-NO"));
end
rule "Yes Step Rule for U1835/2A"
	when
		StepPerformed(stepId=="U1835/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2B",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2A"));
end
rule "No Step Rule for U1835/2A"
	when
		StepPerformed(stepId=="U1835/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2C",$sum.doubleValue() + 100.0,"Answered No to step U1835/2A"));
end
rule "Yes Step Rule for U1835/2A-YES"
	when
		StepPerformed(stepId=="U1835/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2B",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2A-YES"));
end
rule "No Step Rule for U1835/2A-YES"
	when
		StepPerformed(stepId=="U1835/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2A-YES"));
end
rule "Yes Step Rule for U1835/2A-NO"
	when
		StepPerformed(stepId=="U1835/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2C",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2A-NO"));
end
rule "No Step Rule for U1835/2A-NO"
	when
		StepPerformed(stepId=="U1835/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2A-NO"));
end
rule "Yes Step Rule for U1835/2B"
	when
		StepPerformed(stepId=="U1835/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2B"));
end
rule "No Step Rule for U1835/2B"
	when
		StepPerformed(stepId=="U1835/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2B-NO",$sum.doubleValue() + 100.0,"Answered No to step U1835/2B"));
end
rule "Yes Step Rule for U1835/2B-YES"
	when
		StepPerformed(stepId=="U1835/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2B-YES"));
end
rule "No Step Rule for U1835/2B-YES"
	when
		StepPerformed(stepId=="U1835/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2B-YES"));
end
rule "Yes Step Rule for U1835/2B-NO"
	when
		StepPerformed(stepId=="U1835/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2B-NO"));
end
rule "No Step Rule for U1835/2B-NO"
	when
		StepPerformed(stepId=="U1835/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2B-NO"));
end
rule "Yes Step Rule for U1835/2C"
	when
		StepPerformed(stepId=="U1835/2C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2C"));
end
rule "No Step Rule for U1835/2C"
	when
		StepPerformed(stepId=="U1835/2C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2D",$sum.doubleValue() + 100.0,"Answered No to step U1835/2C"));
end
rule "Yes Step Rule for U1835/2C-YES"
	when
		StepPerformed(stepId=="U1835/2C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2C-YES"));
end
rule "No Step Rule for U1835/2C-YES"
	when
		StepPerformed(stepId=="U1835/2C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2C-YES"));
end
rule "Yes Step Rule for U1835/2C-NO"
	when
		StepPerformed(stepId=="U1835/2C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2D",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2C-NO"));
end
rule "No Step Rule for U1835/2C-NO"
	when
		StepPerformed(stepId=="U1835/2C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2C-NO"));
end
rule "Yes Step Rule for U1835/2D"
	when
		StepPerformed(stepId=="U1835/2D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2D"));
end
rule "No Step Rule for U1835/2D"
	when
		StepPerformed(stepId=="U1835/2D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2E",$sum.doubleValue() + 100.0,"Answered No to step U1835/2D"));
end
rule "Yes Step Rule for U1835/2D-YES"
	when
		StepPerformed(stepId=="U1835/2D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2D-YES"));
end
rule "No Step Rule for U1835/2D-YES"
	when
		StepPerformed(stepId=="U1835/2D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2D-YES"));
end
rule "Yes Step Rule for U1835/2D-NO"
	when
		StepPerformed(stepId=="U1835/2D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2E",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2D-NO"));
end
rule "No Step Rule for U1835/2D-NO"
	when
		StepPerformed(stepId=="U1835/2D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2D-NO"));
end
rule "Yes Step Rule for U1835/2E"
	when
		StepPerformed(stepId=="U1835/2E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2F",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2E"));
end
rule "No Step Rule for U1835/2E"
	when
		StepPerformed(stepId=="U1835/2E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2E-NO",$sum.doubleValue() + 100.0,"Answered No to step U1835/2E"));
end
rule "Yes Step Rule for U1835/2E-YES"
	when
		StepPerformed(stepId=="U1835/2E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2F",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2E-YES"));
end
rule "No Step Rule for U1835/2E-YES"
	when
		StepPerformed(stepId=="U1835/2E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2E-YES"));
end
rule "Yes Step Rule for U1835/2E-NO"
	when
		StepPerformed(stepId=="U1835/2E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2E-NO"));
end
rule "No Step Rule for U1835/2E-NO"
	when
		StepPerformed(stepId=="U1835/2E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2E-NO"));
end
rule "Yes Step Rule for U1835/2F"
	when
		StepPerformed(stepId=="U1835/2F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2G",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2F"));
end
rule "No Step Rule for U1835/2F"
	when
		StepPerformed(stepId=="U1835/2F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2F-NO",$sum.doubleValue() + 100.0,"Answered No to step U1835/2F"));
end
rule "Yes Step Rule for U1835/2F-YES"
	when
		StepPerformed(stepId=="U1835/2F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2G",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2F-YES"));
end
rule "No Step Rule for U1835/2F-YES"
	when
		StepPerformed(stepId=="U1835/2F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2F-YES"));
end
rule "Yes Step Rule for U1835/2F-NO"
	when
		StepPerformed(stepId=="U1835/2F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2F-NO"));
end
rule "No Step Rule for U1835/2F-NO"
	when
		StepPerformed(stepId=="U1835/2F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2F-NO"));
end
rule "Yes Step Rule for U1835/2G"
	when
		StepPerformed(stepId=="U1835/2G", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2G"));
end
rule "No Step Rule for U1835/2G"
	when
		StepPerformed(stepId=="U1835/2G", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/2G-NO",$sum.doubleValue() + 100.0,"Answered No to step U1835/2G"));
end
rule "Yes Step Rule for U1835/2G-YES"
	when
		StepPerformed(stepId=="U1835/2G-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2G-YES"));
end
rule "No Step Rule for U1835/2G-YES"
	when
		StepPerformed(stepId=="U1835/2G-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2G-YES"));
end
rule "Yes Step Rule for U1835/2G-NO"
	when
		StepPerformed(stepId=="U1835/2G-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/2G-NO"));
end
rule "No Step Rule for U1835/2G-NO"
	when
		StepPerformed(stepId=="U1835/2G-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/2G-NO"));
end
rule "Yes Step Rule for U1835/3A"
	when
		StepPerformed(stepId=="U1835/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/3A"));
end
rule "No Step Rule for U1835/3A"
	when
		StepPerformed(stepId=="U1835/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/3A-NO",$sum.doubleValue() + 100.0,"Answered No to step U1835/3A"));
end
rule "Yes Step Rule for U1835/3A-YES"
	when
		StepPerformed(stepId=="U1835/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/3A-YES"));
end
rule "No Step Rule for U1835/3A-YES"
	when
		StepPerformed(stepId=="U1835/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/3A-YES"));
end
rule "Yes Step Rule for U1835/3A-NO"
	when
		StepPerformed(stepId=="U1835/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1835/1A",$sum.doubleValue() + 100.0,"Answered Yes to step U1835/3A-NO"));
end
rule "No Step Rule for U1835/3A-NO"
	when
		StepPerformed(stepId=="U1835/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1835/3A-NO"));
end
rule "Yes Step Rule for U1852/1A"
	when
		StepPerformed(stepId=="U1852/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/1A"));
end
rule "No Step Rule for U1852/1A"
	when
		StepPerformed(stepId=="U1852/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered No to step U1852/1A"));
end
rule "Yes Step Rule for U1852/1A-YES"
	when
		StepPerformed(stepId=="U1852/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/1A-YES"));
end
rule "No Step Rule for U1852/1A-YES"
	when
		StepPerformed(stepId=="U1852/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/1A-YES"));
end
rule "Yes Step Rule for U1852/1A-NO"
	when
		StepPerformed(stepId=="U1852/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/1A-NO"));
end
rule "No Step Rule for U1852/1A-NO"
	when
		StepPerformed(stepId=="U1852/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/1A-NO"));
end
rule "Yes Step Rule for U1852/2A"
	when
		StepPerformed(stepId=="U1852/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/2A"));
end
rule "No Step Rule for U1852/2A"
	when
		StepPerformed(stepId=="U1852/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/2A-NO",$sum.doubleValue() + 100.0,"Answered No to step U1852/2A"));
end
rule "Yes Step Rule for U1852/2A-YES"
	when
		StepPerformed(stepId=="U1852/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/2A-YES"));
end
rule "No Step Rule for U1852/2A-YES"
	when
		StepPerformed(stepId=="U1852/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/2A-YES"));
end
rule "Yes Step Rule for U1852/2A-NO"
	when
		StepPerformed(stepId=="U1852/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/2A-NO"));
end
rule "No Step Rule for U1852/2A-NO"
	when
		StepPerformed(stepId=="U1852/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/2A-NO"));
end
rule "Yes Step Rule for U1852/3A"
	when
		StepPerformed(stepId=="U1852/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3B",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3A"));
end
rule "No Step Rule for U1852/3A"
	when
		StepPerformed(stepId=="U1852/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3C",$sum.doubleValue() + 100.0,"Answered No to step U1852/3A"));
end
rule "Yes Step Rule for U1852/3A-YES"
	when
		StepPerformed(stepId=="U1852/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3B",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3A-YES"));
end
rule "No Step Rule for U1852/3A-YES"
	when
		StepPerformed(stepId=="U1852/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3A-YES"));
end
rule "Yes Step Rule for U1852/3A-NO"
	when
		StepPerformed(stepId=="U1852/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3C",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3A-NO"));
end
rule "No Step Rule for U1852/3A-NO"
	when
		StepPerformed(stepId=="U1852/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3A-NO"));
end
rule "Yes Step Rule for U1852/3B"
	when
		StepPerformed(stepId=="U1852/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3B"));
end
rule "No Step Rule for U1852/3B"
	when
		StepPerformed(stepId=="U1852/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3B-NO",$sum.doubleValue() + 100.0,"Answered No to step U1852/3B"));
end
rule "Yes Step Rule for U1852/3B-YES"
	when
		StepPerformed(stepId=="U1852/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3B-YES"));
end
rule "No Step Rule for U1852/3B-YES"
	when
		StepPerformed(stepId=="U1852/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3B-YES"));
end
rule "Yes Step Rule for U1852/3B-NO"
	when
		StepPerformed(stepId=="U1852/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3B-NO"));
end
rule "No Step Rule for U1852/3B-NO"
	when
		StepPerformed(stepId=="U1852/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3B-NO"));
end
rule "Yes Step Rule for U1852/3C"
	when
		StepPerformed(stepId=="U1852/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3C"));
end
rule "No Step Rule for U1852/3C"
	when
		StepPerformed(stepId=="U1852/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3D",$sum.doubleValue() + 100.0,"Answered No to step U1852/3C"));
end
rule "Yes Step Rule for U1852/3C-YES"
	when
		StepPerformed(stepId=="U1852/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3C-YES"));
end
rule "No Step Rule for U1852/3C-YES"
	when
		StepPerformed(stepId=="U1852/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3C-YES"));
end
rule "Yes Step Rule for U1852/3C-NO"
	when
		StepPerformed(stepId=="U1852/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3D",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3C-NO"));
end
rule "No Step Rule for U1852/3C-NO"
	when
		StepPerformed(stepId=="U1852/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3C-NO"));
end
rule "Yes Step Rule for U1852/3D"
	when
		StepPerformed(stepId=="U1852/3D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3D"));
end
rule "No Step Rule for U1852/3D"
	when
		StepPerformed(stepId=="U1852/3D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3E",$sum.doubleValue() + 100.0,"Answered No to step U1852/3D"));
end
rule "Yes Step Rule for U1852/3D-YES"
	when
		StepPerformed(stepId=="U1852/3D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3D-YES"));
end
rule "No Step Rule for U1852/3D-YES"
	when
		StepPerformed(stepId=="U1852/3D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3D-YES"));
end
rule "Yes Step Rule for U1852/3D-NO"
	when
		StepPerformed(stepId=="U1852/3D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3E",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3D-NO"));
end
rule "No Step Rule for U1852/3D-NO"
	when
		StepPerformed(stepId=="U1852/3D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3D-NO"));
end
rule "Yes Step Rule for U1852/3E"
	when
		StepPerformed(stepId=="U1852/3E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3F",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3E"));
end
rule "No Step Rule for U1852/3E"
	when
		StepPerformed(stepId=="U1852/3E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3E-NO",$sum.doubleValue() + 100.0,"Answered No to step U1852/3E"));
end
rule "Yes Step Rule for U1852/3E-YES"
	when
		StepPerformed(stepId=="U1852/3E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3F",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3E-YES"));
end
rule "No Step Rule for U1852/3E-YES"
	when
		StepPerformed(stepId=="U1852/3E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3E-YES"));
end
rule "Yes Step Rule for U1852/3E-NO"
	when
		StepPerformed(stepId=="U1852/3E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3E-NO"));
end
rule "No Step Rule for U1852/3E-NO"
	when
		StepPerformed(stepId=="U1852/3E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3E-NO"));
end
rule "Yes Step Rule for U1852/3F"
	when
		StepPerformed(stepId=="U1852/3F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3G",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3F"));
end
rule "No Step Rule for U1852/3F"
	when
		StepPerformed(stepId=="U1852/3F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3F-NO",$sum.doubleValue() + 100.0,"Answered No to step U1852/3F"));
end
rule "Yes Step Rule for U1852/3F-YES"
	when
		StepPerformed(stepId=="U1852/3F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3G",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3F-YES"));
end
rule "No Step Rule for U1852/3F-YES"
	when
		StepPerformed(stepId=="U1852/3F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3F-YES"));
end
rule "Yes Step Rule for U1852/3F-NO"
	when
		StepPerformed(stepId=="U1852/3F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3F-NO"));
end
rule "No Step Rule for U1852/3F-NO"
	when
		StepPerformed(stepId=="U1852/3F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3F-NO"));
end
rule "Yes Step Rule for U1852/3G"
	when
		StepPerformed(stepId=="U1852/3G", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3G"));
end
rule "No Step Rule for U1852/3G"
	when
		StepPerformed(stepId=="U1852/3G", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/3G-NO",$sum.doubleValue() + 100.0,"Answered No to step U1852/3G"));
end
rule "Yes Step Rule for U1852/3G-YES"
	when
		StepPerformed(stepId=="U1852/3G-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3G-YES"));
end
rule "No Step Rule for U1852/3G-YES"
	when
		StepPerformed(stepId=="U1852/3G-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3G-YES"));
end
rule "Yes Step Rule for U1852/3G-NO"
	when
		StepPerformed(stepId=="U1852/3G-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/3G-NO"));
end
rule "No Step Rule for U1852/3G-NO"
	when
		StepPerformed(stepId=="U1852/3G-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/3G-NO"));
end
rule "Yes Step Rule for U1852/4A"
	when
		StepPerformed(stepId=="U1852/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/4A"));
end
rule "No Step Rule for U1852/4A"
	when
		StepPerformed(stepId=="U1852/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step U1852/4A"));
end
rule "Yes Step Rule for U1852/4A-YES"
	when
		StepPerformed(stepId=="U1852/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/4A-YES"));
end
rule "No Step Rule for U1852/4A-YES"
	when
		StepPerformed(stepId=="U1852/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/4A-YES"));
end
rule "Yes Step Rule for U1852/4A-NO"
	when
		StepPerformed(stepId=="U1852/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("U1852/1A",$sum.doubleValue() + 100.0,"Answered Yes to step U1852/4A-NO"));
end
rule "No Step Rule for U1852/4A-NO"
	when
		StepPerformed(stepId=="U1852/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step U1852/4A-NO"));
end
rule "Yes Step Rule for V-CAN1/1A"
	when
		StepPerformed(stepId=="V-CAN1/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/1A"));
end
rule "No Step Rule for V-CAN1/1A"
	when
		StepPerformed(stepId=="V-CAN1/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/1A"));
end
rule "Yes Step Rule for V-CAN1/1A-YES"
	when
		StepPerformed(stepId=="V-CAN1/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/1A-YES"));
end
rule "No Step Rule for V-CAN1/1A-YES"
	when
		StepPerformed(stepId=="V-CAN1/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/1A-YES"));
end
rule "Yes Step Rule for V-CAN1/1A-NO"
	when
		StepPerformed(stepId=="V-CAN1/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/1B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/1A-NO"));
end
rule "No Step Rule for V-CAN1/1A-NO"
	when
		StepPerformed(stepId=="V-CAN1/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/1A-NO"));
end
rule "Yes Step Rule for V-CAN1/1B"
	when
		StepPerformed(stepId=="V-CAN1/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/1B"));
end
rule "No Step Rule for V-CAN1/1B"
	when
		StepPerformed(stepId=="V-CAN1/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/1B"));
end
rule "Yes Step Rule for V-CAN1/1B-YES"
	when
		StepPerformed(stepId=="V-CAN1/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/2A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/1B-YES"));
end
rule "No Step Rule for V-CAN1/1B-YES"
	when
		StepPerformed(stepId=="V-CAN1/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/1B-YES"));
end
rule "Yes Step Rule for V-CAN1/1B-NO"
	when
		StepPerformed(stepId=="V-CAN1/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/1B-NO"));
end
rule "No Step Rule for V-CAN1/1B-NO"
	when
		StepPerformed(stepId=="V-CAN1/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/1B-NO"));
end
rule "Yes Step Rule for V-CAN1/2A"
	when
		StepPerformed(stepId=="V-CAN1/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/2A"));
end
rule "No Step Rule for V-CAN1/2A"
	when
		StepPerformed(stepId=="V-CAN1/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/2B",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/2A"));
end
rule "Yes Step Rule for V-CAN1/2A-YES"
	when
		StepPerformed(stepId=="V-CAN1/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/2B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/2A-YES"));
end
rule "No Step Rule for V-CAN1/2A-YES"
	when
		StepPerformed(stepId=="V-CAN1/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/2A-YES"));
end
rule "Yes Step Rule for V-CAN1/2A-NO"
	when
		StepPerformed(stepId=="V-CAN1/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/2B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/2A-NO"));
end
rule "No Step Rule for V-CAN1/2A-NO"
	when
		StepPerformed(stepId=="V-CAN1/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/2A-NO"));
end
rule "Yes Step Rule for V-CAN1/2B"
	when
		StepPerformed(stepId=="V-CAN1/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/2B"));
end
rule "No Step Rule for V-CAN1/2B"
	when
		StepPerformed(stepId=="V-CAN1/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/3A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/2B"));
end
rule "Yes Step Rule for V-CAN1/2B-YES"
	when
		StepPerformed(stepId=="V-CAN1/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/2B-YES"));
end
rule "No Step Rule for V-CAN1/2B-YES"
	when
		StepPerformed(stepId=="V-CAN1/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/2B-YES"));
end
rule "Yes Step Rule for V-CAN1/2B-NO"
	when
		StepPerformed(stepId=="V-CAN1/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/3A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/2B-NO"));
end
rule "No Step Rule for V-CAN1/2B-NO"
	when
		StepPerformed(stepId=="V-CAN1/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/2B-NO"));
end
rule "Yes Step Rule for V-CAN1/3A"
	when
		StepPerformed(stepId=="V-CAN1/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/3B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/3A"));
end
rule "No Step Rule for V-CAN1/3A"
	when
		StepPerformed(stepId=="V-CAN1/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/3A"));
end
rule "Yes Step Rule for V-CAN1/3A-YES"
	when
		StepPerformed(stepId=="V-CAN1/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/3B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/3A-YES"));
end
rule "No Step Rule for V-CAN1/3A-YES"
	when
		StepPerformed(stepId=="V-CAN1/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/3A-YES"));
end
rule "Yes Step Rule for V-CAN1/3A-NO"
	when
		StepPerformed(stepId=="V-CAN1/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/3A-NO"));
end
rule "No Step Rule for V-CAN1/3A-NO"
	when
		StepPerformed(stepId=="V-CAN1/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/3A-NO"));
end
rule "Yes Step Rule for V-CAN1/3B"
	when
		StepPerformed(stepId=="V-CAN1/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/3B"));
end
rule "No Step Rule for V-CAN1/3B"
	when
		StepPerformed(stepId=="V-CAN1/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/3C",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/3B"));
end
rule "Yes Step Rule for V-CAN1/3B-YES"
	when
		StepPerformed(stepId=="V-CAN1/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/4A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/3B-YES"));
end
rule "No Step Rule for V-CAN1/3B-YES"
	when
		StepPerformed(stepId=="V-CAN1/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/3B-YES"));
end
rule "Yes Step Rule for V-CAN1/3B-NO"
	when
		StepPerformed(stepId=="V-CAN1/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/3C",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/3B-NO"));
end
rule "No Step Rule for V-CAN1/3B-NO"
	when
		StepPerformed(stepId=="V-CAN1/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/3B-NO"));
end
rule "Yes Step Rule for V-CAN1/3C"
	when
		StepPerformed(stepId=="V-CAN1/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/3C"));
end
rule "No Step Rule for V-CAN1/3C"
	when
		StepPerformed(stepId=="V-CAN1/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/3C"));
end
rule "Yes Step Rule for V-CAN1/3C-YES"
	when
		StepPerformed(stepId=="V-CAN1/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/5A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/3C-YES"));
end
rule "No Step Rule for V-CAN1/3C-YES"
	when
		StepPerformed(stepId=="V-CAN1/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/3C-YES"));
end
rule "Yes Step Rule for V-CAN1/3C-NO"
	when
		StepPerformed(stepId=="V-CAN1/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/3C-NO"));
end
rule "No Step Rule for V-CAN1/3C-NO"
	when
		StepPerformed(stepId=="V-CAN1/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/3C-NO"));
end
rule "Yes Step Rule for V-CAN1/4A"
	when
		StepPerformed(stepId=="V-CAN1/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/4A"));
end
rule "No Step Rule for V-CAN1/4A"
	when
		StepPerformed(stepId=="V-CAN1/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/4B",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/4A"));
end
rule "Yes Step Rule for V-CAN1/4A-YES"
	when
		StepPerformed(stepId=="V-CAN1/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/4A-YES"));
end
rule "No Step Rule for V-CAN1/4A-YES"
	when
		StepPerformed(stepId=="V-CAN1/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/4A-YES"));
end
rule "Yes Step Rule for V-CAN1/4A-NO"
	when
		StepPerformed(stepId=="V-CAN1/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/4B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/4A-NO"));
end
rule "No Step Rule for V-CAN1/4A-NO"
	when
		StepPerformed(stepId=="V-CAN1/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/4A-NO"));
end
rule "Yes Step Rule for V-CAN1/4B"
	when
		StepPerformed(stepId=="V-CAN1/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/4B"));
end
rule "No Step Rule for V-CAN1/4B"
	when
		StepPerformed(stepId=="V-CAN1/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/4B"));
end
rule "Yes Step Rule for V-CAN1/4B-YES"
	when
		StepPerformed(stepId=="V-CAN1/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/4B-YES"));
end
rule "No Step Rule for V-CAN1/4B-YES"
	when
		StepPerformed(stepId=="V-CAN1/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/4B-YES"));
end
rule "Yes Step Rule for V-CAN1/4B-NO"
	when
		StepPerformed(stepId=="V-CAN1/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/4B-NO"));
end
rule "No Step Rule for V-CAN1/4B-NO"
	when
		StepPerformed(stepId=="V-CAN1/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/4B-NO"));
end
rule "Yes Step Rule for V-CAN1/5A"
	when
		StepPerformed(stepId=="V-CAN1/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/5A"));
end
rule "No Step Rule for V-CAN1/5A"
	when
		StepPerformed(stepId=="V-CAN1/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/5B",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/5A"));
end
rule "Yes Step Rule for V-CAN1/5A-YES"
	when
		StepPerformed(stepId=="V-CAN1/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/5A-YES"));
end
rule "No Step Rule for V-CAN1/5A-YES"
	when
		StepPerformed(stepId=="V-CAN1/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/5A-YES"));
end
rule "Yes Step Rule for V-CAN1/5A-NO"
	when
		StepPerformed(stepId=="V-CAN1/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/5B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/5A-NO"));
end
rule "No Step Rule for V-CAN1/5A-NO"
	when
		StepPerformed(stepId=="V-CAN1/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/5A-NO"));
end
rule "Yes Step Rule for V-CAN1/5B"
	when
		StepPerformed(stepId=="V-CAN1/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/5B"));
end
rule "No Step Rule for V-CAN1/5B"
	when
		StepPerformed(stepId=="V-CAN1/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/5B"));
end
rule "Yes Step Rule for V-CAN1/5B-YES"
	when
		StepPerformed(stepId=="V-CAN1/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/5B-YES"));
end
rule "No Step Rule for V-CAN1/5B-YES"
	when
		StepPerformed(stepId=="V-CAN1/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/5B-YES"));
end
rule "Yes Step Rule for V-CAN1/5B-NO"
	when
		StepPerformed(stepId=="V-CAN1/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/5B-NO"));
end
rule "No Step Rule for V-CAN1/5B-NO"
	when
		StepPerformed(stepId=="V-CAN1/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/5B-NO"));
end
rule "Yes Step Rule for V-CAN1/6A"
	when
		StepPerformed(stepId=="V-CAN1/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6A"));
end
rule "No Step Rule for V-CAN1/6A"
	when
		StepPerformed(stepId=="V-CAN1/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6B",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6A"));
end
rule "Yes Step Rule for V-CAN1/6A-YES"
	when
		StepPerformed(stepId=="V-CAN1/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6D",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6A-YES"));
end
rule "No Step Rule for V-CAN1/6A-YES"
	when
		StepPerformed(stepId=="V-CAN1/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6A-YES"));
end
rule "Yes Step Rule for V-CAN1/6A-NO"
	when
		StepPerformed(stepId=="V-CAN1/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6A-NO"));
end
rule "No Step Rule for V-CAN1/6A-NO"
	when
		StepPerformed(stepId=="V-CAN1/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6A-NO"));
end
rule "Yes Step Rule for V-CAN1/6B"
	when
		StepPerformed(stepId=="V-CAN1/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6B"));
end
rule "No Step Rule for V-CAN1/6B"
	when
		StepPerformed(stepId=="V-CAN1/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6C",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6B"));
end
rule "Yes Step Rule for V-CAN1/6B-YES"
	when
		StepPerformed(stepId=="V-CAN1/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6B-YES"));
end
rule "No Step Rule for V-CAN1/6B-YES"
	when
		StepPerformed(stepId=="V-CAN1/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6B-YES"));
end
rule "Yes Step Rule for V-CAN1/6B-NO"
	when
		StepPerformed(stepId=="V-CAN1/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6C",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6B-NO"));
end
rule "No Step Rule for V-CAN1/6B-NO"
	when
		StepPerformed(stepId=="V-CAN1/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6B-NO"));
end
rule "Yes Step Rule for V-CAN1/6C"
	when
		StepPerformed(stepId=="V-CAN1/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6C"));
end
rule "No Step Rule for V-CAN1/6C"
	when
		StepPerformed(stepId=="V-CAN1/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6C"));
end
rule "Yes Step Rule for V-CAN1/6C-YES"
	when
		StepPerformed(stepId=="V-CAN1/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6C-YES"));
end
rule "No Step Rule for V-CAN1/6C-YES"
	when
		StepPerformed(stepId=="V-CAN1/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6C-YES"));
end
rule "Yes Step Rule for V-CAN1/6C-NO"
	when
		StepPerformed(stepId=="V-CAN1/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6C-NO"));
end
rule "No Step Rule for V-CAN1/6C-NO"
	when
		StepPerformed(stepId=="V-CAN1/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6C-NO"));
end
rule "Yes Step Rule for V-CAN1/6D"
	when
		StepPerformed(stepId=="V-CAN1/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6D"));
end
rule "No Step Rule for V-CAN1/6D"
	when
		StepPerformed(stepId=="V-CAN1/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6E",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6D"));
end
rule "Yes Step Rule for V-CAN1/6D-YES"
	when
		StepPerformed(stepId=="V-CAN1/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6D-YES"));
end
rule "No Step Rule for V-CAN1/6D-YES"
	when
		StepPerformed(stepId=="V-CAN1/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6D-YES"));
end
rule "Yes Step Rule for V-CAN1/6D-NO"
	when
		StepPerformed(stepId=="V-CAN1/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6E",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6D-NO"));
end
rule "No Step Rule for V-CAN1/6D-NO"
	when
		StepPerformed(stepId=="V-CAN1/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6D-NO"));
end
rule "Yes Step Rule for V-CAN1/6E"
	when
		StepPerformed(stepId=="V-CAN1/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6E"));
end
rule "No Step Rule for V-CAN1/6E"
	when
		StepPerformed(stepId=="V-CAN1/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6F",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6E"));
end
rule "Yes Step Rule for V-CAN1/6E-YES"
	when
		StepPerformed(stepId=="V-CAN1/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6E-YES"));
end
rule "No Step Rule for V-CAN1/6E-YES"
	when
		StepPerformed(stepId=="V-CAN1/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6E-YES"));
end
rule "Yes Step Rule for V-CAN1/6E-NO"
	when
		StepPerformed(stepId=="V-CAN1/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6F",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6E-NO"));
end
rule "No Step Rule for V-CAN1/6E-NO"
	when
		StepPerformed(stepId=="V-CAN1/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6E-NO"));
end
rule "Yes Step Rule for V-CAN1/6F"
	when
		StepPerformed(stepId=="V-CAN1/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6F"));
end
rule "No Step Rule for V-CAN1/6F"
	when
		StepPerformed(stepId=="V-CAN1/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6F"));
end
rule "Yes Step Rule for V-CAN1/6F-YES"
	when
		StepPerformed(stepId=="V-CAN1/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6F-YES"));
end
rule "No Step Rule for V-CAN1/6F-YES"
	when
		StepPerformed(stepId=="V-CAN1/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6F-YES"));
end
rule "Yes Step Rule for V-CAN1/6F-NO"
	when
		StepPerformed(stepId=="V-CAN1/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/6F-NO"));
end
rule "No Step Rule for V-CAN1/6F-NO"
	when
		StepPerformed(stepId=="V-CAN1/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/6F-NO"));
end
rule "Yes Step Rule for V-CAN1/7A"
	when
		StepPerformed(stepId=="V-CAN1/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/7A"));
end
rule "No Step Rule for V-CAN1/7A"
	when
		StepPerformed(stepId=="V-CAN1/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/7A"));
end
rule "Yes Step Rule for V-CAN1/7A-YES"
	when
		StepPerformed(stepId=="V-CAN1/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/7A-YES"));
end
rule "No Step Rule for V-CAN1/7A-YES"
	when
		StepPerformed(stepId=="V-CAN1/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/7A-YES"));
end
rule "Yes Step Rule for V-CAN1/7A-NO"
	when
		StepPerformed(stepId=="V-CAN1/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/7A-NO"));
end
rule "No Step Rule for V-CAN1/7A-NO"
	when
		StepPerformed(stepId=="V-CAN1/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/7A-NO"));
end
rule "Yes Step Rule for V-CAN1/7B"
	when
		StepPerformed(stepId=="V-CAN1/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/7B"));
end
rule "No Step Rule for V-CAN1/7B"
	when
		StepPerformed(stepId=="V-CAN1/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/2A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/7B"));
end
rule "Yes Step Rule for V-CAN1/7B-YES"
	when
		StepPerformed(stepId=="V-CAN1/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/7B-YES"));
end
rule "No Step Rule for V-CAN1/7B-YES"
	when
		StepPerformed(stepId=="V-CAN1/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/7B-YES"));
end
rule "Yes Step Rule for V-CAN1/7B-NO"
	when
		StepPerformed(stepId=="V-CAN1/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/2A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/7B-NO"));
end
rule "No Step Rule for V-CAN1/7B-NO"
	when
		StepPerformed(stepId=="V-CAN1/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/7B-NO"));
end
rule "Yes Step Rule for V-CAN1/8A"
	when
		StepPerformed(stepId=="V-CAN1/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/8A"));
end
rule "No Step Rule for V-CAN1/8A"
	when
		StepPerformed(stepId=="V-CAN1/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/8A"));
end
rule "Yes Step Rule for V-CAN1/8A-YES"
	when
		StepPerformed(stepId=="V-CAN1/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/8A-YES"));
end
rule "No Step Rule for V-CAN1/8A-YES"
	when
		StepPerformed(stepId=="V-CAN1/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/8A-YES"));
end
rule "Yes Step Rule for V-CAN1/8A-NO"
	when
		StepPerformed(stepId=="V-CAN1/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN1/1A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN1/8A-NO"));
end
rule "No Step Rule for V-CAN1/8A-NO"
	when
		StepPerformed(stepId=="V-CAN1/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN1/8A-NO"));
end
rule "Yes Step Rule for V-CAN2/1A"
	when
		StepPerformed(stepId=="V-CAN2/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/1A"));
end
rule "No Step Rule for V-CAN2/1A"
	when
		StepPerformed(stepId=="V-CAN2/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/1A"));
end
rule "Yes Step Rule for V-CAN2/1A-YES"
	when
		StepPerformed(stepId=="V-CAN2/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/1A-YES"));
end
rule "No Step Rule for V-CAN2/1A-YES"
	when
		StepPerformed(stepId=="V-CAN2/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/1A-YES"));
end
rule "Yes Step Rule for V-CAN2/1A-NO"
	when
		StepPerformed(stepId=="V-CAN2/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/1B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/1A-NO"));
end
rule "No Step Rule for V-CAN2/1A-NO"
	when
		StepPerformed(stepId=="V-CAN2/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/1A-NO"));
end
rule "Yes Step Rule for V-CAN2/1B"
	when
		StepPerformed(stepId=="V-CAN2/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/1B"));
end
rule "No Step Rule for V-CAN2/1B"
	when
		StepPerformed(stepId=="V-CAN2/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/1B"));
end
rule "Yes Step Rule for V-CAN2/1B-YES"
	when
		StepPerformed(stepId=="V-CAN2/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/2A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/1B-YES"));
end
rule "No Step Rule for V-CAN2/1B-YES"
	when
		StepPerformed(stepId=="V-CAN2/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/1B-YES"));
end
rule "Yes Step Rule for V-CAN2/1B-NO"
	when
		StepPerformed(stepId=="V-CAN2/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/1B-NO"));
end
rule "No Step Rule for V-CAN2/1B-NO"
	when
		StepPerformed(stepId=="V-CAN2/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/1B-NO"));
end
rule "Yes Step Rule for V-CAN2/2A"
	when
		StepPerformed(stepId=="V-CAN2/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/2A"));
end
rule "No Step Rule for V-CAN2/2A"
	when
		StepPerformed(stepId=="V-CAN2/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/2B",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/2A"));
end
rule "Yes Step Rule for V-CAN2/2A-YES"
	when
		StepPerformed(stepId=="V-CAN2/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/2B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/2A-YES"));
end
rule "No Step Rule for V-CAN2/2A-YES"
	when
		StepPerformed(stepId=="V-CAN2/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/2A-YES"));
end
rule "Yes Step Rule for V-CAN2/2A-NO"
	when
		StepPerformed(stepId=="V-CAN2/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/2B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/2A-NO"));
end
rule "No Step Rule for V-CAN2/2A-NO"
	when
		StepPerformed(stepId=="V-CAN2/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/2A-NO"));
end
rule "Yes Step Rule for V-CAN2/2B"
	when
		StepPerformed(stepId=="V-CAN2/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/2B"));
end
rule "No Step Rule for V-CAN2/2B"
	when
		StepPerformed(stepId=="V-CAN2/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/3A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/2B"));
end
rule "Yes Step Rule for V-CAN2/2B-YES"
	when
		StepPerformed(stepId=="V-CAN2/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/2B-YES"));
end
rule "No Step Rule for V-CAN2/2B-YES"
	when
		StepPerformed(stepId=="V-CAN2/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/2B-YES"));
end
rule "Yes Step Rule for V-CAN2/2B-NO"
	when
		StepPerformed(stepId=="V-CAN2/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/3A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/2B-NO"));
end
rule "No Step Rule for V-CAN2/2B-NO"
	when
		StepPerformed(stepId=="V-CAN2/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/2B-NO"));
end
rule "Yes Step Rule for V-CAN2/3A"
	when
		StepPerformed(stepId=="V-CAN2/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/3B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/3A"));
end
rule "No Step Rule for V-CAN2/3A"
	when
		StepPerformed(stepId=="V-CAN2/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/3A"));
end
rule "Yes Step Rule for V-CAN2/3A-YES"
	when
		StepPerformed(stepId=="V-CAN2/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/3B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/3A-YES"));
end
rule "No Step Rule for V-CAN2/3A-YES"
	when
		StepPerformed(stepId=="V-CAN2/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/3A-YES"));
end
rule "Yes Step Rule for V-CAN2/3A-NO"
	when
		StepPerformed(stepId=="V-CAN2/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/3A-NO"));
end
rule "No Step Rule for V-CAN2/3A-NO"
	when
		StepPerformed(stepId=="V-CAN2/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/3A-NO"));
end
rule "Yes Step Rule for V-CAN2/3B"
	when
		StepPerformed(stepId=="V-CAN2/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/3B"));
end
rule "No Step Rule for V-CAN2/3B"
	when
		StepPerformed(stepId=="V-CAN2/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/3C",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/3B"));
end
rule "Yes Step Rule for V-CAN2/3B-YES"
	when
		StepPerformed(stepId=="V-CAN2/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/4A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/3B-YES"));
end
rule "No Step Rule for V-CAN2/3B-YES"
	when
		StepPerformed(stepId=="V-CAN2/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/3B-YES"));
end
rule "Yes Step Rule for V-CAN2/3B-NO"
	when
		StepPerformed(stepId=="V-CAN2/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/3C",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/3B-NO"));
end
rule "No Step Rule for V-CAN2/3B-NO"
	when
		StepPerformed(stepId=="V-CAN2/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/3B-NO"));
end
rule "Yes Step Rule for V-CAN2/3C"
	when
		StepPerformed(stepId=="V-CAN2/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/3C"));
end
rule "No Step Rule for V-CAN2/3C"
	when
		StepPerformed(stepId=="V-CAN2/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/3C"));
end
rule "Yes Step Rule for V-CAN2/3C-YES"
	when
		StepPerformed(stepId=="V-CAN2/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/5A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/3C-YES"));
end
rule "No Step Rule for V-CAN2/3C-YES"
	when
		StepPerformed(stepId=="V-CAN2/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/3C-YES"));
end
rule "Yes Step Rule for V-CAN2/3C-NO"
	when
		StepPerformed(stepId=="V-CAN2/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/3C-NO"));
end
rule "No Step Rule for V-CAN2/3C-NO"
	when
		StepPerformed(stepId=="V-CAN2/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/3C-NO"));
end
rule "Yes Step Rule for V-CAN2/4A"
	when
		StepPerformed(stepId=="V-CAN2/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/4A"));
end
rule "No Step Rule for V-CAN2/4A"
	when
		StepPerformed(stepId=="V-CAN2/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/4B",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/4A"));
end
rule "Yes Step Rule for V-CAN2/4A-YES"
	when
		StepPerformed(stepId=="V-CAN2/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/4A-YES"));
end
rule "No Step Rule for V-CAN2/4A-YES"
	when
		StepPerformed(stepId=="V-CAN2/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/4A-YES"));
end
rule "Yes Step Rule for V-CAN2/4A-NO"
	when
		StepPerformed(stepId=="V-CAN2/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/4B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/4A-NO"));
end
rule "No Step Rule for V-CAN2/4A-NO"
	when
		StepPerformed(stepId=="V-CAN2/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/4A-NO"));
end
rule "Yes Step Rule for V-CAN2/4B"
	when
		StepPerformed(stepId=="V-CAN2/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/4B"));
end
rule "No Step Rule for V-CAN2/4B"
	when
		StepPerformed(stepId=="V-CAN2/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/4B"));
end
rule "Yes Step Rule for V-CAN2/4B-YES"
	when
		StepPerformed(stepId=="V-CAN2/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/4B-YES"));
end
rule "No Step Rule for V-CAN2/4B-YES"
	when
		StepPerformed(stepId=="V-CAN2/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/4B-YES"));
end
rule "Yes Step Rule for V-CAN2/4B-NO"
	when
		StepPerformed(stepId=="V-CAN2/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/4B-NO"));
end
rule "No Step Rule for V-CAN2/4B-NO"
	when
		StepPerformed(stepId=="V-CAN2/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/4B-NO"));
end
rule "Yes Step Rule for V-CAN2/5A"
	when
		StepPerformed(stepId=="V-CAN2/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/5A"));
end
rule "No Step Rule for V-CAN2/5A"
	when
		StepPerformed(stepId=="V-CAN2/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/5B",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/5A"));
end
rule "Yes Step Rule for V-CAN2/5A-YES"
	when
		StepPerformed(stepId=="V-CAN2/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/5A-YES"));
end
rule "No Step Rule for V-CAN2/5A-YES"
	when
		StepPerformed(stepId=="V-CAN2/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/5A-YES"));
end
rule "Yes Step Rule for V-CAN2/5A-NO"
	when
		StepPerformed(stepId=="V-CAN2/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/5B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/5A-NO"));
end
rule "No Step Rule for V-CAN2/5A-NO"
	when
		StepPerformed(stepId=="V-CAN2/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/5A-NO"));
end
rule "Yes Step Rule for V-CAN2/5B"
	when
		StepPerformed(stepId=="V-CAN2/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/5B"));
end
rule "No Step Rule for V-CAN2/5B"
	when
		StepPerformed(stepId=="V-CAN2/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/5B"));
end
rule "Yes Step Rule for V-CAN2/5B-YES"
	when
		StepPerformed(stepId=="V-CAN2/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/5B-YES"));
end
rule "No Step Rule for V-CAN2/5B-YES"
	when
		StepPerformed(stepId=="V-CAN2/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/5B-YES"));
end
rule "Yes Step Rule for V-CAN2/5B-NO"
	when
		StepPerformed(stepId=="V-CAN2/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/5B-NO"));
end
rule "No Step Rule for V-CAN2/5B-NO"
	when
		StepPerformed(stepId=="V-CAN2/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/5B-NO"));
end
rule "Yes Step Rule for V-CAN2/6A"
	when
		StepPerformed(stepId=="V-CAN2/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6A"));
end
rule "No Step Rule for V-CAN2/6A"
	when
		StepPerformed(stepId=="V-CAN2/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6B",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6A"));
end
rule "Yes Step Rule for V-CAN2/6A-YES"
	when
		StepPerformed(stepId=="V-CAN2/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6D",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6A-YES"));
end
rule "No Step Rule for V-CAN2/6A-YES"
	when
		StepPerformed(stepId=="V-CAN2/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6A-YES"));
end
rule "Yes Step Rule for V-CAN2/6A-NO"
	when
		StepPerformed(stepId=="V-CAN2/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6B",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6A-NO"));
end
rule "No Step Rule for V-CAN2/6A-NO"
	when
		StepPerformed(stepId=="V-CAN2/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6A-NO"));
end
rule "Yes Step Rule for V-CAN2/6B"
	when
		StepPerformed(stepId=="V-CAN2/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6B"));
end
rule "No Step Rule for V-CAN2/6B"
	when
		StepPerformed(stepId=="V-CAN2/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6C",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6B"));
end
rule "Yes Step Rule for V-CAN2/6B-YES"
	when
		StepPerformed(stepId=="V-CAN2/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6B-YES"));
end
rule "No Step Rule for V-CAN2/6B-YES"
	when
		StepPerformed(stepId=="V-CAN2/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6B-YES"));
end
rule "Yes Step Rule for V-CAN2/6B-NO"
	when
		StepPerformed(stepId=="V-CAN2/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6C",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6B-NO"));
end
rule "No Step Rule for V-CAN2/6B-NO"
	when
		StepPerformed(stepId=="V-CAN2/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6B-NO"));
end
rule "Yes Step Rule for V-CAN2/6C"
	when
		StepPerformed(stepId=="V-CAN2/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6C"));
end
rule "No Step Rule for V-CAN2/6C"
	when
		StepPerformed(stepId=="V-CAN2/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6C"));
end
rule "Yes Step Rule for V-CAN2/6C-YES"
	when
		StepPerformed(stepId=="V-CAN2/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6C-YES"));
end
rule "No Step Rule for V-CAN2/6C-YES"
	when
		StepPerformed(stepId=="V-CAN2/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6C-YES"));
end
rule "Yes Step Rule for V-CAN2/6C-NO"
	when
		StepPerformed(stepId=="V-CAN2/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6C-NO"));
end
rule "No Step Rule for V-CAN2/6C-NO"
	when
		StepPerformed(stepId=="V-CAN2/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6C-NO"));
end
rule "Yes Step Rule for V-CAN2/6D"
	when
		StepPerformed(stepId=="V-CAN2/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6D"));
end
rule "No Step Rule for V-CAN2/6D"
	when
		StepPerformed(stepId=="V-CAN2/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6E",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6D"));
end
rule "Yes Step Rule for V-CAN2/6D-YES"
	when
		StepPerformed(stepId=="V-CAN2/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6D-YES"));
end
rule "No Step Rule for V-CAN2/6D-YES"
	when
		StepPerformed(stepId=="V-CAN2/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6D-YES"));
end
rule "Yes Step Rule for V-CAN2/6D-NO"
	when
		StepPerformed(stepId=="V-CAN2/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6E",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6D-NO"));
end
rule "No Step Rule for V-CAN2/6D-NO"
	when
		StepPerformed(stepId=="V-CAN2/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6D-NO"));
end
rule "Yes Step Rule for V-CAN2/6E"
	when
		StepPerformed(stepId=="V-CAN2/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6E"));
end
rule "No Step Rule for V-CAN2/6E"
	when
		StepPerformed(stepId=="V-CAN2/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6F",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6E"));
end
rule "Yes Step Rule for V-CAN2/6E-YES"
	when
		StepPerformed(stepId=="V-CAN2/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6E-YES"));
end
rule "No Step Rule for V-CAN2/6E-YES"
	when
		StepPerformed(stepId=="V-CAN2/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6E-YES"));
end
rule "Yes Step Rule for V-CAN2/6E-NO"
	when
		StepPerformed(stepId=="V-CAN2/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6F",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6E-NO"));
end
rule "No Step Rule for V-CAN2/6E-NO"
	when
		StepPerformed(stepId=="V-CAN2/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6E-NO"));
end
rule "Yes Step Rule for V-CAN2/6F"
	when
		StepPerformed(stepId=="V-CAN2/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6F"));
end
rule "No Step Rule for V-CAN2/6F"
	when
		StepPerformed(stepId=="V-CAN2/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6F"));
end
rule "Yes Step Rule for V-CAN2/6F-YES"
	when
		StepPerformed(stepId=="V-CAN2/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6F-YES"));
end
rule "No Step Rule for V-CAN2/6F-YES"
	when
		StepPerformed(stepId=="V-CAN2/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6F-YES"));
end
rule "Yes Step Rule for V-CAN2/6F-NO"
	when
		StepPerformed(stepId=="V-CAN2/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/6F-NO"));
end
rule "No Step Rule for V-CAN2/6F-NO"
	when
		StepPerformed(stepId=="V-CAN2/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/6F-NO"));
end
rule "Yes Step Rule for V-CAN2/7A"
	when
		StepPerformed(stepId=="V-CAN2/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/7A"));
end
rule "No Step Rule for V-CAN2/7A"
	when
		StepPerformed(stepId=="V-CAN2/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/7A"));
end
rule "Yes Step Rule for V-CAN2/7A-YES"
	when
		StepPerformed(stepId=="V-CAN2/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/7A-YES"));
end
rule "No Step Rule for V-CAN2/7A-YES"
	when
		StepPerformed(stepId=="V-CAN2/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/7A-YES"));
end
rule "Yes Step Rule for V-CAN2/7A-NO"
	when
		StepPerformed(stepId=="V-CAN2/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/7A-NO"));
end
rule "No Step Rule for V-CAN2/7A-NO"
	when
		StepPerformed(stepId=="V-CAN2/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/7A-NO"));
end
rule "Yes Step Rule for V-CAN2/7B"
	when
		StepPerformed(stepId=="V-CAN2/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/7B"));
end
rule "No Step Rule for V-CAN2/7B"
	when
		StepPerformed(stepId=="V-CAN2/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/2A",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/7B"));
end
rule "Yes Step Rule for V-CAN2/7B-YES"
	when
		StepPerformed(stepId=="V-CAN2/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/7B-YES"));
end
rule "No Step Rule for V-CAN2/7B-YES"
	when
		StepPerformed(stepId=="V-CAN2/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/7B-YES"));
end
rule "Yes Step Rule for V-CAN2/7B-NO"
	when
		StepPerformed(stepId=="V-CAN2/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/2A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/7B-NO"));
end
rule "No Step Rule for V-CAN2/7B-NO"
	when
		StepPerformed(stepId=="V-CAN2/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/7B-NO"));
end
rule "Yes Step Rule for V-CAN2/8A"
	when
		StepPerformed(stepId=="V-CAN2/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/8A"));
end
rule "No Step Rule for V-CAN2/8A"
	when
		StepPerformed(stepId=="V-CAN2/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/8A"));
end
rule "Yes Step Rule for V-CAN2/8A-YES"
	when
		StepPerformed(stepId=="V-CAN2/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/8A-YES"));
end
rule "No Step Rule for V-CAN2/8A-YES"
	when
		StepPerformed(stepId=="V-CAN2/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/8A-YES"));
end
rule "Yes Step Rule for V-CAN2/8A-NO"
	when
		StepPerformed(stepId=="V-CAN2/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("V-CAN2/1A",$sum.doubleValue() + 100.0,"Answered Yes to step V-CAN2/8A-NO"));
end
rule "No Step Rule for V-CAN2/8A-NO"
	when
		StepPerformed(stepId=="V-CAN2/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step V-CAN2/8A-NO"));
end
rule "Yes Step Rule for I-CAN/1A"
	when
		StepPerformed(stepId=="I-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/1A"));
end
rule "No Step Rule for I-CAN/1A"
	when
		StepPerformed(stepId=="I-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/1A"));
end
rule "Yes Step Rule for I-CAN/1A-YES"
	when
		StepPerformed(stepId=="I-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/1A-YES"));
end
rule "No Step Rule for I-CAN/1A-YES"
	when
		StepPerformed(stepId=="I-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/1A-YES"));
end
rule "Yes Step Rule for I-CAN/1A-NO"
	when
		StepPerformed(stepId=="I-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/1B",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/1A-NO"));
end
rule "No Step Rule for I-CAN/1A-NO"
	when
		StepPerformed(stepId=="I-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/1A-NO"));
end
rule "Yes Step Rule for I-CAN/1B"
	when
		StepPerformed(stepId=="I-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/1B"));
end
rule "No Step Rule for I-CAN/1B"
	when
		StepPerformed(stepId=="I-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/1B"));
end
rule "Yes Step Rule for I-CAN/1B-YES"
	when
		StepPerformed(stepId=="I-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/1B-YES"));
end
rule "No Step Rule for I-CAN/1B-YES"
	when
		StepPerformed(stepId=="I-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/1B-YES"));
end
rule "Yes Step Rule for I-CAN/1B-NO"
	when
		StepPerformed(stepId=="I-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7B",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/1B-NO"));
end
rule "No Step Rule for I-CAN/1B-NO"
	when
		StepPerformed(stepId=="I-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/1B-NO"));
end
rule "Yes Step Rule for I-CAN/2A"
	when
		StepPerformed(stepId=="I-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/2A"));
end
rule "No Step Rule for I-CAN/2A"
	when
		StepPerformed(stepId=="I-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/2B",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/2A"));
end
rule "Yes Step Rule for I-CAN/2A-YES"
	when
		StepPerformed(stepId=="I-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/2A-YES"));
end
rule "No Step Rule for I-CAN/2A-YES"
	when
		StepPerformed(stepId=="I-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/2A-YES"));
end
rule "Yes Step Rule for I-CAN/2A-NO"
	when
		StepPerformed(stepId=="I-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/2A-NO"));
end
rule "No Step Rule for I-CAN/2A-NO"
	when
		StepPerformed(stepId=="I-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/2A-NO"));
end
rule "Yes Step Rule for I-CAN/2B"
	when
		StepPerformed(stepId=="I-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/2B"));
end
rule "No Step Rule for I-CAN/2B"
	when
		StepPerformed(stepId=="I-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/3A",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/2B"));
end
rule "Yes Step Rule for I-CAN/2B-YES"
	when
		StepPerformed(stepId=="I-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/2B-YES"));
end
rule "No Step Rule for I-CAN/2B-YES"
	when
		StepPerformed(stepId=="I-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/2B-YES"));
end
rule "Yes Step Rule for I-CAN/2B-NO"
	when
		StepPerformed(stepId=="I-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/3A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/2B-NO"));
end
rule "No Step Rule for I-CAN/2B-NO"
	when
		StepPerformed(stepId=="I-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/2B-NO"));
end
rule "Yes Step Rule for I-CAN/3A"
	when
		StepPerformed(stepId=="I-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/3A"));
end
rule "No Step Rule for I-CAN/3A"
	when
		StepPerformed(stepId=="I-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6A",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/3A"));
end
rule "Yes Step Rule for I-CAN/3A-YES"
	when
		StepPerformed(stepId=="I-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/3A-YES"));
end
rule "No Step Rule for I-CAN/3A-YES"
	when
		StepPerformed(stepId=="I-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/3A-YES"));
end
rule "Yes Step Rule for I-CAN/3A-NO"
	when
		StepPerformed(stepId=="I-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/3A-NO"));
end
rule "No Step Rule for I-CAN/3A-NO"
	when
		StepPerformed(stepId=="I-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/3A-NO"));
end
rule "Yes Step Rule for I-CAN/3B"
	when
		StepPerformed(stepId=="I-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/3B"));
end
rule "No Step Rule for I-CAN/3B"
	when
		StepPerformed(stepId=="I-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/3C",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/3B"));
end
rule "Yes Step Rule for I-CAN/3B-YES"
	when
		StepPerformed(stepId=="I-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/4A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/3B-YES"));
end
rule "No Step Rule for I-CAN/3B-YES"
	when
		StepPerformed(stepId=="I-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/3B-YES"));
end
rule "Yes Step Rule for I-CAN/3B-NO"
	when
		StepPerformed(stepId=="I-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/3C",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/3B-NO"));
end
rule "No Step Rule for I-CAN/3B-NO"
	when
		StepPerformed(stepId=="I-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/3B-NO"));
end
rule "Yes Step Rule for I-CAN/3C"
	when
		StepPerformed(stepId=="I-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/3C"));
end
rule "No Step Rule for I-CAN/3C"
	when
		StepPerformed(stepId=="I-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/3C"));
end
rule "Yes Step Rule for I-CAN/3C-YES"
	when
		StepPerformed(stepId=="I-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/3C-YES"));
end
rule "No Step Rule for I-CAN/3C-YES"
	when
		StepPerformed(stepId=="I-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/3C-YES"));
end
rule "Yes Step Rule for I-CAN/3C-NO"
	when
		StepPerformed(stepId=="I-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/3C-NO"));
end
rule "No Step Rule for I-CAN/3C-NO"
	when
		StepPerformed(stepId=="I-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/3C-NO"));
end
rule "Yes Step Rule for I-CAN/4A"
	when
		StepPerformed(stepId=="I-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/4A"));
end
rule "No Step Rule for I-CAN/4A"
	when
		StepPerformed(stepId=="I-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/4B",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/4A"));
end
rule "Yes Step Rule for I-CAN/4A-YES"
	when
		StepPerformed(stepId=="I-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/4A-YES"));
end
rule "No Step Rule for I-CAN/4A-YES"
	when
		StepPerformed(stepId=="I-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/4A-YES"));
end
rule "Yes Step Rule for I-CAN/4A-NO"
	when
		StepPerformed(stepId=="I-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/4B",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/4A-NO"));
end
rule "No Step Rule for I-CAN/4A-NO"
	when
		StepPerformed(stepId=="I-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/4A-NO"));
end
rule "Yes Step Rule for I-CAN/4B"
	when
		StepPerformed(stepId=="I-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/4B"));
end
rule "No Step Rule for I-CAN/4B"
	when
		StepPerformed(stepId=="I-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/4B"));
end
rule "Yes Step Rule for I-CAN/4B-YES"
	when
		StepPerformed(stepId=="I-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/4B-YES"));
end
rule "No Step Rule for I-CAN/4B-YES"
	when
		StepPerformed(stepId=="I-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/4B-YES"));
end
rule "Yes Step Rule for I-CAN/4B-NO"
	when
		StepPerformed(stepId=="I-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/4B-NO"));
end
rule "No Step Rule for I-CAN/4B-NO"
	when
		StepPerformed(stepId=="I-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/4B-NO"));
end
rule "Yes Step Rule for I-CAN/5A"
	when
		StepPerformed(stepId=="I-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/5A"));
end
rule "No Step Rule for I-CAN/5A"
	when
		StepPerformed(stepId=="I-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/5B",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/5A"));
end
rule "Yes Step Rule for I-CAN/5A-YES"
	when
		StepPerformed(stepId=="I-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/5A-YES"));
end
rule "No Step Rule for I-CAN/5A-YES"
	when
		StepPerformed(stepId=="I-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/5A-YES"));
end
rule "Yes Step Rule for I-CAN/5A-NO"
	when
		StepPerformed(stepId=="I-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/5B",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/5A-NO"));
end
rule "No Step Rule for I-CAN/5A-NO"
	when
		StepPerformed(stepId=="I-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/5A-NO"));
end
rule "Yes Step Rule for I-CAN/5B"
	when
		StepPerformed(stepId=="I-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/5B"));
end
rule "No Step Rule for I-CAN/5B"
	when
		StepPerformed(stepId=="I-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/5B"));
end
rule "Yes Step Rule for I-CAN/5B-YES"
	when
		StepPerformed(stepId=="I-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/5B-YES"));
end
rule "No Step Rule for I-CAN/5B-YES"
	when
		StepPerformed(stepId=="I-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/5B-YES"));
end
rule "Yes Step Rule for I-CAN/5B-NO"
	when
		StepPerformed(stepId=="I-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/5B-NO"));
end
rule "No Step Rule for I-CAN/5B-NO"
	when
		StepPerformed(stepId=="I-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/5B-NO"));
end
rule "Yes Step Rule for I-CAN/6A"
	when
		StepPerformed(stepId=="I-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6A"));
end
rule "No Step Rule for I-CAN/6A"
	when
		StepPerformed(stepId=="I-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6B",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6A"));
end
rule "Yes Step Rule for I-CAN/6A-YES"
	when
		StepPerformed(stepId=="I-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6D",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6A-YES"));
end
rule "No Step Rule for I-CAN/6A-YES"
	when
		StepPerformed(stepId=="I-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6A-YES"));
end
rule "Yes Step Rule for I-CAN/6A-NO"
	when
		StepPerformed(stepId=="I-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6B",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6A-NO"));
end
rule "No Step Rule for I-CAN/6A-NO"
	when
		StepPerformed(stepId=="I-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6A-NO"));
end
rule "Yes Step Rule for I-CAN/6B"
	when
		StepPerformed(stepId=="I-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6B"));
end
rule "No Step Rule for I-CAN/6B"
	when
		StepPerformed(stepId=="I-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6C",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6B"));
end
rule "Yes Step Rule for I-CAN/6B-YES"
	when
		StepPerformed(stepId=="I-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6B-YES"));
end
rule "No Step Rule for I-CAN/6B-YES"
	when
		StepPerformed(stepId=="I-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6B-YES"));
end
rule "Yes Step Rule for I-CAN/6B-NO"
	when
		StepPerformed(stepId=="I-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6C",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6B-NO"));
end
rule "No Step Rule for I-CAN/6B-NO"
	when
		StepPerformed(stepId=="I-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6B-NO"));
end
rule "Yes Step Rule for I-CAN/6C"
	when
		StepPerformed(stepId=="I-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6C"));
end
rule "No Step Rule for I-CAN/6C"
	when
		StepPerformed(stepId=="I-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6C"));
end
rule "Yes Step Rule for I-CAN/6C-YES"
	when
		StepPerformed(stepId=="I-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6C-YES"));
end
rule "No Step Rule for I-CAN/6C-YES"
	when
		StepPerformed(stepId=="I-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6C-YES"));
end
rule "Yes Step Rule for I-CAN/6C-NO"
	when
		StepPerformed(stepId=="I-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6C-NO"));
end
rule "No Step Rule for I-CAN/6C-NO"
	when
		StepPerformed(stepId=="I-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6C-NO"));
end
rule "Yes Step Rule for I-CAN/6D"
	when
		StepPerformed(stepId=="I-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6D"));
end
rule "No Step Rule for I-CAN/6D"
	when
		StepPerformed(stepId=="I-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6E",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6D"));
end
rule "Yes Step Rule for I-CAN/6D-YES"
	when
		StepPerformed(stepId=="I-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6D-YES"));
end
rule "No Step Rule for I-CAN/6D-YES"
	when
		StepPerformed(stepId=="I-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6D-YES"));
end
rule "Yes Step Rule for I-CAN/6D-NO"
	when
		StepPerformed(stepId=="I-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6E",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6D-NO"));
end
rule "No Step Rule for I-CAN/6D-NO"
	when
		StepPerformed(stepId=="I-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6D-NO"));
end
rule "Yes Step Rule for I-CAN/6E"
	when
		StepPerformed(stepId=="I-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6E"));
end
rule "No Step Rule for I-CAN/6E"
	when
		StepPerformed(stepId=="I-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6F",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6E"));
end
rule "Yes Step Rule for I-CAN/6E-YES"
	when
		StepPerformed(stepId=="I-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6E-YES"));
end
rule "No Step Rule for I-CAN/6E-YES"
	when
		StepPerformed(stepId=="I-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6E-YES"));
end
rule "Yes Step Rule for I-CAN/6E-NO"
	when
		StepPerformed(stepId=="I-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6F",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6E-NO"));
end
rule "No Step Rule for I-CAN/6E-NO"
	when
		StepPerformed(stepId=="I-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6E-NO"));
end
rule "Yes Step Rule for I-CAN/6F"
	when
		StepPerformed(stepId=="I-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6F"));
end
rule "No Step Rule for I-CAN/6F"
	when
		StepPerformed(stepId=="I-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6F"));
end
rule "Yes Step Rule for I-CAN/6F-YES"
	when
		StepPerformed(stepId=="I-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6F-YES"));
end
rule "No Step Rule for I-CAN/6F-YES"
	when
		StepPerformed(stepId=="I-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6F-YES"));
end
rule "Yes Step Rule for I-CAN/6F-NO"
	when
		StepPerformed(stepId=="I-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/6F-NO"));
end
rule "No Step Rule for I-CAN/6F-NO"
	when
		StepPerformed(stepId=="I-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/6F-NO"));
end
rule "Yes Step Rule for I-CAN/7A"
	when
		StepPerformed(stepId=="I-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/7A"));
end
rule "No Step Rule for I-CAN/7A"
	when
		StepPerformed(stepId=="I-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/7A"));
end
rule "Yes Step Rule for I-CAN/7A-YES"
	when
		StepPerformed(stepId=="I-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/7A-YES"));
end
rule "No Step Rule for I-CAN/7A-YES"
	when
		StepPerformed(stepId=="I-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/7A-YES"));
end
rule "Yes Step Rule for I-CAN/7A-NO"
	when
		StepPerformed(stepId=="I-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/7A-NO"));
end
rule "No Step Rule for I-CAN/7A-NO"
	when
		StepPerformed(stepId=="I-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/7A-NO"));
end
rule "Yes Step Rule for I-CAN/7B"
	when
		StepPerformed(stepId=="I-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/7B"));
end
rule "No Step Rule for I-CAN/7B"
	when
		StepPerformed(stepId=="I-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/2A",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/7B"));
end
rule "Yes Step Rule for I-CAN/7B-YES"
	when
		StepPerformed(stepId=="I-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/7B-YES"));
end
rule "No Step Rule for I-CAN/7B-YES"
	when
		StepPerformed(stepId=="I-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/7B-YES"));
end
rule "Yes Step Rule for I-CAN/7B-NO"
	when
		StepPerformed(stepId=="I-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/7B-NO"));
end
rule "No Step Rule for I-CAN/7B-NO"
	when
		StepPerformed(stepId=="I-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/7B-NO"));
end
rule "Yes Step Rule for I-CAN/8A"
	when
		StepPerformed(stepId=="I-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/8A"));
end
rule "No Step Rule for I-CAN/8A"
	when
		StepPerformed(stepId=="I-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/8A"));
end
rule "Yes Step Rule for I-CAN/8A-YES"
	when
		StepPerformed(stepId=="I-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/8A-YES"));
end
rule "No Step Rule for I-CAN/8A-YES"
	when
		StepPerformed(stepId=="I-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/8A-YES"));
end
rule "Yes Step Rule for I-CAN/8A-NO"
	when
		StepPerformed(stepId=="I-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("I-CAN/1A",$sum.doubleValue() + 100.0,"Answered Yes to step I-CAN/8A-NO"));
end
rule "No Step Rule for I-CAN/8A-NO"
	when
		StepPerformed(stepId=="I-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step I-CAN/8A-NO"));
end
rule "Yes Step Rule for D-CAN/1A"
	when
		StepPerformed(stepId=="D-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/1A"));
end
rule "No Step Rule for D-CAN/1A"
	when
		StepPerformed(stepId=="D-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/1A"));
end
rule "Yes Step Rule for D-CAN/1A-YES"
	when
		StepPerformed(stepId=="D-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/1A-YES"));
end
rule "No Step Rule for D-CAN/1A-YES"
	when
		StepPerformed(stepId=="D-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/1A-YES"));
end
rule "Yes Step Rule for D-CAN/1A-NO"
	when
		StepPerformed(stepId=="D-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/1B",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/1A-NO"));
end
rule "No Step Rule for D-CAN/1A-NO"
	when
		StepPerformed(stepId=="D-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/1A-NO"));
end
rule "Yes Step Rule for D-CAN/1B"
	when
		StepPerformed(stepId=="D-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/1B"));
end
rule "No Step Rule for D-CAN/1B"
	when
		StepPerformed(stepId=="D-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/1B"));
end
rule "Yes Step Rule for D-CAN/1B-YES"
	when
		StepPerformed(stepId=="D-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/1B-YES"));
end
rule "No Step Rule for D-CAN/1B-YES"
	when
		StepPerformed(stepId=="D-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/1B-YES"));
end
rule "Yes Step Rule for D-CAN/1B-NO"
	when
		StepPerformed(stepId=="D-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7B",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/1B-NO"));
end
rule "No Step Rule for D-CAN/1B-NO"
	when
		StepPerformed(stepId=="D-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/1B-NO"));
end
rule "Yes Step Rule for D-CAN/2A"
	when
		StepPerformed(stepId=="D-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/2A"));
end
rule "No Step Rule for D-CAN/2A"
	when
		StepPerformed(stepId=="D-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/2B",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/2A"));
end
rule "Yes Step Rule for D-CAN/2A-YES"
	when
		StepPerformed(stepId=="D-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/2A-YES"));
end
rule "No Step Rule for D-CAN/2A-YES"
	when
		StepPerformed(stepId=="D-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/2A-YES"));
end
rule "Yes Step Rule for D-CAN/2A-NO"
	when
		StepPerformed(stepId=="D-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/2A-NO"));
end
rule "No Step Rule for D-CAN/2A-NO"
	when
		StepPerformed(stepId=="D-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/2A-NO"));
end
rule "Yes Step Rule for D-CAN/2B"
	when
		StepPerformed(stepId=="D-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/2B"));
end
rule "No Step Rule for D-CAN/2B"
	when
		StepPerformed(stepId=="D-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/3A",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/2B"));
end
rule "Yes Step Rule for D-CAN/2B-YES"
	when
		StepPerformed(stepId=="D-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/2B-YES"));
end
rule "No Step Rule for D-CAN/2B-YES"
	when
		StepPerformed(stepId=="D-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/2B-YES"));
end
rule "Yes Step Rule for D-CAN/2B-NO"
	when
		StepPerformed(stepId=="D-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/3A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/2B-NO"));
end
rule "No Step Rule for D-CAN/2B-NO"
	when
		StepPerformed(stepId=="D-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/2B-NO"));
end
rule "Yes Step Rule for D-CAN/3A"
	when
		StepPerformed(stepId=="D-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/3A"));
end
rule "No Step Rule for D-CAN/3A"
	when
		StepPerformed(stepId=="D-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6A",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/3A"));
end
rule "Yes Step Rule for D-CAN/3A-YES"
	when
		StepPerformed(stepId=="D-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/3A-YES"));
end
rule "No Step Rule for D-CAN/3A-YES"
	when
		StepPerformed(stepId=="D-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/3A-YES"));
end
rule "Yes Step Rule for D-CAN/3A-NO"
	when
		StepPerformed(stepId=="D-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/3A-NO"));
end
rule "No Step Rule for D-CAN/3A-NO"
	when
		StepPerformed(stepId=="D-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/3A-NO"));
end
rule "Yes Step Rule for D-CAN/3B"
	when
		StepPerformed(stepId=="D-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/3B"));
end
rule "No Step Rule for D-CAN/3B"
	when
		StepPerformed(stepId=="D-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/3C",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/3B"));
end
rule "Yes Step Rule for D-CAN/3B-YES"
	when
		StepPerformed(stepId=="D-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/4A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/3B-YES"));
end
rule "No Step Rule for D-CAN/3B-YES"
	when
		StepPerformed(stepId=="D-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/3B-YES"));
end
rule "Yes Step Rule for D-CAN/3B-NO"
	when
		StepPerformed(stepId=="D-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/3C",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/3B-NO"));
end
rule "No Step Rule for D-CAN/3B-NO"
	when
		StepPerformed(stepId=="D-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/3B-NO"));
end
rule "Yes Step Rule for D-CAN/3C"
	when
		StepPerformed(stepId=="D-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/3C"));
end
rule "No Step Rule for D-CAN/3C"
	when
		StepPerformed(stepId=="D-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/3C"));
end
rule "Yes Step Rule for D-CAN/3C-YES"
	when
		StepPerformed(stepId=="D-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/3C-YES"));
end
rule "No Step Rule for D-CAN/3C-YES"
	when
		StepPerformed(stepId=="D-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/3C-YES"));
end
rule "Yes Step Rule for D-CAN/3C-NO"
	when
		StepPerformed(stepId=="D-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/3C-NO"));
end
rule "No Step Rule for D-CAN/3C-NO"
	when
		StepPerformed(stepId=="D-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/3C-NO"));
end
rule "Yes Step Rule for D-CAN/4A"
	when
		StepPerformed(stepId=="D-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/4A"));
end
rule "No Step Rule for D-CAN/4A"
	when
		StepPerformed(stepId=="D-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/4B",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/4A"));
end
rule "Yes Step Rule for D-CAN/4A-YES"
	when
		StepPerformed(stepId=="D-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/4A-YES"));
end
rule "No Step Rule for D-CAN/4A-YES"
	when
		StepPerformed(stepId=="D-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/4A-YES"));
end
rule "Yes Step Rule for D-CAN/4A-NO"
	when
		StepPerformed(stepId=="D-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/4B",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/4A-NO"));
end
rule "No Step Rule for D-CAN/4A-NO"
	when
		StepPerformed(stepId=="D-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/4A-NO"));
end
rule "Yes Step Rule for D-CAN/4B"
	when
		StepPerformed(stepId=="D-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/4B"));
end
rule "No Step Rule for D-CAN/4B"
	when
		StepPerformed(stepId=="D-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/4B"));
end
rule "Yes Step Rule for D-CAN/4B-YES"
	when
		StepPerformed(stepId=="D-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/4B-YES"));
end
rule "No Step Rule for D-CAN/4B-YES"
	when
		StepPerformed(stepId=="D-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/4B-YES"));
end
rule "Yes Step Rule for D-CAN/4B-NO"
	when
		StepPerformed(stepId=="D-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/4B-NO"));
end
rule "No Step Rule for D-CAN/4B-NO"
	when
		StepPerformed(stepId=="D-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/4B-NO"));
end
rule "Yes Step Rule for D-CAN/5A"
	when
		StepPerformed(stepId=="D-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/5A"));
end
rule "No Step Rule for D-CAN/5A"
	when
		StepPerformed(stepId=="D-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/5B",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/5A"));
end
rule "Yes Step Rule for D-CAN/5A-YES"
	when
		StepPerformed(stepId=="D-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/5A-YES"));
end
rule "No Step Rule for D-CAN/5A-YES"
	when
		StepPerformed(stepId=="D-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/5A-YES"));
end
rule "Yes Step Rule for D-CAN/5A-NO"
	when
		StepPerformed(stepId=="D-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/5B",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/5A-NO"));
end
rule "No Step Rule for D-CAN/5A-NO"
	when
		StepPerformed(stepId=="D-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/5A-NO"));
end
rule "Yes Step Rule for D-CAN/5B"
	when
		StepPerformed(stepId=="D-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/5B"));
end
rule "No Step Rule for D-CAN/5B"
	when
		StepPerformed(stepId=="D-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/5B"));
end
rule "Yes Step Rule for D-CAN/5B-YES"
	when
		StepPerformed(stepId=="D-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/5B-YES"));
end
rule "No Step Rule for D-CAN/5B-YES"
	when
		StepPerformed(stepId=="D-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/5B-YES"));
end
rule "Yes Step Rule for D-CAN/5B-NO"
	when
		StepPerformed(stepId=="D-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/5B-NO"));
end
rule "No Step Rule for D-CAN/5B-NO"
	when
		StepPerformed(stepId=="D-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/5B-NO"));
end
rule "Yes Step Rule for D-CAN/6A"
	when
		StepPerformed(stepId=="D-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6A"));
end
rule "No Step Rule for D-CAN/6A"
	when
		StepPerformed(stepId=="D-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6B",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6A"));
end
rule "Yes Step Rule for D-CAN/6A-YES"
	when
		StepPerformed(stepId=="D-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6D",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6A-YES"));
end
rule "No Step Rule for D-CAN/6A-YES"
	when
		StepPerformed(stepId=="D-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6A-YES"));
end
rule "Yes Step Rule for D-CAN/6A-NO"
	when
		StepPerformed(stepId=="D-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6B",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6A-NO"));
end
rule "No Step Rule for D-CAN/6A-NO"
	when
		StepPerformed(stepId=="D-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6A-NO"));
end
rule "Yes Step Rule for D-CAN/6B"
	when
		StepPerformed(stepId=="D-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6B"));
end
rule "No Step Rule for D-CAN/6B"
	when
		StepPerformed(stepId=="D-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6C",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6B"));
end
rule "Yes Step Rule for D-CAN/6B-YES"
	when
		StepPerformed(stepId=="D-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6B-YES"));
end
rule "No Step Rule for D-CAN/6B-YES"
	when
		StepPerformed(stepId=="D-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6B-YES"));
end
rule "Yes Step Rule for D-CAN/6B-NO"
	when
		StepPerformed(stepId=="D-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6C",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6B-NO"));
end
rule "No Step Rule for D-CAN/6B-NO"
	when
		StepPerformed(stepId=="D-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6B-NO"));
end
rule "Yes Step Rule for D-CAN/6C"
	when
		StepPerformed(stepId=="D-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6C"));
end
rule "No Step Rule for D-CAN/6C"
	when
		StepPerformed(stepId=="D-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6C"));
end
rule "Yes Step Rule for D-CAN/6C-YES"
	when
		StepPerformed(stepId=="D-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6C-YES"));
end
rule "No Step Rule for D-CAN/6C-YES"
	when
		StepPerformed(stepId=="D-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6C-YES"));
end
rule "Yes Step Rule for D-CAN/6C-NO"
	when
		StepPerformed(stepId=="D-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6C-NO"));
end
rule "No Step Rule for D-CAN/6C-NO"
	when
		StepPerformed(stepId=="D-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6C-NO"));
end
rule "Yes Step Rule for D-CAN/6D"
	when
		StepPerformed(stepId=="D-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6D"));
end
rule "No Step Rule for D-CAN/6D"
	when
		StepPerformed(stepId=="D-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6E",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6D"));
end
rule "Yes Step Rule for D-CAN/6D-YES"
	when
		StepPerformed(stepId=="D-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6D-YES"));
end
rule "No Step Rule for D-CAN/6D-YES"
	when
		StepPerformed(stepId=="D-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6D-YES"));
end
rule "Yes Step Rule for D-CAN/6D-NO"
	when
		StepPerformed(stepId=="D-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6E",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6D-NO"));
end
rule "No Step Rule for D-CAN/6D-NO"
	when
		StepPerformed(stepId=="D-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6D-NO"));
end
rule "Yes Step Rule for D-CAN/6E"
	when
		StepPerformed(stepId=="D-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6E"));
end
rule "No Step Rule for D-CAN/6E"
	when
		StepPerformed(stepId=="D-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6F",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6E"));
end
rule "Yes Step Rule for D-CAN/6E-YES"
	when
		StepPerformed(stepId=="D-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6E-YES"));
end
rule "No Step Rule for D-CAN/6E-YES"
	when
		StepPerformed(stepId=="D-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6E-YES"));
end
rule "Yes Step Rule for D-CAN/6E-NO"
	when
		StepPerformed(stepId=="D-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6F",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6E-NO"));
end
rule "No Step Rule for D-CAN/6E-NO"
	when
		StepPerformed(stepId=="D-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6E-NO"));
end
rule "Yes Step Rule for D-CAN/6F"
	when
		StepPerformed(stepId=="D-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6F"));
end
rule "No Step Rule for D-CAN/6F"
	when
		StepPerformed(stepId=="D-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6F"));
end
rule "Yes Step Rule for D-CAN/6F-YES"
	when
		StepPerformed(stepId=="D-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6F-YES"));
end
rule "No Step Rule for D-CAN/6F-YES"
	when
		StepPerformed(stepId=="D-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6F-YES"));
end
rule "Yes Step Rule for D-CAN/6F-NO"
	when
		StepPerformed(stepId=="D-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/6F-NO"));
end
rule "No Step Rule for D-CAN/6F-NO"
	when
		StepPerformed(stepId=="D-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/6F-NO"));
end
rule "Yes Step Rule for D-CAN/7A"
	when
		StepPerformed(stepId=="D-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/7A"));
end
rule "No Step Rule for D-CAN/7A"
	when
		StepPerformed(stepId=="D-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/7A"));
end
rule "Yes Step Rule for D-CAN/7A-YES"
	when
		StepPerformed(stepId=="D-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/7A-YES"));
end
rule "No Step Rule for D-CAN/7A-YES"
	when
		StepPerformed(stepId=="D-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/7A-YES"));
end
rule "Yes Step Rule for D-CAN/7A-NO"
	when
		StepPerformed(stepId=="D-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/7A-NO"));
end
rule "No Step Rule for D-CAN/7A-NO"
	when
		StepPerformed(stepId=="D-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/7A-NO"));
end
rule "Yes Step Rule for D-CAN/7B"
	when
		StepPerformed(stepId=="D-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/7B"));
end
rule "No Step Rule for D-CAN/7B"
	when
		StepPerformed(stepId=="D-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/2A",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/7B"));
end
rule "Yes Step Rule for D-CAN/7B-YES"
	when
		StepPerformed(stepId=="D-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/7B-YES"));
end
rule "No Step Rule for D-CAN/7B-YES"
	when
		StepPerformed(stepId=="D-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/7B-YES"));
end
rule "Yes Step Rule for D-CAN/7B-NO"
	when
		StepPerformed(stepId=="D-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/7B-NO"));
end
rule "No Step Rule for D-CAN/7B-NO"
	when
		StepPerformed(stepId=="D-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/7B-NO"));
end
rule "Yes Step Rule for D-CAN/8A"
	when
		StepPerformed(stepId=="D-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/8A"));
end
rule "No Step Rule for D-CAN/8A"
	when
		StepPerformed(stepId=="D-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/8A"));
end
rule "Yes Step Rule for D-CAN/8A-YES"
	when
		StepPerformed(stepId=="D-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/8A-YES"));
end
rule "No Step Rule for D-CAN/8A-YES"
	when
		StepPerformed(stepId=="D-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/8A-YES"));
end
rule "Yes Step Rule for D-CAN/8A-NO"
	when
		StepPerformed(stepId=="D-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("D-CAN/1A",$sum.doubleValue() + 100.0,"Answered Yes to step D-CAN/8A-NO"));
end
rule "No Step Rule for D-CAN/8A-NO"
	when
		StepPerformed(stepId=="D-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step D-CAN/8A-NO"));
end
rule "Yes Step Rule for BB-CAN/1A"
	when
		StepPerformed(stepId=="BB-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/1A"));
end
rule "No Step Rule for BB-CAN/1A"
	when
		StepPerformed(stepId=="BB-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/1A"));
end
rule "Yes Step Rule for BB-CAN/1A-YES"
	when
		StepPerformed(stepId=="BB-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/1A-YES"));
end
rule "No Step Rule for BB-CAN/1A-YES"
	when
		StepPerformed(stepId=="BB-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/1A-YES"));
end
rule "Yes Step Rule for BB-CAN/1A-NO"
	when
		StepPerformed(stepId=="BB-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/1B",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/1A-NO"));
end
rule "No Step Rule for BB-CAN/1A-NO"
	when
		StepPerformed(stepId=="BB-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/1A-NO"));
end
rule "Yes Step Rule for BB-CAN/1B"
	when
		StepPerformed(stepId=="BB-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/1B"));
end
rule "No Step Rule for BB-CAN/1B"
	when
		StepPerformed(stepId=="BB-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/1B"));
end
rule "Yes Step Rule for BB-CAN/1B-YES"
	when
		StepPerformed(stepId=="BB-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/1B-YES"));
end
rule "No Step Rule for BB-CAN/1B-YES"
	when
		StepPerformed(stepId=="BB-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/1B-YES"));
end
rule "Yes Step Rule for BB-CAN/1B-NO"
	when
		StepPerformed(stepId=="BB-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7B",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/1B-NO"));
end
rule "No Step Rule for BB-CAN/1B-NO"
	when
		StepPerformed(stepId=="BB-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/1B-NO"));
end
rule "Yes Step Rule for BB-CAN/2A"
	when
		StepPerformed(stepId=="BB-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/2A"));
end
rule "No Step Rule for BB-CAN/2A"
	when
		StepPerformed(stepId=="BB-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/2B",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/2A"));
end
rule "Yes Step Rule for BB-CAN/2A-YES"
	when
		StepPerformed(stepId=="BB-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/2A-YES"));
end
rule "No Step Rule for BB-CAN/2A-YES"
	when
		StepPerformed(stepId=="BB-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/2A-YES"));
end
rule "Yes Step Rule for BB-CAN/2A-NO"
	when
		StepPerformed(stepId=="BB-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/2A-NO"));
end
rule "No Step Rule for BB-CAN/2A-NO"
	when
		StepPerformed(stepId=="BB-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/2A-NO"));
end
rule "Yes Step Rule for BB-CAN/2B"
	when
		StepPerformed(stepId=="BB-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/2B"));
end
rule "No Step Rule for BB-CAN/2B"
	when
		StepPerformed(stepId=="BB-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/3A",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/2B"));
end
rule "Yes Step Rule for BB-CAN/2B-YES"
	when
		StepPerformed(stepId=="BB-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/2B-YES"));
end
rule "No Step Rule for BB-CAN/2B-YES"
	when
		StepPerformed(stepId=="BB-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/2B-YES"));
end
rule "Yes Step Rule for BB-CAN/2B-NO"
	when
		StepPerformed(stepId=="BB-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/3A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/2B-NO"));
end
rule "No Step Rule for BB-CAN/2B-NO"
	when
		StepPerformed(stepId=="BB-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/2B-NO"));
end
rule "Yes Step Rule for BB-CAN/3A"
	when
		StepPerformed(stepId=="BB-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/3A"));
end
rule "No Step Rule for BB-CAN/3A"
	when
		StepPerformed(stepId=="BB-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6A",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/3A"));
end
rule "Yes Step Rule for BB-CAN/3A-YES"
	when
		StepPerformed(stepId=="BB-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/3A-YES"));
end
rule "No Step Rule for BB-CAN/3A-YES"
	when
		StepPerformed(stepId=="BB-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/3A-YES"));
end
rule "Yes Step Rule for BB-CAN/3A-NO"
	when
		StepPerformed(stepId=="BB-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/3A-NO"));
end
rule "No Step Rule for BB-CAN/3A-NO"
	when
		StepPerformed(stepId=="BB-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/3A-NO"));
end
rule "Yes Step Rule for BB-CAN/3B"
	when
		StepPerformed(stepId=="BB-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/3B"));
end
rule "No Step Rule for BB-CAN/3B"
	when
		StepPerformed(stepId=="BB-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/3C",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/3B"));
end
rule "Yes Step Rule for BB-CAN/3B-YES"
	when
		StepPerformed(stepId=="BB-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/4A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/3B-YES"));
end
rule "No Step Rule for BB-CAN/3B-YES"
	when
		StepPerformed(stepId=="BB-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/3B-YES"));
end
rule "Yes Step Rule for BB-CAN/3B-NO"
	when
		StepPerformed(stepId=="BB-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/3C",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/3B-NO"));
end
rule "No Step Rule for BB-CAN/3B-NO"
	when
		StepPerformed(stepId=="BB-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/3B-NO"));
end
rule "Yes Step Rule for BB-CAN/3C"
	when
		StepPerformed(stepId=="BB-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/3C"));
end
rule "No Step Rule for BB-CAN/3C"
	when
		StepPerformed(stepId=="BB-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/3C"));
end
rule "Yes Step Rule for BB-CAN/3C-YES"
	when
		StepPerformed(stepId=="BB-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/3C-YES"));
end
rule "No Step Rule for BB-CAN/3C-YES"
	when
		StepPerformed(stepId=="BB-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/3C-YES"));
end
rule "Yes Step Rule for BB-CAN/3C-NO"
	when
		StepPerformed(stepId=="BB-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/3C-NO"));
end
rule "No Step Rule for BB-CAN/3C-NO"
	when
		StepPerformed(stepId=="BB-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/3C-NO"));
end
rule "Yes Step Rule for BB-CAN/4A"
	when
		StepPerformed(stepId=="BB-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/4A"));
end
rule "No Step Rule for BB-CAN/4A"
	when
		StepPerformed(stepId=="BB-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/4B",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/4A"));
end
rule "Yes Step Rule for BB-CAN/4A-YES"
	when
		StepPerformed(stepId=="BB-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/4A-YES"));
end
rule "No Step Rule for BB-CAN/4A-YES"
	when
		StepPerformed(stepId=="BB-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/4A-YES"));
end
rule "Yes Step Rule for BB-CAN/4A-NO"
	when
		StepPerformed(stepId=="BB-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/4B",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/4A-NO"));
end
rule "No Step Rule for BB-CAN/4A-NO"
	when
		StepPerformed(stepId=="BB-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/4A-NO"));
end
rule "Yes Step Rule for BB-CAN/4B"
	when
		StepPerformed(stepId=="BB-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/4B"));
end
rule "No Step Rule for BB-CAN/4B"
	when
		StepPerformed(stepId=="BB-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/4B"));
end
rule "Yes Step Rule for BB-CAN/4B-YES"
	when
		StepPerformed(stepId=="BB-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/4B-YES"));
end
rule "No Step Rule for BB-CAN/4B-YES"
	when
		StepPerformed(stepId=="BB-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/4B-YES"));
end
rule "Yes Step Rule for BB-CAN/4B-NO"
	when
		StepPerformed(stepId=="BB-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/4B-NO"));
end
rule "No Step Rule for BB-CAN/4B-NO"
	when
		StepPerformed(stepId=="BB-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/4B-NO"));
end
rule "Yes Step Rule for BB-CAN/5A"
	when
		StepPerformed(stepId=="BB-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/5A"));
end
rule "No Step Rule for BB-CAN/5A"
	when
		StepPerformed(stepId=="BB-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/5B",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/5A"));
end
rule "Yes Step Rule for BB-CAN/5A-YES"
	when
		StepPerformed(stepId=="BB-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/5A-YES"));
end
rule "No Step Rule for BB-CAN/5A-YES"
	when
		StepPerformed(stepId=="BB-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/5A-YES"));
end
rule "Yes Step Rule for BB-CAN/5A-NO"
	when
		StepPerformed(stepId=="BB-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/5B",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/5A-NO"));
end
rule "No Step Rule for BB-CAN/5A-NO"
	when
		StepPerformed(stepId=="BB-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/5A-NO"));
end
rule "Yes Step Rule for BB-CAN/5B"
	when
		StepPerformed(stepId=="BB-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/5B"));
end
rule "No Step Rule for BB-CAN/5B"
	when
		StepPerformed(stepId=="BB-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/5B"));
end
rule "Yes Step Rule for BB-CAN/5B-YES"
	when
		StepPerformed(stepId=="BB-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/5B-YES"));
end
rule "No Step Rule for BB-CAN/5B-YES"
	when
		StepPerformed(stepId=="BB-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/5B-YES"));
end
rule "Yes Step Rule for BB-CAN/5B-NO"
	when
		StepPerformed(stepId=="BB-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/5B-NO"));
end
rule "No Step Rule for BB-CAN/5B-NO"
	when
		StepPerformed(stepId=="BB-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/5B-NO"));
end
rule "Yes Step Rule for BB-CAN/6A"
	when
		StepPerformed(stepId=="BB-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6A"));
end
rule "No Step Rule for BB-CAN/6A"
	when
		StepPerformed(stepId=="BB-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6B",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6A"));
end
rule "Yes Step Rule for BB-CAN/6A-YES"
	when
		StepPerformed(stepId=="BB-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6D",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6A-YES"));
end
rule "No Step Rule for BB-CAN/6A-YES"
	when
		StepPerformed(stepId=="BB-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6A-YES"));
end
rule "Yes Step Rule for BB-CAN/6A-NO"
	when
		StepPerformed(stepId=="BB-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6B",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6A-NO"));
end
rule "No Step Rule for BB-CAN/6A-NO"
	when
		StepPerformed(stepId=="BB-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6A-NO"));
end
rule "Yes Step Rule for BB-CAN/6B"
	when
		StepPerformed(stepId=="BB-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6B"));
end
rule "No Step Rule for BB-CAN/6B"
	when
		StepPerformed(stepId=="BB-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6C",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6B"));
end
rule "Yes Step Rule for BB-CAN/6B-YES"
	when
		StepPerformed(stepId=="BB-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6B-YES"));
end
rule "No Step Rule for BB-CAN/6B-YES"
	when
		StepPerformed(stepId=="BB-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6B-YES"));
end
rule "Yes Step Rule for BB-CAN/6B-NO"
	when
		StepPerformed(stepId=="BB-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6C",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6B-NO"));
end
rule "No Step Rule for BB-CAN/6B-NO"
	when
		StepPerformed(stepId=="BB-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6B-NO"));
end
rule "Yes Step Rule for BB-CAN/6C"
	when
		StepPerformed(stepId=="BB-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6C"));
end
rule "No Step Rule for BB-CAN/6C"
	when
		StepPerformed(stepId=="BB-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6C"));
end
rule "Yes Step Rule for BB-CAN/6C-YES"
	when
		StepPerformed(stepId=="BB-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6C-YES"));
end
rule "No Step Rule for BB-CAN/6C-YES"
	when
		StepPerformed(stepId=="BB-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6C-YES"));
end
rule "Yes Step Rule for BB-CAN/6C-NO"
	when
		StepPerformed(stepId=="BB-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6C-NO"));
end
rule "No Step Rule for BB-CAN/6C-NO"
	when
		StepPerformed(stepId=="BB-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6C-NO"));
end
rule "Yes Step Rule for BB-CAN/6D"
	when
		StepPerformed(stepId=="BB-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6D"));
end
rule "No Step Rule for BB-CAN/6D"
	when
		StepPerformed(stepId=="BB-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6E",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6D"));
end
rule "Yes Step Rule for BB-CAN/6D-YES"
	when
		StepPerformed(stepId=="BB-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6D-YES"));
end
rule "No Step Rule for BB-CAN/6D-YES"
	when
		StepPerformed(stepId=="BB-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6D-YES"));
end
rule "Yes Step Rule for BB-CAN/6D-NO"
	when
		StepPerformed(stepId=="BB-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6E",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6D-NO"));
end
rule "No Step Rule for BB-CAN/6D-NO"
	when
		StepPerformed(stepId=="BB-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6D-NO"));
end
rule "Yes Step Rule for BB-CAN/6E"
	when
		StepPerformed(stepId=="BB-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6E"));
end
rule "No Step Rule for BB-CAN/6E"
	when
		StepPerformed(stepId=="BB-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6F",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6E"));
end
rule "Yes Step Rule for BB-CAN/6E-YES"
	when
		StepPerformed(stepId=="BB-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6E-YES"));
end
rule "No Step Rule for BB-CAN/6E-YES"
	when
		StepPerformed(stepId=="BB-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6E-YES"));
end
rule "Yes Step Rule for BB-CAN/6E-NO"
	when
		StepPerformed(stepId=="BB-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6F",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6E-NO"));
end
rule "No Step Rule for BB-CAN/6E-NO"
	when
		StepPerformed(stepId=="BB-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6E-NO"));
end
rule "Yes Step Rule for BB-CAN/6F"
	when
		StepPerformed(stepId=="BB-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6F"));
end
rule "No Step Rule for BB-CAN/6F"
	when
		StepPerformed(stepId=="BB-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6F"));
end
rule "Yes Step Rule for BB-CAN/6F-YES"
	when
		StepPerformed(stepId=="BB-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6F-YES"));
end
rule "No Step Rule for BB-CAN/6F-YES"
	when
		StepPerformed(stepId=="BB-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6F-YES"));
end
rule "Yes Step Rule for BB-CAN/6F-NO"
	when
		StepPerformed(stepId=="BB-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/6F-NO"));
end
rule "No Step Rule for BB-CAN/6F-NO"
	when
		StepPerformed(stepId=="BB-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/6F-NO"));
end
rule "Yes Step Rule for BB-CAN/7A"
	when
		StepPerformed(stepId=="BB-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/7A"));
end
rule "No Step Rule for BB-CAN/7A"
	when
		StepPerformed(stepId=="BB-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/7A"));
end
rule "Yes Step Rule for BB-CAN/7A-YES"
	when
		StepPerformed(stepId=="BB-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/7A-YES"));
end
rule "No Step Rule for BB-CAN/7A-YES"
	when
		StepPerformed(stepId=="BB-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/7A-YES"));
end
rule "Yes Step Rule for BB-CAN/7A-NO"
	when
		StepPerformed(stepId=="BB-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/7A-NO"));
end
rule "No Step Rule for BB-CAN/7A-NO"
	when
		StepPerformed(stepId=="BB-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/7A-NO"));
end
rule "Yes Step Rule for BB-CAN/7B"
	when
		StepPerformed(stepId=="BB-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/7B"));
end
rule "No Step Rule for BB-CAN/7B"
	when
		StepPerformed(stepId=="BB-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/2A",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/7B"));
end
rule "Yes Step Rule for BB-CAN/7B-YES"
	when
		StepPerformed(stepId=="BB-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/7B-YES"));
end
rule "No Step Rule for BB-CAN/7B-YES"
	when
		StepPerformed(stepId=="BB-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/7B-YES"));
end
rule "Yes Step Rule for BB-CAN/7B-NO"
	when
		StepPerformed(stepId=="BB-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/7B-NO"));
end
rule "No Step Rule for BB-CAN/7B-NO"
	when
		StepPerformed(stepId=="BB-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/7B-NO"));
end
rule "Yes Step Rule for BB-CAN/8A"
	when
		StepPerformed(stepId=="BB-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/8A"));
end
rule "No Step Rule for BB-CAN/8A"
	when
		StepPerformed(stepId=="BB-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/8A"));
end
rule "Yes Step Rule for BB-CAN/8A-YES"
	when
		StepPerformed(stepId=="BB-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/8A-YES"));
end
rule "No Step Rule for BB-CAN/8A-YES"
	when
		StepPerformed(stepId=="BB-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/8A-YES"));
end
rule "Yes Step Rule for BB-CAN/8A-NO"
	when
		StepPerformed(stepId=="BB-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("BB-CAN/1A",$sum.doubleValue() + 100.0,"Answered Yes to step BB-CAN/8A-NO"));
end
rule "No Step Rule for BB-CAN/8A-NO"
	when
		StepPerformed(stepId=="BB-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step BB-CAN/8A-NO"));
end
rule "Yes Step Rule for F-CAN/1A"
	when
		StepPerformed(stepId=="F-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/1A"));
end
rule "No Step Rule for F-CAN/1A"
	when
		StepPerformed(stepId=="F-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/1A"));
end
rule "Yes Step Rule for F-CAN/1A-YES"
	when
		StepPerformed(stepId=="F-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/1A-YES"));
end
rule "No Step Rule for F-CAN/1A-YES"
	when
		StepPerformed(stepId=="F-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/1A-YES"));
end
rule "Yes Step Rule for F-CAN/1A-NO"
	when
		StepPerformed(stepId=="F-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/1B",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/1A-NO"));
end
rule "No Step Rule for F-CAN/1A-NO"
	when
		StepPerformed(stepId=="F-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/1A-NO"));
end
rule "Yes Step Rule for F-CAN/1B"
	when
		StepPerformed(stepId=="F-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/1B"));
end
rule "No Step Rule for F-CAN/1B"
	when
		StepPerformed(stepId=="F-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/1B"));
end
rule "Yes Step Rule for F-CAN/1B-YES"
	when
		StepPerformed(stepId=="F-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/1B-YES"));
end
rule "No Step Rule for F-CAN/1B-YES"
	when
		StepPerformed(stepId=="F-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/1B-YES"));
end
rule "Yes Step Rule for F-CAN/1B-NO"
	when
		StepPerformed(stepId=="F-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7B",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/1B-NO"));
end
rule "No Step Rule for F-CAN/1B-NO"
	when
		StepPerformed(stepId=="F-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/1B-NO"));
end
rule "Yes Step Rule for F-CAN/2A"
	when
		StepPerformed(stepId=="F-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/2A"));
end
rule "No Step Rule for F-CAN/2A"
	when
		StepPerformed(stepId=="F-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/2B",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/2A"));
end
rule "Yes Step Rule for F-CAN/2A-YES"
	when
		StepPerformed(stepId=="F-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/2A-YES"));
end
rule "No Step Rule for F-CAN/2A-YES"
	when
		StepPerformed(stepId=="F-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/2A-YES"));
end
rule "Yes Step Rule for F-CAN/2A-NO"
	when
		StepPerformed(stepId=="F-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/2A-NO"));
end
rule "No Step Rule for F-CAN/2A-NO"
	when
		StepPerformed(stepId=="F-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/2A-NO"));
end
rule "Yes Step Rule for F-CAN/2B"
	when
		StepPerformed(stepId=="F-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/2B"));
end
rule "No Step Rule for F-CAN/2B"
	when
		StepPerformed(stepId=="F-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/3A",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/2B"));
end
rule "Yes Step Rule for F-CAN/2B-YES"
	when
		StepPerformed(stepId=="F-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/2B-YES"));
end
rule "No Step Rule for F-CAN/2B-YES"
	when
		StepPerformed(stepId=="F-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/2B-YES"));
end
rule "Yes Step Rule for F-CAN/2B-NO"
	when
		StepPerformed(stepId=="F-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/3A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/2B-NO"));
end
rule "No Step Rule for F-CAN/2B-NO"
	when
		StepPerformed(stepId=="F-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/2B-NO"));
end
rule "Yes Step Rule for F-CAN/3A"
	when
		StepPerformed(stepId=="F-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/3A"));
end
rule "No Step Rule for F-CAN/3A"
	when
		StepPerformed(stepId=="F-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6A",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/3A"));
end
rule "Yes Step Rule for F-CAN/3A-YES"
	when
		StepPerformed(stepId=="F-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/3A-YES"));
end
rule "No Step Rule for F-CAN/3A-YES"
	when
		StepPerformed(stepId=="F-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/3A-YES"));
end
rule "Yes Step Rule for F-CAN/3A-NO"
	when
		StepPerformed(stepId=="F-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/3A-NO"));
end
rule "No Step Rule for F-CAN/3A-NO"
	when
		StepPerformed(stepId=="F-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/3A-NO"));
end
rule "Yes Step Rule for F-CAN/3B"
	when
		StepPerformed(stepId=="F-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/3B"));
end
rule "No Step Rule for F-CAN/3B"
	when
		StepPerformed(stepId=="F-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/3C",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/3B"));
end
rule "Yes Step Rule for F-CAN/3B-YES"
	when
		StepPerformed(stepId=="F-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/4A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/3B-YES"));
end
rule "No Step Rule for F-CAN/3B-YES"
	when
		StepPerformed(stepId=="F-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/3B-YES"));
end
rule "Yes Step Rule for F-CAN/3B-NO"
	when
		StepPerformed(stepId=="F-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/3C",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/3B-NO"));
end
rule "No Step Rule for F-CAN/3B-NO"
	when
		StepPerformed(stepId=="F-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/3B-NO"));
end
rule "Yes Step Rule for F-CAN/3C"
	when
		StepPerformed(stepId=="F-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/3C"));
end
rule "No Step Rule for F-CAN/3C"
	when
		StepPerformed(stepId=="F-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/3C"));
end
rule "Yes Step Rule for F-CAN/3C-YES"
	when
		StepPerformed(stepId=="F-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/3C-YES"));
end
rule "No Step Rule for F-CAN/3C-YES"
	when
		StepPerformed(stepId=="F-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/3C-YES"));
end
rule "Yes Step Rule for F-CAN/3C-NO"
	when
		StepPerformed(stepId=="F-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/3C-NO"));
end
rule "No Step Rule for F-CAN/3C-NO"
	when
		StepPerformed(stepId=="F-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/3C-NO"));
end
rule "Yes Step Rule for F-CAN/4A"
	when
		StepPerformed(stepId=="F-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/4A"));
end
rule "No Step Rule for F-CAN/4A"
	when
		StepPerformed(stepId=="F-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/4B",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/4A"));
end
rule "Yes Step Rule for F-CAN/4A-YES"
	when
		StepPerformed(stepId=="F-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/4A-YES"));
end
rule "No Step Rule for F-CAN/4A-YES"
	when
		StepPerformed(stepId=="F-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/4A-YES"));
end
rule "Yes Step Rule for F-CAN/4A-NO"
	when
		StepPerformed(stepId=="F-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/4B",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/4A-NO"));
end
rule "No Step Rule for F-CAN/4A-NO"
	when
		StepPerformed(stepId=="F-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/4A-NO"));
end
rule "Yes Step Rule for F-CAN/4B"
	when
		StepPerformed(stepId=="F-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/4B"));
end
rule "No Step Rule for F-CAN/4B"
	when
		StepPerformed(stepId=="F-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/4B"));
end
rule "Yes Step Rule for F-CAN/4B-YES"
	when
		StepPerformed(stepId=="F-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/4B-YES"));
end
rule "No Step Rule for F-CAN/4B-YES"
	when
		StepPerformed(stepId=="F-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/4B-YES"));
end
rule "Yes Step Rule for F-CAN/4B-NO"
	when
		StepPerformed(stepId=="F-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/4B-NO"));
end
rule "No Step Rule for F-CAN/4B-NO"
	when
		StepPerformed(stepId=="F-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/4B-NO"));
end
rule "Yes Step Rule for F-CAN/5A"
	when
		StepPerformed(stepId=="F-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/5A"));
end
rule "No Step Rule for F-CAN/5A"
	when
		StepPerformed(stepId=="F-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/5B",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/5A"));
end
rule "Yes Step Rule for F-CAN/5A-YES"
	when
		StepPerformed(stepId=="F-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/5A-YES"));
end
rule "No Step Rule for F-CAN/5A-YES"
	when
		StepPerformed(stepId=="F-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/5A-YES"));
end
rule "Yes Step Rule for F-CAN/5A-NO"
	when
		StepPerformed(stepId=="F-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/5B",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/5A-NO"));
end
rule "No Step Rule for F-CAN/5A-NO"
	when
		StepPerformed(stepId=="F-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/5A-NO"));
end
rule "Yes Step Rule for F-CAN/5B"
	when
		StepPerformed(stepId=="F-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/5B"));
end
rule "No Step Rule for F-CAN/5B"
	when
		StepPerformed(stepId=="F-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/5B"));
end
rule "Yes Step Rule for F-CAN/5B-YES"
	when
		StepPerformed(stepId=="F-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/5B-YES"));
end
rule "No Step Rule for F-CAN/5B-YES"
	when
		StepPerformed(stepId=="F-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/5B-YES"));
end
rule "Yes Step Rule for F-CAN/5B-NO"
	when
		StepPerformed(stepId=="F-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/5B-NO"));
end
rule "No Step Rule for F-CAN/5B-NO"
	when
		StepPerformed(stepId=="F-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/5B-NO"));
end
rule "Yes Step Rule for F-CAN/6A"
	when
		StepPerformed(stepId=="F-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6A"));
end
rule "No Step Rule for F-CAN/6A"
	when
		StepPerformed(stepId=="F-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6B",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6A"));
end
rule "Yes Step Rule for F-CAN/6A-YES"
	when
		StepPerformed(stepId=="F-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6D",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6A-YES"));
end
rule "No Step Rule for F-CAN/6A-YES"
	when
		StepPerformed(stepId=="F-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6A-YES"));
end
rule "Yes Step Rule for F-CAN/6A-NO"
	when
		StepPerformed(stepId=="F-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6B",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6A-NO"));
end
rule "No Step Rule for F-CAN/6A-NO"
	when
		StepPerformed(stepId=="F-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6A-NO"));
end
rule "Yes Step Rule for F-CAN/6B"
	when
		StepPerformed(stepId=="F-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6B"));
end
rule "No Step Rule for F-CAN/6B"
	when
		StepPerformed(stepId=="F-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6C",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6B"));
end
rule "Yes Step Rule for F-CAN/6B-YES"
	when
		StepPerformed(stepId=="F-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6B-YES"));
end
rule "No Step Rule for F-CAN/6B-YES"
	when
		StepPerformed(stepId=="F-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6B-YES"));
end
rule "Yes Step Rule for F-CAN/6B-NO"
	when
		StepPerformed(stepId=="F-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6C",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6B-NO"));
end
rule "No Step Rule for F-CAN/6B-NO"
	when
		StepPerformed(stepId=="F-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6B-NO"));
end
rule "Yes Step Rule for F-CAN/6C"
	when
		StepPerformed(stepId=="F-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6C"));
end
rule "No Step Rule for F-CAN/6C"
	when
		StepPerformed(stepId=="F-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6C"));
end
rule "Yes Step Rule for F-CAN/6C-YES"
	when
		StepPerformed(stepId=="F-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6C-YES"));
end
rule "No Step Rule for F-CAN/6C-YES"
	when
		StepPerformed(stepId=="F-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6C-YES"));
end
rule "Yes Step Rule for F-CAN/6C-NO"
	when
		StepPerformed(stepId=="F-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6C-NO"));
end
rule "No Step Rule for F-CAN/6C-NO"
	when
		StepPerformed(stepId=="F-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6C-NO"));
end
rule "Yes Step Rule for F-CAN/6D"
	when
		StepPerformed(stepId=="F-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6D"));
end
rule "No Step Rule for F-CAN/6D"
	when
		StepPerformed(stepId=="F-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6E",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6D"));
end
rule "Yes Step Rule for F-CAN/6D-YES"
	when
		StepPerformed(stepId=="F-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6D-YES"));
end
rule "No Step Rule for F-CAN/6D-YES"
	when
		StepPerformed(stepId=="F-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6D-YES"));
end
rule "Yes Step Rule for F-CAN/6D-NO"
	when
		StepPerformed(stepId=="F-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6E",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6D-NO"));
end
rule "No Step Rule for F-CAN/6D-NO"
	when
		StepPerformed(stepId=="F-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6D-NO"));
end
rule "Yes Step Rule for F-CAN/6E"
	when
		StepPerformed(stepId=="F-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6E"));
end
rule "No Step Rule for F-CAN/6E"
	when
		StepPerformed(stepId=="F-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6F",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6E"));
end
rule "Yes Step Rule for F-CAN/6E-YES"
	when
		StepPerformed(stepId=="F-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6E-YES"));
end
rule "No Step Rule for F-CAN/6E-YES"
	when
		StepPerformed(stepId=="F-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6E-YES"));
end
rule "Yes Step Rule for F-CAN/6E-NO"
	when
		StepPerformed(stepId=="F-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6F",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6E-NO"));
end
rule "No Step Rule for F-CAN/6E-NO"
	when
		StepPerformed(stepId=="F-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6E-NO"));
end
rule "Yes Step Rule for F-CAN/6F"
	when
		StepPerformed(stepId=="F-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6F"));
end
rule "No Step Rule for F-CAN/6F"
	when
		StepPerformed(stepId=="F-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6F"));
end
rule "Yes Step Rule for F-CAN/6F-YES"
	when
		StepPerformed(stepId=="F-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6F-YES"));
end
rule "No Step Rule for F-CAN/6F-YES"
	when
		StepPerformed(stepId=="F-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6F-YES"));
end
rule "Yes Step Rule for F-CAN/6F-NO"
	when
		StepPerformed(stepId=="F-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/6F-NO"));
end
rule "No Step Rule for F-CAN/6F-NO"
	when
		StepPerformed(stepId=="F-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/6F-NO"));
end
rule "Yes Step Rule for F-CAN/7A"
	when
		StepPerformed(stepId=="F-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/7A"));
end
rule "No Step Rule for F-CAN/7A"
	when
		StepPerformed(stepId=="F-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/7A"));
end
rule "Yes Step Rule for F-CAN/7A-YES"
	when
		StepPerformed(stepId=="F-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/7A-YES"));
end
rule "No Step Rule for F-CAN/7A-YES"
	when
		StepPerformed(stepId=="F-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/7A-YES"));
end
rule "Yes Step Rule for F-CAN/7A-NO"
	when
		StepPerformed(stepId=="F-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/7A-NO"));
end
rule "No Step Rule for F-CAN/7A-NO"
	when
		StepPerformed(stepId=="F-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/7A-NO"));
end
rule "Yes Step Rule for F-CAN/7B"
	when
		StepPerformed(stepId=="F-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/7B"));
end
rule "No Step Rule for F-CAN/7B"
	when
		StepPerformed(stepId=="F-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/2A",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/7B"));
end
rule "Yes Step Rule for F-CAN/7B-YES"
	when
		StepPerformed(stepId=="F-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/7B-YES"));
end
rule "No Step Rule for F-CAN/7B-YES"
	when
		StepPerformed(stepId=="F-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/7B-YES"));
end
rule "Yes Step Rule for F-CAN/7B-NO"
	when
		StepPerformed(stepId=="F-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/7B-NO"));
end
rule "No Step Rule for F-CAN/7B-NO"
	when
		StepPerformed(stepId=="F-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/7B-NO"));
end
rule "Yes Step Rule for F-CAN/8A"
	when
		StepPerformed(stepId=="F-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/8A"));
end
rule "No Step Rule for F-CAN/8A"
	when
		StepPerformed(stepId=="F-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/8A"));
end
rule "Yes Step Rule for F-CAN/8A-YES"
	when
		StepPerformed(stepId=="F-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/8A-YES"));
end
rule "No Step Rule for F-CAN/8A-YES"
	when
		StepPerformed(stepId=="F-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/8A-YES"));
end
rule "Yes Step Rule for F-CAN/8A-NO"
	when
		StepPerformed(stepId=="F-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("F-CAN/1A",$sum.doubleValue() + 100.0,"Answered Yes to step F-CAN/8A-NO"));
end
rule "No Step Rule for F-CAN/8A-NO"
	when
		StepPerformed(stepId=="F-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step F-CAN/8A-NO"));
end
rule "Yes Step Rule for C-CAN/1A"
	when
		StepPerformed(stepId=="C-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/1A"));
end
rule "No Step Rule for C-CAN/1A"
	when
		StepPerformed(stepId=="C-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/1A"));
end
rule "Yes Step Rule for C-CAN/1A-YES"
	when
		StepPerformed(stepId=="C-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/1A-YES"));
end
rule "No Step Rule for C-CAN/1A-YES"
	when
		StepPerformed(stepId=="C-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/1A-YES"));
end
rule "Yes Step Rule for C-CAN/1A-NO"
	when
		StepPerformed(stepId=="C-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/1B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/1A-NO"));
end
rule "No Step Rule for C-CAN/1A-NO"
	when
		StepPerformed(stepId=="C-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/1A-NO"));
end
rule "Yes Step Rule for C-CAN/1B"
	when
		StepPerformed(stepId=="C-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/1B"));
end
rule "No Step Rule for C-CAN/1B"
	when
		StepPerformed(stepId=="C-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/1B"));
end
rule "Yes Step Rule for C-CAN/1B-YES"
	when
		StepPerformed(stepId=="C-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/1B-YES"));
end
rule "No Step Rule for C-CAN/1B-YES"
	when
		StepPerformed(stepId=="C-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/1B-YES"));
end
rule "Yes Step Rule for C-CAN/1B-NO"
	when
		StepPerformed(stepId=="C-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/1B-NO"));
end
rule "No Step Rule for C-CAN/1B-NO"
	when
		StepPerformed(stepId=="C-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/1B-NO"));
end
rule "Yes Step Rule for C-CAN/2A"
	when
		StepPerformed(stepId=="C-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/2A"));
end
rule "No Step Rule for C-CAN/2A"
	when
		StepPerformed(stepId=="C-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/2B",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/2A"));
end
rule "Yes Step Rule for C-CAN/2A-YES"
	when
		StepPerformed(stepId=="C-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/2A-YES"));
end
rule "No Step Rule for C-CAN/2A-YES"
	when
		StepPerformed(stepId=="C-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/2A-YES"));
end
rule "Yes Step Rule for C-CAN/2A-NO"
	when
		StepPerformed(stepId=="C-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/2A-NO"));
end
rule "No Step Rule for C-CAN/2A-NO"
	when
		StepPerformed(stepId=="C-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/2A-NO"));
end
rule "Yes Step Rule for C-CAN/2B"
	when
		StepPerformed(stepId=="C-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/2B"));
end
rule "No Step Rule for C-CAN/2B"
	when
		StepPerformed(stepId=="C-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/3A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/2B"));
end
rule "Yes Step Rule for C-CAN/2B-YES"
	when
		StepPerformed(stepId=="C-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/2B-YES"));
end
rule "No Step Rule for C-CAN/2B-YES"
	when
		StepPerformed(stepId=="C-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/2B-YES"));
end
rule "Yes Step Rule for C-CAN/2B-NO"
	when
		StepPerformed(stepId=="C-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/3A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/2B-NO"));
end
rule "No Step Rule for C-CAN/2B-NO"
	when
		StepPerformed(stepId=="C-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/2B-NO"));
end
rule "Yes Step Rule for C-CAN/3A"
	when
		StepPerformed(stepId=="C-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/3A"));
end
rule "No Step Rule for C-CAN/3A"
	when
		StepPerformed(stepId=="C-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/3A"));
end
rule "Yes Step Rule for C-CAN/3A-YES"
	when
		StepPerformed(stepId=="C-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/3A-YES"));
end
rule "No Step Rule for C-CAN/3A-YES"
	when
		StepPerformed(stepId=="C-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/3A-YES"));
end
rule "Yes Step Rule for C-CAN/3A-NO"
	when
		StepPerformed(stepId=="C-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/3A-NO"));
end
rule "No Step Rule for C-CAN/3A-NO"
	when
		StepPerformed(stepId=="C-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/3A-NO"));
end
rule "Yes Step Rule for C-CAN/3B"
	when
		StepPerformed(stepId=="C-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/3B"));
end
rule "No Step Rule for C-CAN/3B"
	when
		StepPerformed(stepId=="C-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/3C",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/3B"));
end
rule "Yes Step Rule for C-CAN/3B-YES"
	when
		StepPerformed(stepId=="C-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/4A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/3B-YES"));
end
rule "No Step Rule for C-CAN/3B-YES"
	when
		StepPerformed(stepId=="C-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/3B-YES"));
end
rule "Yes Step Rule for C-CAN/3B-NO"
	when
		StepPerformed(stepId=="C-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/3C",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/3B-NO"));
end
rule "No Step Rule for C-CAN/3B-NO"
	when
		StepPerformed(stepId=="C-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/3B-NO"));
end
rule "Yes Step Rule for C-CAN/3C"
	when
		StepPerformed(stepId=="C-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/3C"));
end
rule "No Step Rule for C-CAN/3C"
	when
		StepPerformed(stepId=="C-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/3C"));
end
rule "Yes Step Rule for C-CAN/3C-YES"
	when
		StepPerformed(stepId=="C-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/3C-YES"));
end
rule "No Step Rule for C-CAN/3C-YES"
	when
		StepPerformed(stepId=="C-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/3C-YES"));
end
rule "Yes Step Rule for C-CAN/3C-NO"
	when
		StepPerformed(stepId=="C-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/3C-NO"));
end
rule "No Step Rule for C-CAN/3C-NO"
	when
		StepPerformed(stepId=="C-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/3C-NO"));
end
rule "Yes Step Rule for C-CAN/4A"
	when
		StepPerformed(stepId=="C-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/4A"));
end
rule "No Step Rule for C-CAN/4A"
	when
		StepPerformed(stepId=="C-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/4B",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/4A"));
end
rule "Yes Step Rule for C-CAN/4A-YES"
	when
		StepPerformed(stepId=="C-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/4A-YES"));
end
rule "No Step Rule for C-CAN/4A-YES"
	when
		StepPerformed(stepId=="C-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/4A-YES"));
end
rule "Yes Step Rule for C-CAN/4A-NO"
	when
		StepPerformed(stepId=="C-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/4B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/4A-NO"));
end
rule "No Step Rule for C-CAN/4A-NO"
	when
		StepPerformed(stepId=="C-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/4A-NO"));
end
rule "Yes Step Rule for C-CAN/4B"
	when
		StepPerformed(stepId=="C-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/4B"));
end
rule "No Step Rule for C-CAN/4B"
	when
		StepPerformed(stepId=="C-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/4B"));
end
rule "Yes Step Rule for C-CAN/4B-YES"
	when
		StepPerformed(stepId=="C-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/4B-YES"));
end
rule "No Step Rule for C-CAN/4B-YES"
	when
		StepPerformed(stepId=="C-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/4B-YES"));
end
rule "Yes Step Rule for C-CAN/4B-NO"
	when
		StepPerformed(stepId=="C-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/4B-NO"));
end
rule "No Step Rule for C-CAN/4B-NO"
	when
		StepPerformed(stepId=="C-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/4B-NO"));
end
rule "Yes Step Rule for C-CAN/5A"
	when
		StepPerformed(stepId=="C-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/5A"));
end
rule "No Step Rule for C-CAN/5A"
	when
		StepPerformed(stepId=="C-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/5B",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/5A"));
end
rule "Yes Step Rule for C-CAN/5A-YES"
	when
		StepPerformed(stepId=="C-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/5A-YES"));
end
rule "No Step Rule for C-CAN/5A-YES"
	when
		StepPerformed(stepId=="C-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/5A-YES"));
end
rule "Yes Step Rule for C-CAN/5A-NO"
	when
		StepPerformed(stepId=="C-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/5B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/5A-NO"));
end
rule "No Step Rule for C-CAN/5A-NO"
	when
		StepPerformed(stepId=="C-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/5A-NO"));
end
rule "Yes Step Rule for C-CAN/5B"
	when
		StepPerformed(stepId=="C-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/5B"));
end
rule "No Step Rule for C-CAN/5B"
	when
		StepPerformed(stepId=="C-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/5B"));
end
rule "Yes Step Rule for C-CAN/5B-YES"
	when
		StepPerformed(stepId=="C-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/5B-YES"));
end
rule "No Step Rule for C-CAN/5B-YES"
	when
		StepPerformed(stepId=="C-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/5B-YES"));
end
rule "Yes Step Rule for C-CAN/5B-NO"
	when
		StepPerformed(stepId=="C-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/5B-NO"));
end
rule "No Step Rule for C-CAN/5B-NO"
	when
		StepPerformed(stepId=="C-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/5B-NO"));
end
rule "Yes Step Rule for C-CAN/6A"
	when
		StepPerformed(stepId=="C-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6A"));
end
rule "No Step Rule for C-CAN/6A"
	when
		StepPerformed(stepId=="C-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6B",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6A"));
end
rule "Yes Step Rule for C-CAN/6A-YES"
	when
		StepPerformed(stepId=="C-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6D",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6A-YES"));
end
rule "No Step Rule for C-CAN/6A-YES"
	when
		StepPerformed(stepId=="C-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6A-YES"));
end
rule "Yes Step Rule for C-CAN/6A-NO"
	when
		StepPerformed(stepId=="C-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6A-NO"));
end
rule "No Step Rule for C-CAN/6A-NO"
	when
		StepPerformed(stepId=="C-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6A-NO"));
end
rule "Yes Step Rule for C-CAN/6B"
	when
		StepPerformed(stepId=="C-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6B"));
end
rule "No Step Rule for C-CAN/6B"
	when
		StepPerformed(stepId=="C-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6C",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6B"));
end
rule "Yes Step Rule for C-CAN/6B-YES"
	when
		StepPerformed(stepId=="C-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6B-YES"));
end
rule "No Step Rule for C-CAN/6B-YES"
	when
		StepPerformed(stepId=="C-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6B-YES"));
end
rule "Yes Step Rule for C-CAN/6B-NO"
	when
		StepPerformed(stepId=="C-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6C",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6B-NO"));
end
rule "No Step Rule for C-CAN/6B-NO"
	when
		StepPerformed(stepId=="C-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6B-NO"));
end
rule "Yes Step Rule for C-CAN/6C"
	when
		StepPerformed(stepId=="C-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6C"));
end
rule "No Step Rule for C-CAN/6C"
	when
		StepPerformed(stepId=="C-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6C"));
end
rule "Yes Step Rule for C-CAN/6C-YES"
	when
		StepPerformed(stepId=="C-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6C-YES"));
end
rule "No Step Rule for C-CAN/6C-YES"
	when
		StepPerformed(stepId=="C-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6C-YES"));
end
rule "Yes Step Rule for C-CAN/6C-NO"
	when
		StepPerformed(stepId=="C-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6C-NO"));
end
rule "No Step Rule for C-CAN/6C-NO"
	when
		StepPerformed(stepId=="C-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6C-NO"));
end
rule "Yes Step Rule for C-CAN/6D"
	when
		StepPerformed(stepId=="C-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6D"));
end
rule "No Step Rule for C-CAN/6D"
	when
		StepPerformed(stepId=="C-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6E",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6D"));
end
rule "Yes Step Rule for C-CAN/6D-YES"
	when
		StepPerformed(stepId=="C-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6D-YES"));
end
rule "No Step Rule for C-CAN/6D-YES"
	when
		StepPerformed(stepId=="C-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6D-YES"));
end
rule "Yes Step Rule for C-CAN/6D-NO"
	when
		StepPerformed(stepId=="C-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6E",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6D-NO"));
end
rule "No Step Rule for C-CAN/6D-NO"
	when
		StepPerformed(stepId=="C-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6D-NO"));
end
rule "Yes Step Rule for C-CAN/6E"
	when
		StepPerformed(stepId=="C-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6E"));
end
rule "No Step Rule for C-CAN/6E"
	when
		StepPerformed(stepId=="C-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6F",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6E"));
end
rule "Yes Step Rule for C-CAN/6E-YES"
	when
		StepPerformed(stepId=="C-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6E-YES"));
end
rule "No Step Rule for C-CAN/6E-YES"
	when
		StepPerformed(stepId=="C-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6E-YES"));
end
rule "Yes Step Rule for C-CAN/6E-NO"
	when
		StepPerformed(stepId=="C-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6F",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6E-NO"));
end
rule "No Step Rule for C-CAN/6E-NO"
	when
		StepPerformed(stepId=="C-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6E-NO"));
end
rule "Yes Step Rule for C-CAN/6F"
	when
		StepPerformed(stepId=="C-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6F"));
end
rule "No Step Rule for C-CAN/6F"
	when
		StepPerformed(stepId=="C-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6F"));
end
rule "Yes Step Rule for C-CAN/6F-YES"
	when
		StepPerformed(stepId=="C-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6F-YES"));
end
rule "No Step Rule for C-CAN/6F-YES"
	when
		StepPerformed(stepId=="C-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6F-YES"));
end
rule "Yes Step Rule for C-CAN/6F-NO"
	when
		StepPerformed(stepId=="C-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/6F-NO"));
end
rule "No Step Rule for C-CAN/6F-NO"
	when
		StepPerformed(stepId=="C-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/6F-NO"));
end
rule "Yes Step Rule for C-CAN/7A"
	when
		StepPerformed(stepId=="C-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/7A"));
end
rule "No Step Rule for C-CAN/7A"
	when
		StepPerformed(stepId=="C-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/7A"));
end
rule "Yes Step Rule for C-CAN/7A-YES"
	when
		StepPerformed(stepId=="C-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/7A-YES"));
end
rule "No Step Rule for C-CAN/7A-YES"
	when
		StepPerformed(stepId=="C-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/7A-YES"));
end
rule "Yes Step Rule for C-CAN/7A-NO"
	when
		StepPerformed(stepId=="C-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/7A-NO"));
end
rule "No Step Rule for C-CAN/7A-NO"
	when
		StepPerformed(stepId=="C-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/7A-NO"));
end
rule "Yes Step Rule for C-CAN/7B"
	when
		StepPerformed(stepId=="C-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/7B"));
end
rule "No Step Rule for C-CAN/7B"
	when
		StepPerformed(stepId=="C-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/2A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/7B"));
end
rule "Yes Step Rule for C-CAN/7B-YES"
	when
		StepPerformed(stepId=="C-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/7B-YES"));
end
rule "No Step Rule for C-CAN/7B-YES"
	when
		StepPerformed(stepId=="C-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/7B-YES"));
end
rule "Yes Step Rule for C-CAN/7B-NO"
	when
		StepPerformed(stepId=="C-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/7B-NO"));
end
rule "No Step Rule for C-CAN/7B-NO"
	when
		StepPerformed(stepId=="C-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/7B-NO"));
end
rule "Yes Step Rule for C-CAN/8A"
	when
		StepPerformed(stepId=="C-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/8A"));
end
rule "No Step Rule for C-CAN/8A"
	when
		StepPerformed(stepId=="C-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/8A"));
end
rule "Yes Step Rule for C-CAN/8A-YES"
	when
		StepPerformed(stepId=="C-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/8A-YES"));
end
rule "No Step Rule for C-CAN/8A-YES"
	when
		StepPerformed(stepId=="C-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/8A-YES"));
end
rule "Yes Step Rule for C-CAN/8A-NO"
	when
		StepPerformed(stepId=="C-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN/1A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN/8A-NO"));
end
rule "No Step Rule for C-CAN/8A-NO"
	when
		StepPerformed(stepId=="C-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN/8A-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/1A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/1A"));
end
rule "No Step Rule for C-CAN (CF PX-7)/1A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/1A"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/1A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/1A-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/1A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/1A-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/1A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/1B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/1A-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/1A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/1A-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/1B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/1B"));
end
rule "No Step Rule for C-CAN (CF PX-7)/1B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/1B"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/1B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/2A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/1B-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/1B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/1B-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/1B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/1B-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/1B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/1B-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/2A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/2A"));
end
rule "No Step Rule for C-CAN (CF PX-7)/2A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/2B",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/2A"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/2A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/2B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/2A-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/2A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/2A-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/2A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/2B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/2A-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/2A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/2A-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/2B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/2B"));
end
rule "No Step Rule for C-CAN (CF PX-7)/2B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/3A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/2B"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/2B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/2B-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/2B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/2B-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/2B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/3A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/2B-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/2B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/2B-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/3A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/3B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/3A"));
end
rule "No Step Rule for C-CAN (CF PX-7)/3A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/3A"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/3A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/3B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/3A-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/3A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/3A-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/3A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/3A-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/3A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/3A-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/3B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/3B"));
end
rule "No Step Rule for C-CAN (CF PX-7)/3B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/3C",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/3B"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/3B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/4A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/3B-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/3B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/3B-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/3B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/3C",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/3B-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/3B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/3B-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/3C"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/3C"));
end
rule "No Step Rule for C-CAN (CF PX-7)/3C"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/3C"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/3C-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/5A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/3C-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/3C-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/3C-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/3C-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/3C-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/3C-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/3C-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/4A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/4A"));
end
rule "No Step Rule for C-CAN (CF PX-7)/4A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/4B",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/4A"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/4A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/4A-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/4A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/4A-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/4A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/4B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/4A-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/4A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/4A-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/4B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/4B"));
end
rule "No Step Rule for C-CAN (CF PX-7)/4B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/4B"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/4B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/4B-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/4B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/4B-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/4B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/4B-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/4B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/4B-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/5A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/5A"));
end
rule "No Step Rule for C-CAN (CF PX-7)/5A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/5B",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/5A"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/5A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/5A-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/5A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/5A-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/5A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/5B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/5A-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/5A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/5A-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/5B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/5B"));
end
rule "No Step Rule for C-CAN (CF PX-7)/5B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/5B"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/5B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/5B-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/5B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/5B-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/5B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/5B-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/5B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/5B-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6A"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6B",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6A"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6D",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6A-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6A-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6B",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6A-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6A-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6B"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6C",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6B"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6B-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6B-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6C",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6B-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6B-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6C"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6C"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6C"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6C"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6C-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6C-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6C-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6C-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6C-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6C-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6C-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6C-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6D"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6D"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6D"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6E",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6D"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6D-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6D-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6D-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6D-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6D-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6E",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6D-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6D-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6D-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6E"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6E"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6E"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6F",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6E"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6E-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6E-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6E-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6E-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6E-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6F",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6E-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6E-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6E-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6F"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6F"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6F"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6F"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6F-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6F-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6F-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6F-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/6F-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/6F-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/6F-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/6F-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/7A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/7A"));
end
rule "No Step Rule for C-CAN (CF PX-7)/7A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/7A"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/7A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/7A-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/7A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/7A-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/7A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/7A-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/7A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/7A-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/7B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/7B"));
end
rule "No Step Rule for C-CAN (CF PX-7)/7B"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/2A",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/7B"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/7B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/7B-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/7B-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/7B-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/7B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/2A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/7B-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/7B-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/7B-NO"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/8A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/8A"));
end
rule "No Step Rule for C-CAN (CF PX-7)/8A"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/8A"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/8A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/8A-YES"));
end
rule "No Step Rule for C-CAN (CF PX-7)/8A-YES"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/8A-YES"));
end
rule "Yes Step Rule for C-CAN (CF PX-7)/8A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("C-CAN (CF PX-7)/1A",$sum.doubleValue() + 100.0,"Answered Yes to step C-CAN (CF PX-7)/8A-NO"));
end
rule "No Step Rule for C-CAN (CF PX-7)/8A-NO"
	when
		StepPerformed(stepId=="C-CAN (CF PX-7)/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step C-CAN (CF PX-7)/8A-NO"));
end
rule "Yes Step Rule for CCC-CAN/1A"
	when
		StepPerformed(stepId=="CCC-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/1A"));
end
rule "No Step Rule for CCC-CAN/1A"
	when
		StepPerformed(stepId=="CCC-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/1A"));
end
rule "Yes Step Rule for CCC-CAN/1A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/1A-YES"));
end
rule "No Step Rule for CCC-CAN/1A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/1A-YES"));
end
rule "Yes Step Rule for CCC-CAN/1A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/1B",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/1A-NO"));
end
rule "No Step Rule for CCC-CAN/1A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/1A-NO"));
end
rule "Yes Step Rule for CCC-CAN/1B"
	when
		StepPerformed(stepId=="CCC-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/1B"));
end
rule "No Step Rule for CCC-CAN/1B"
	when
		StepPerformed(stepId=="CCC-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/1B"));
end
rule "Yes Step Rule for CCC-CAN/1B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/1B-YES"));
end
rule "No Step Rule for CCC-CAN/1B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/1B-YES"));
end
rule "Yes Step Rule for CCC-CAN/1B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7B",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/1B-NO"));
end
rule "No Step Rule for CCC-CAN/1B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/1B-NO"));
end
rule "Yes Step Rule for CCC-CAN/2A"
	when
		StepPerformed(stepId=="CCC-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/2A"));
end
rule "No Step Rule for CCC-CAN/2A"
	when
		StepPerformed(stepId=="CCC-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/2B",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/2A"));
end
rule "Yes Step Rule for CCC-CAN/2A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/2A-YES"));
end
rule "No Step Rule for CCC-CAN/2A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/2A-YES"));
end
rule "Yes Step Rule for CCC-CAN/2A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/2A-NO"));
end
rule "No Step Rule for CCC-CAN/2A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/2A-NO"));
end
rule "Yes Step Rule for CCC-CAN/2B"
	when
		StepPerformed(stepId=="CCC-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/2B"));
end
rule "No Step Rule for CCC-CAN/2B"
	when
		StepPerformed(stepId=="CCC-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/3A",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/2B"));
end
rule "Yes Step Rule for CCC-CAN/2B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/2B-YES"));
end
rule "No Step Rule for CCC-CAN/2B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/2B-YES"));
end
rule "Yes Step Rule for CCC-CAN/2B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/3A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/2B-NO"));
end
rule "No Step Rule for CCC-CAN/2B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/2B-NO"));
end
rule "Yes Step Rule for CCC-CAN/3A"
	when
		StepPerformed(stepId=="CCC-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/3A"));
end
rule "No Step Rule for CCC-CAN/3A"
	when
		StepPerformed(stepId=="CCC-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6A",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/3A"));
end
rule "Yes Step Rule for CCC-CAN/3A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/3A-YES"));
end
rule "No Step Rule for CCC-CAN/3A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/3A-YES"));
end
rule "Yes Step Rule for CCC-CAN/3A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/3A-NO"));
end
rule "No Step Rule for CCC-CAN/3A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/3A-NO"));
end
rule "Yes Step Rule for CCC-CAN/3B"
	when
		StepPerformed(stepId=="CCC-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/3B"));
end
rule "No Step Rule for CCC-CAN/3B"
	when
		StepPerformed(stepId=="CCC-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/3C",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/3B"));
end
rule "Yes Step Rule for CCC-CAN/3B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/4A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/3B-YES"));
end
rule "No Step Rule for CCC-CAN/3B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/3B-YES"));
end
rule "Yes Step Rule for CCC-CAN/3B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/3C",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/3B-NO"));
end
rule "No Step Rule for CCC-CAN/3B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/3B-NO"));
end
rule "Yes Step Rule for CCC-CAN/3C"
	when
		StepPerformed(stepId=="CCC-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/3C"));
end
rule "No Step Rule for CCC-CAN/3C"
	when
		StepPerformed(stepId=="CCC-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/3C"));
end
rule "Yes Step Rule for CCC-CAN/3C-YES"
	when
		StepPerformed(stepId=="CCC-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/3C-YES"));
end
rule "No Step Rule for CCC-CAN/3C-YES"
	when
		StepPerformed(stepId=="CCC-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/3C-YES"));
end
rule "Yes Step Rule for CCC-CAN/3C-NO"
	when
		StepPerformed(stepId=="CCC-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/3C-NO"));
end
rule "No Step Rule for CCC-CAN/3C-NO"
	when
		StepPerformed(stepId=="CCC-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/3C-NO"));
end
rule "Yes Step Rule for CCC-CAN/4A"
	when
		StepPerformed(stepId=="CCC-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/4A"));
end
rule "No Step Rule for CCC-CAN/4A"
	when
		StepPerformed(stepId=="CCC-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/4B",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/4A"));
end
rule "Yes Step Rule for CCC-CAN/4A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/4A-YES"));
end
rule "No Step Rule for CCC-CAN/4A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/4A-YES"));
end
rule "Yes Step Rule for CCC-CAN/4A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/4B",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/4A-NO"));
end
rule "No Step Rule for CCC-CAN/4A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/4A-NO"));
end
rule "Yes Step Rule for CCC-CAN/4B"
	when
		StepPerformed(stepId=="CCC-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/4B"));
end
rule "No Step Rule for CCC-CAN/4B"
	when
		StepPerformed(stepId=="CCC-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/4B"));
end
rule "Yes Step Rule for CCC-CAN/4B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/4B-YES"));
end
rule "No Step Rule for CCC-CAN/4B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/4B-YES"));
end
rule "Yes Step Rule for CCC-CAN/4B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/4B-NO"));
end
rule "No Step Rule for CCC-CAN/4B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/4B-NO"));
end
rule "Yes Step Rule for CCC-CAN/5A"
	when
		StepPerformed(stepId=="CCC-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/5A"));
end
rule "No Step Rule for CCC-CAN/5A"
	when
		StepPerformed(stepId=="CCC-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/5B",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/5A"));
end
rule "Yes Step Rule for CCC-CAN/5A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/5A-YES"));
end
rule "No Step Rule for CCC-CAN/5A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/5A-YES"));
end
rule "Yes Step Rule for CCC-CAN/5A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/5B",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/5A-NO"));
end
rule "No Step Rule for CCC-CAN/5A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/5A-NO"));
end
rule "Yes Step Rule for CCC-CAN/5B"
	when
		StepPerformed(stepId=="CCC-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/5B"));
end
rule "No Step Rule for CCC-CAN/5B"
	when
		StepPerformed(stepId=="CCC-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/5B"));
end
rule "Yes Step Rule for CCC-CAN/5B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/5B-YES"));
end
rule "No Step Rule for CCC-CAN/5B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/5B-YES"));
end
rule "Yes Step Rule for CCC-CAN/5B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/5B-NO"));
end
rule "No Step Rule for CCC-CAN/5B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/5B-NO"));
end
rule "Yes Step Rule for CCC-CAN/6A"
	when
		StepPerformed(stepId=="CCC-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6A"));
end
rule "No Step Rule for CCC-CAN/6A"
	when
		StepPerformed(stepId=="CCC-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6B",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6A"));
end
rule "Yes Step Rule for CCC-CAN/6A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6D",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6A-YES"));
end
rule "No Step Rule for CCC-CAN/6A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6A-YES"));
end
rule "Yes Step Rule for CCC-CAN/6A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6B",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6A-NO"));
end
rule "No Step Rule for CCC-CAN/6A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6A-NO"));
end
rule "Yes Step Rule for CCC-CAN/6B"
	when
		StepPerformed(stepId=="CCC-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6B"));
end
rule "No Step Rule for CCC-CAN/6B"
	when
		StepPerformed(stepId=="CCC-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6C",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6B"));
end
rule "Yes Step Rule for CCC-CAN/6B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6B-YES"));
end
rule "No Step Rule for CCC-CAN/6B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6B-YES"));
end
rule "Yes Step Rule for CCC-CAN/6B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6C",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6B-NO"));
end
rule "No Step Rule for CCC-CAN/6B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6B-NO"));
end
rule "Yes Step Rule for CCC-CAN/6C"
	when
		StepPerformed(stepId=="CCC-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6C"));
end
rule "No Step Rule for CCC-CAN/6C"
	when
		StepPerformed(stepId=="CCC-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6C"));
end
rule "Yes Step Rule for CCC-CAN/6C-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6C-YES"));
end
rule "No Step Rule for CCC-CAN/6C-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6C-YES"));
end
rule "Yes Step Rule for CCC-CAN/6C-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6C-NO"));
end
rule "No Step Rule for CCC-CAN/6C-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6C-NO"));
end
rule "Yes Step Rule for CCC-CAN/6D"
	when
		StepPerformed(stepId=="CCC-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6D"));
end
rule "No Step Rule for CCC-CAN/6D"
	when
		StepPerformed(stepId=="CCC-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6E",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6D"));
end
rule "Yes Step Rule for CCC-CAN/6D-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6D-YES"));
end
rule "No Step Rule for CCC-CAN/6D-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6D-YES"));
end
rule "Yes Step Rule for CCC-CAN/6D-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6E",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6D-NO"));
end
rule "No Step Rule for CCC-CAN/6D-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6D-NO"));
end
rule "Yes Step Rule for CCC-CAN/6E"
	when
		StepPerformed(stepId=="CCC-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6E"));
end
rule "No Step Rule for CCC-CAN/6E"
	when
		StepPerformed(stepId=="CCC-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6F",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6E"));
end
rule "Yes Step Rule for CCC-CAN/6E-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6E-YES"));
end
rule "No Step Rule for CCC-CAN/6E-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6E-YES"));
end
rule "Yes Step Rule for CCC-CAN/6E-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6F",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6E-NO"));
end
rule "No Step Rule for CCC-CAN/6E-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6E-NO"));
end
rule "Yes Step Rule for CCC-CAN/6F"
	when
		StepPerformed(stepId=="CCC-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6F"));
end
rule "No Step Rule for CCC-CAN/6F"
	when
		StepPerformed(stepId=="CCC-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6F"));
end
rule "Yes Step Rule for CCC-CAN/6F-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6F-YES"));
end
rule "No Step Rule for CCC-CAN/6F-YES"
	when
		StepPerformed(stepId=="CCC-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6F-YES"));
end
rule "Yes Step Rule for CCC-CAN/6F-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/6F-NO"));
end
rule "No Step Rule for CCC-CAN/6F-NO"
	when
		StepPerformed(stepId=="CCC-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/6F-NO"));
end
rule "Yes Step Rule for CCC-CAN/7A"
	when
		StepPerformed(stepId=="CCC-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/7A"));
end
rule "No Step Rule for CCC-CAN/7A"
	when
		StepPerformed(stepId=="CCC-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/7A"));
end
rule "Yes Step Rule for CCC-CAN/7A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/7A-YES"));
end
rule "No Step Rule for CCC-CAN/7A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/7A-YES"));
end
rule "Yes Step Rule for CCC-CAN/7A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/7A-NO"));
end
rule "No Step Rule for CCC-CAN/7A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/7A-NO"));
end
rule "Yes Step Rule for CCC-CAN/7B"
	when
		StepPerformed(stepId=="CCC-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/7B"));
end
rule "No Step Rule for CCC-CAN/7B"
	when
		StepPerformed(stepId=="CCC-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/2A",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/7B"));
end
rule "Yes Step Rule for CCC-CAN/7B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/7B-YES"));
end
rule "No Step Rule for CCC-CAN/7B-YES"
	when
		StepPerformed(stepId=="CCC-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/7B-YES"));
end
rule "Yes Step Rule for CCC-CAN/7B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/7B-NO"));
end
rule "No Step Rule for CCC-CAN/7B-NO"
	when
		StepPerformed(stepId=="CCC-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/7B-NO"));
end
rule "Yes Step Rule for CCC-CAN/8A"
	when
		StepPerformed(stepId=="CCC-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/8A"));
end
rule "No Step Rule for CCC-CAN/8A"
	when
		StepPerformed(stepId=="CCC-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/8A"));
end
rule "Yes Step Rule for CCC-CAN/8A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/8A-YES"));
end
rule "No Step Rule for CCC-CAN/8A-YES"
	when
		StepPerformed(stepId=="CCC-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/8A-YES"));
end
rule "Yes Step Rule for CCC-CAN/8A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("CCC-CAN/1A",$sum.doubleValue() + 100.0,"Answered Yes to step CCC-CAN/8A-NO"));
end
rule "No Step Rule for CCC-CAN/8A-NO"
	when
		StepPerformed(stepId=="CCC-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step CCC-CAN/8A-NO"));
end
rule "Yes Step Rule for A-CAN/1A"
	when
		StepPerformed(stepId=="A-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/1B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/1A"));
end
rule "No Step Rule for A-CAN/1A"
	when
		StepPerformed(stepId=="A-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/1A-NO",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/1A"));
end
rule "Yes Step Rule for A-CAN/1A-YES"
	when
		StepPerformed(stepId=="A-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/1B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/1A-YES"));
end
rule "No Step Rule for A-CAN/1A-YES"
	when
		StepPerformed(stepId=="A-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/1A-YES"));
end
rule "Yes Step Rule for A-CAN/1A-NO"
	when
		StepPerformed(stepId=="A-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/1A-NO"));
end
rule "No Step Rule for A-CAN/1A-NO"
	when
		StepPerformed(stepId=="A-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/1A-NO"));
end
rule "Yes Step Rule for A-CAN/1B"
	when
		StepPerformed(stepId=="A-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/1B"));
end
rule "No Step Rule for A-CAN/1B"
	when
		StepPerformed(stepId=="A-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/1B"));
end
rule "Yes Step Rule for A-CAN/1B-YES"
	when
		StepPerformed(stepId=="A-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/1B-YES"));
end
rule "No Step Rule for A-CAN/1B-YES"
	when
		StepPerformed(stepId=="A-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/1B-YES"));
end
rule "Yes Step Rule for A-CAN/1B-NO"
	when
		StepPerformed(stepId=="A-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/1B-NO"));
end
rule "No Step Rule for A-CAN/1B-NO"
	when
		StepPerformed(stepId=="A-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/1B-NO"));
end
rule "Yes Step Rule for A-CAN/2A"
	when
		StepPerformed(stepId=="A-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/2A"));
end
rule "No Step Rule for A-CAN/2A"
	when
		StepPerformed(stepId=="A-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/2B",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/2A"));
end
rule "Yes Step Rule for A-CAN/2A-YES"
	when
		StepPerformed(stepId=="A-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/2A-YES"));
end
rule "No Step Rule for A-CAN/2A-YES"
	when
		StepPerformed(stepId=="A-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/2A-YES"));
end
rule "Yes Step Rule for A-CAN/2A-NO"
	when
		StepPerformed(stepId=="A-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/2A-NO"));
end
rule "No Step Rule for A-CAN/2A-NO"
	when
		StepPerformed(stepId=="A-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/2A-NO"));
end
rule "Yes Step Rule for A-CAN/2B"
	when
		StepPerformed(stepId=="A-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/2B"));
end
rule "No Step Rule for A-CAN/2B"
	when
		StepPerformed(stepId=="A-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/3A",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/2B"));
end
rule "Yes Step Rule for A-CAN/2B-YES"
	when
		StepPerformed(stepId=="A-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/2B-YES"));
end
rule "No Step Rule for A-CAN/2B-YES"
	when
		StepPerformed(stepId=="A-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/2B-YES"));
end
rule "Yes Step Rule for A-CAN/2B-NO"
	when
		StepPerformed(stepId=="A-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/3A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/2B-NO"));
end
rule "No Step Rule for A-CAN/2B-NO"
	when
		StepPerformed(stepId=="A-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/2B-NO"));
end
rule "Yes Step Rule for A-CAN/3A"
	when
		StepPerformed(stepId=="A-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/3A"));
end
rule "No Step Rule for A-CAN/3A"
	when
		StepPerformed(stepId=="A-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6A",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/3A"));
end
rule "Yes Step Rule for A-CAN/3A-YES"
	when
		StepPerformed(stepId=="A-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/3A-YES"));
end
rule "No Step Rule for A-CAN/3A-YES"
	when
		StepPerformed(stepId=="A-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/3A-YES"));
end
rule "Yes Step Rule for A-CAN/3A-NO"
	when
		StepPerformed(stepId=="A-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/3A-NO"));
end
rule "No Step Rule for A-CAN/3A-NO"
	when
		StepPerformed(stepId=="A-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/3A-NO"));
end
rule "Yes Step Rule for A-CAN/3B"
	when
		StepPerformed(stepId=="A-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/3B"));
end
rule "No Step Rule for A-CAN/3B"
	when
		StepPerformed(stepId=="A-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/3C",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/3B"));
end
rule "Yes Step Rule for A-CAN/3B-YES"
	when
		StepPerformed(stepId=="A-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/4A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/3B-YES"));
end
rule "No Step Rule for A-CAN/3B-YES"
	when
		StepPerformed(stepId=="A-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/3B-YES"));
end
rule "Yes Step Rule for A-CAN/3B-NO"
	when
		StepPerformed(stepId=="A-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/3C",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/3B-NO"));
end
rule "No Step Rule for A-CAN/3B-NO"
	when
		StepPerformed(stepId=="A-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/3B-NO"));
end
rule "Yes Step Rule for A-CAN/3C"
	when
		StepPerformed(stepId=="A-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/3C"));
end
rule "No Step Rule for A-CAN/3C"
	when
		StepPerformed(stepId=="A-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/3C"));
end
rule "Yes Step Rule for A-CAN/3C-YES"
	when
		StepPerformed(stepId=="A-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/3C-YES"));
end
rule "No Step Rule for A-CAN/3C-YES"
	when
		StepPerformed(stepId=="A-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/3C-YES"));
end
rule "Yes Step Rule for A-CAN/3C-NO"
	when
		StepPerformed(stepId=="A-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/3C-NO"));
end
rule "No Step Rule for A-CAN/3C-NO"
	when
		StepPerformed(stepId=="A-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/3C-NO"));
end
rule "Yes Step Rule for A-CAN/4A"
	when
		StepPerformed(stepId=="A-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/4A"));
end
rule "No Step Rule for A-CAN/4A"
	when
		StepPerformed(stepId=="A-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/4B",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/4A"));
end
rule "Yes Step Rule for A-CAN/4A-YES"
	when
		StepPerformed(stepId=="A-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/4A-YES"));
end
rule "No Step Rule for A-CAN/4A-YES"
	when
		StepPerformed(stepId=="A-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/4A-YES"));
end
rule "Yes Step Rule for A-CAN/4A-NO"
	when
		StepPerformed(stepId=="A-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/4B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/4A-NO"));
end
rule "No Step Rule for A-CAN/4A-NO"
	when
		StepPerformed(stepId=="A-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/4A-NO"));
end
rule "Yes Step Rule for A-CAN/4B"
	when
		StepPerformed(stepId=="A-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/4B"));
end
rule "No Step Rule for A-CAN/4B"
	when
		StepPerformed(stepId=="A-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/4B"));
end
rule "Yes Step Rule for A-CAN/4B-YES"
	when
		StepPerformed(stepId=="A-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/4B-YES"));
end
rule "No Step Rule for A-CAN/4B-YES"
	when
		StepPerformed(stepId=="A-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/4B-YES"));
end
rule "Yes Step Rule for A-CAN/4B-NO"
	when
		StepPerformed(stepId=="A-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/4B-NO"));
end
rule "No Step Rule for A-CAN/4B-NO"
	when
		StepPerformed(stepId=="A-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/4B-NO"));
end
rule "Yes Step Rule for A-CAN/5A"
	when
		StepPerformed(stepId=="A-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/5A"));
end
rule "No Step Rule for A-CAN/5A"
	when
		StepPerformed(stepId=="A-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/5B",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/5A"));
end
rule "Yes Step Rule for A-CAN/5A-YES"
	when
		StepPerformed(stepId=="A-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/5A-YES"));
end
rule "No Step Rule for A-CAN/5A-YES"
	when
		StepPerformed(stepId=="A-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/5A-YES"));
end
rule "Yes Step Rule for A-CAN/5A-NO"
	when
		StepPerformed(stepId=="A-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/5B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/5A-NO"));
end
rule "No Step Rule for A-CAN/5A-NO"
	when
		StepPerformed(stepId=="A-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/5A-NO"));
end
rule "Yes Step Rule for A-CAN/5B"
	when
		StepPerformed(stepId=="A-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/5B"));
end
rule "No Step Rule for A-CAN/5B"
	when
		StepPerformed(stepId=="A-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/5B"));
end
rule "Yes Step Rule for A-CAN/5B-YES"
	when
		StepPerformed(stepId=="A-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/5B-YES"));
end
rule "No Step Rule for A-CAN/5B-YES"
	when
		StepPerformed(stepId=="A-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/5B-YES"));
end
rule "Yes Step Rule for A-CAN/5B-NO"
	when
		StepPerformed(stepId=="A-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/5B-NO"));
end
rule "No Step Rule for A-CAN/5B-NO"
	when
		StepPerformed(stepId=="A-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/5B-NO"));
end
rule "Yes Step Rule for A-CAN/6A"
	when
		StepPerformed(stepId=="A-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6A"));
end
rule "No Step Rule for A-CAN/6A"
	when
		StepPerformed(stepId=="A-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6B",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6A"));
end
rule "Yes Step Rule for A-CAN/6A-YES"
	when
		StepPerformed(stepId=="A-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6D",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6A-YES"));
end
rule "No Step Rule for A-CAN/6A-YES"
	when
		StepPerformed(stepId=="A-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6A-YES"));
end
rule "Yes Step Rule for A-CAN/6A-NO"
	when
		StepPerformed(stepId=="A-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6B",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6A-NO"));
end
rule "No Step Rule for A-CAN/6A-NO"
	when
		StepPerformed(stepId=="A-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6A-NO"));
end
rule "Yes Step Rule for A-CAN/6B"
	when
		StepPerformed(stepId=="A-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6B"));
end
rule "No Step Rule for A-CAN/6B"
	when
		StepPerformed(stepId=="A-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6C",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6B"));
end
rule "Yes Step Rule for A-CAN/6B-YES"
	when
		StepPerformed(stepId=="A-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6B-YES"));
end
rule "No Step Rule for A-CAN/6B-YES"
	when
		StepPerformed(stepId=="A-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6B-YES"));
end
rule "Yes Step Rule for A-CAN/6B-NO"
	when
		StepPerformed(stepId=="A-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6C",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6B-NO"));
end
rule "No Step Rule for A-CAN/6B-NO"
	when
		StepPerformed(stepId=="A-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6B-NO"));
end
rule "Yes Step Rule for A-CAN/6C"
	when
		StepPerformed(stepId=="A-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6C"));
end
rule "No Step Rule for A-CAN/6C"
	when
		StepPerformed(stepId=="A-CAN/6C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6C"));
end
rule "Yes Step Rule for A-CAN/6C-YES"
	when
		StepPerformed(stepId=="A-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6C-YES"));
end
rule "No Step Rule for A-CAN/6C-YES"
	when
		StepPerformed(stepId=="A-CAN/6C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6C-YES"));
end
rule "Yes Step Rule for A-CAN/6C-NO"
	when
		StepPerformed(stepId=="A-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6C-NO"));
end
rule "No Step Rule for A-CAN/6C-NO"
	when
		StepPerformed(stepId=="A-CAN/6C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6C-NO"));
end
rule "Yes Step Rule for A-CAN/6D"
	when
		StepPerformed(stepId=="A-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6D"));
end
rule "No Step Rule for A-CAN/6D"
	when
		StepPerformed(stepId=="A-CAN/6D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6E",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6D"));
end
rule "Yes Step Rule for A-CAN/6D-YES"
	when
		StepPerformed(stepId=="A-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6D-YES"));
end
rule "No Step Rule for A-CAN/6D-YES"
	when
		StepPerformed(stepId=="A-CAN/6D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6D-YES"));
end
rule "Yes Step Rule for A-CAN/6D-NO"
	when
		StepPerformed(stepId=="A-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6E",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6D-NO"));
end
rule "No Step Rule for A-CAN/6D-NO"
	when
		StepPerformed(stepId=="A-CAN/6D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6D-NO"));
end
rule "Yes Step Rule for A-CAN/6E"
	when
		StepPerformed(stepId=="A-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6E"));
end
rule "No Step Rule for A-CAN/6E"
	when
		StepPerformed(stepId=="A-CAN/6E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6F",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6E"));
end
rule "Yes Step Rule for A-CAN/6E-YES"
	when
		StepPerformed(stepId=="A-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6E-YES"));
end
rule "No Step Rule for A-CAN/6E-YES"
	when
		StepPerformed(stepId=="A-CAN/6E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6E-YES"));
end
rule "Yes Step Rule for A-CAN/6E-NO"
	when
		StepPerformed(stepId=="A-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6F",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6E-NO"));
end
rule "No Step Rule for A-CAN/6E-NO"
	when
		StepPerformed(stepId=="A-CAN/6E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6E-NO"));
end
rule "Yes Step Rule for A-CAN/6F"
	when
		StepPerformed(stepId=="A-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/6F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6F"));
end
rule "No Step Rule for A-CAN/6F"
	when
		StepPerformed(stepId=="A-CAN/6F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7A",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6F"));
end
rule "Yes Step Rule for A-CAN/6F-YES"
	when
		StepPerformed(stepId=="A-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6F-YES"));
end
rule "No Step Rule for A-CAN/6F-YES"
	when
		StepPerformed(stepId=="A-CAN/6F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6F-YES"));
end
rule "Yes Step Rule for A-CAN/6F-NO"
	when
		StepPerformed(stepId=="A-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/6F-NO"));
end
rule "No Step Rule for A-CAN/6F-NO"
	when
		StepPerformed(stepId=="A-CAN/6F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/6F-NO"));
end
rule "Yes Step Rule for A-CAN/7A"
	when
		StepPerformed(stepId=="A-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/7A"));
end
rule "No Step Rule for A-CAN/7A"
	when
		StepPerformed(stepId=="A-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/7A"));
end
rule "Yes Step Rule for A-CAN/7A-YES"
	when
		StepPerformed(stepId=="A-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/7A-YES"));
end
rule "No Step Rule for A-CAN/7A-YES"
	when
		StepPerformed(stepId=="A-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/7A-YES"));
end
rule "Yes Step Rule for A-CAN/7A-NO"
	when
		StepPerformed(stepId=="A-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/7A-NO"));
end
rule "No Step Rule for A-CAN/7A-NO"
	when
		StepPerformed(stepId=="A-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/7A-NO"));
end
rule "Yes Step Rule for A-CAN/7B"
	when
		StepPerformed(stepId=="A-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/7B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/7B"));
end
rule "No Step Rule for A-CAN/7B"
	when
		StepPerformed(stepId=="A-CAN/7B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/2A",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/7B"));
end
rule "Yes Step Rule for A-CAN/7B-YES"
	when
		StepPerformed(stepId=="A-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/7B-YES"));
end
rule "No Step Rule for A-CAN/7B-YES"
	when
		StepPerformed(stepId=="A-CAN/7B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/7B-YES"));
end
rule "Yes Step Rule for A-CAN/7B-NO"
	when
		StepPerformed(stepId=="A-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/7B-NO"));
end
rule "No Step Rule for A-CAN/7B-NO"
	when
		StepPerformed(stepId=="A-CAN/7B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/7B-NO"));
end
rule "Yes Step Rule for A-CAN/8A"
	when
		StepPerformed(stepId=="A-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/8A"));
end
rule "No Step Rule for A-CAN/8A"
	when
		StepPerformed(stepId=="A-CAN/8A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/8A-NO",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/8A"));
end
rule "Yes Step Rule for A-CAN/8A-YES"
	when
		StepPerformed(stepId=="A-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/8A-YES"));
end
rule "No Step Rule for A-CAN/8A-YES"
	when
		StepPerformed(stepId=="A-CAN/8A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/8A-YES"));
end
rule "Yes Step Rule for A-CAN/8A-NO"
	when
		StepPerformed(stepId=="A-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("A-CAN/1A",$sum.doubleValue() + 100.0,"Answered Yes to step A-CAN/8A-NO"));
end
rule "No Step Rule for A-CAN/8A-NO"
	when
		StepPerformed(stepId=="A-CAN/8A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step A-CAN/8A-NO"));
end
rule "Yes Step Rule for E-CAN/1A"
	when
		StepPerformed(stepId=="E-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1A"));
end
rule "No Step Rule for E-CAN/1A"
	when
		StepPerformed(stepId=="E-CAN/1A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1B",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1A"));
end
rule "Yes Step Rule for E-CAN/1A-YES"
	when
		StepPerformed(stepId=="E-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.support",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1A-YES"));
end
rule "No Step Rule for E-CAN/1A-YES"
	when
		StepPerformed(stepId=="E-CAN/1A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1A-YES"));
end
rule "Yes Step Rule for E-CAN/1A-NO"
	when
		StepPerformed(stepId=="E-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1B",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1A-NO"));
end
rule "No Step Rule for E-CAN/1A-NO"
	when
		StepPerformed(stepId=="E-CAN/1A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1A-NO"));
end
rule "Yes Step Rule for E-CAN/1B"
	when
		StepPerformed(stepId=="E-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1B"));
end
rule "No Step Rule for E-CAN/1B"
	when
		StepPerformed(stepId=="E-CAN/1B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1B-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1B"));
end
rule "Yes Step Rule for E-CAN/1B-YES"
	when
		StepPerformed(stepId=="E-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1D",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1B-YES"));
end
rule "No Step Rule for E-CAN/1B-YES"
	when
		StepPerformed(stepId=="E-CAN/1B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1B-YES"));
end
rule "Yes Step Rule for E-CAN/1B-NO"
	when
		StepPerformed(stepId=="E-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1C",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1B-NO"));
end
rule "No Step Rule for E-CAN/1B-NO"
	when
		StepPerformed(stepId=="E-CAN/1B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1B-NO"));
end
rule "Yes Step Rule for E-CAN/1C"
	when
		StepPerformed(stepId=="E-CAN/1C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1C"));
end
rule "No Step Rule for E-CAN/1C"
	when
		StepPerformed(stepId=="E-CAN/1C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1C-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1C"));
end
rule "Yes Step Rule for E-CAN/1C-YES"
	when
		StepPerformed(stepId=="E-CAN/1C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1C-YES"));
end
rule "No Step Rule for E-CAN/1C-YES"
	when
		StepPerformed(stepId=="E-CAN/1C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1C-YES"));
end
rule "Yes Step Rule for E-CAN/1C-NO"
	when
		StepPerformed(stepId=="E-CAN/1C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1C-NO"));
end
rule "No Step Rule for E-CAN/1C-NO"
	when
		StepPerformed(stepId=="E-CAN/1C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1C-NO"));
end
rule "Yes Step Rule for E-CAN/1D"
	when
		StepPerformed(stepId=="E-CAN/1D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1D"));
end
rule "No Step Rule for E-CAN/1D"
	when
		StepPerformed(stepId=="E-CAN/1D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1D-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1D"));
end
rule "Yes Step Rule for E-CAN/1D-YES"
	when
		StepPerformed(stepId=="E-CAN/1D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1D-YES"));
end
rule "No Step Rule for E-CAN/1D-YES"
	when
		StepPerformed(stepId=="E-CAN/1D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1D-YES"));
end
rule "Yes Step Rule for E-CAN/1D-NO"
	when
		StepPerformed(stepId=="E-CAN/1D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/6B",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/1D-NO"));
end
rule "No Step Rule for E-CAN/1D-NO"
	when
		StepPerformed(stepId=="E-CAN/1D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/1D-NO"));
end
rule "Yes Step Rule for E-CAN/2A"
	when
		StepPerformed(stepId=="E-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/2A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/2A"));
end
rule "No Step Rule for E-CAN/2A"
	when
		StepPerformed(stepId=="E-CAN/2A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/2B",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/2A"));
end
rule "Yes Step Rule for E-CAN/2A-YES"
	when
		StepPerformed(stepId=="E-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/2A-YES"));
end
rule "No Step Rule for E-CAN/2A-YES"
	when
		StepPerformed(stepId=="E-CAN/2A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/2A-YES"));
end
rule "Yes Step Rule for E-CAN/2A-NO"
	when
		StepPerformed(stepId=="E-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/2B",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/2A-NO"));
end
rule "No Step Rule for E-CAN/2A-NO"
	when
		StepPerformed(stepId=="E-CAN/2A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/2A-NO"));
end
rule "Yes Step Rule for E-CAN/2B"
	when
		StepPerformed(stepId=="E-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/2B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/2B"));
end
rule "No Step Rule for E-CAN/2B"
	when
		StepPerformed(stepId=="E-CAN/2B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/3A",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/2B"));
end
rule "Yes Step Rule for E-CAN/2B-YES"
	when
		StepPerformed(stepId=="E-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/2B-YES"));
end
rule "No Step Rule for E-CAN/2B-YES"
	when
		StepPerformed(stepId=="E-CAN/2B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/2B-YES"));
end
rule "Yes Step Rule for E-CAN/2B-NO"
	when
		StepPerformed(stepId=="E-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/3A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/2B-NO"));
end
rule "No Step Rule for E-CAN/2B-NO"
	when
		StepPerformed(stepId=="E-CAN/2B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/2B-NO"));
end
rule "Yes Step Rule for E-CAN/3A"
	when
		StepPerformed(stepId=="E-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/3A"));
end
rule "No Step Rule for E-CAN/3A"
	when
		StepPerformed(stepId=="E-CAN/3A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4A",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/3A"));
end
rule "Yes Step Rule for E-CAN/3A-YES"
	when
		StepPerformed(stepId=="E-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/3B",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/3A-YES"));
end
rule "No Step Rule for E-CAN/3A-YES"
	when
		StepPerformed(stepId=="E-CAN/3A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/3A-YES"));
end
rule "Yes Step Rule for E-CAN/3A-NO"
	when
		StepPerformed(stepId=="E-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/3A-NO"));
end
rule "No Step Rule for E-CAN/3A-NO"
	when
		StepPerformed(stepId=="E-CAN/3A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/3A-NO"));
end
rule "Yes Step Rule for E-CAN/3B"
	when
		StepPerformed(stepId=="E-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/3B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/3B"));
end
rule "No Step Rule for E-CAN/3B"
	when
		StepPerformed(stepId=="E-CAN/3B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/3C",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/3B"));
end
rule "Yes Step Rule for E-CAN/3B-YES"
	when
		StepPerformed(stepId=="E-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/3B-YES"));
end
rule "No Step Rule for E-CAN/3B-YES"
	when
		StepPerformed(stepId=="E-CAN/3B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/3B-YES"));
end
rule "Yes Step Rule for E-CAN/3B-NO"
	when
		StepPerformed(stepId=="E-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/3C",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/3B-NO"));
end
rule "No Step Rule for E-CAN/3B-NO"
	when
		StepPerformed(stepId=="E-CAN/3B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/3B-NO"));
end
rule "Yes Step Rule for E-CAN/3C"
	when
		StepPerformed(stepId=="E-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/3C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/3C"));
end
rule "No Step Rule for E-CAN/3C"
	when
		StepPerformed(stepId=="E-CAN/3C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5A",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/3C"));
end
rule "Yes Step Rule for E-CAN/3C-YES"
	when
		StepPerformed(stepId=="E-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/3C-YES"));
end
rule "No Step Rule for E-CAN/3C-YES"
	when
		StepPerformed(stepId=="E-CAN/3C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/3C-YES"));
end
rule "Yes Step Rule for E-CAN/3C-NO"
	when
		StepPerformed(stepId=="E-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/3C-NO"));
end
rule "No Step Rule for E-CAN/3C-NO"
	when
		StepPerformed(stepId=="E-CAN/3C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/3C-NO"));
end
rule "Yes Step Rule for E-CAN/4A"
	when
		StepPerformed(stepId=="E-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4A"));
end
rule "No Step Rule for E-CAN/4A"
	when
		StepPerformed(stepId=="E-CAN/4A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4A-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4A"));
end
rule "Yes Step Rule for E-CAN/4A-YES"
	when
		StepPerformed(stepId=="E-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4B",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4A-YES"));
end
rule "No Step Rule for E-CAN/4A-YES"
	when
		StepPerformed(stepId=="E-CAN/4A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4A-YES"));
end
rule "Yes Step Rule for E-CAN/4A-NO"
	when
		StepPerformed(stepId=="E-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4A-NO"));
end
rule "No Step Rule for E-CAN/4A-NO"
	when
		StepPerformed(stepId=="E-CAN/4A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4A-NO"));
end
rule "Yes Step Rule for E-CAN/4B"
	when
		StepPerformed(stepId=="E-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4B"));
end
rule "No Step Rule for E-CAN/4B"
	when
		StepPerformed(stepId=="E-CAN/4B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4B-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4B"));
end
rule "Yes Step Rule for E-CAN/4B-YES"
	when
		StepPerformed(stepId=="E-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4B-YES"));
end
rule "No Step Rule for E-CAN/4B-YES"
	when
		StepPerformed(stepId=="E-CAN/4B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4B-YES"));
end
rule "Yes Step Rule for E-CAN/4B-NO"
	when
		StepPerformed(stepId=="E-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4C",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4B-NO"));
end
rule "No Step Rule for E-CAN/4B-NO"
	when
		StepPerformed(stepId=="E-CAN/4B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4B-NO"));
end
rule "Yes Step Rule for E-CAN/4C"
	when
		StepPerformed(stepId=="E-CAN/4C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4C"));
end
rule "No Step Rule for E-CAN/4C"
	when
		StepPerformed(stepId=="E-CAN/4C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4D",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4C"));
end
rule "Yes Step Rule for E-CAN/4C-YES"
	when
		StepPerformed(stepId=="E-CAN/4C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4C-YES"));
end
rule "No Step Rule for E-CAN/4C-YES"
	when
		StepPerformed(stepId=="E-CAN/4C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4C-YES"));
end
rule "Yes Step Rule for E-CAN/4C-NO"
	when
		StepPerformed(stepId=="E-CAN/4C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4D",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4C-NO"));
end
rule "No Step Rule for E-CAN/4C-NO"
	when
		StepPerformed(stepId=="E-CAN/4C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4C-NO"));
end
rule "Yes Step Rule for E-CAN/4D"
	when
		StepPerformed(stepId=="E-CAN/4D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4D"));
end
rule "No Step Rule for E-CAN/4D"
	when
		StepPerformed(stepId=="E-CAN/4D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/4D-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4D"));
end
rule "Yes Step Rule for E-CAN/4D-YES"
	when
		StepPerformed(stepId=="E-CAN/4D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4D-YES"));
end
rule "No Step Rule for E-CAN/4D-YES"
	when
		StepPerformed(stepId=="E-CAN/4D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4D-YES"));
end
rule "Yes Step Rule for E-CAN/4D-NO"
	when
		StepPerformed(stepId=="E-CAN/4D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/4D-NO"));
end
rule "No Step Rule for E-CAN/4D-NO"
	when
		StepPerformed(stepId=="E-CAN/4D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/4D-NO"));
end
rule "Yes Step Rule for E-CAN/5A"
	when
		StepPerformed(stepId=="E-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5A"));
end
rule "No Step Rule for E-CAN/5A"
	when
		StepPerformed(stepId=="E-CAN/5A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5A-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5A"));
end
rule "Yes Step Rule for E-CAN/5A-YES"
	when
		StepPerformed(stepId=="E-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5F",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5A-YES"));
end
rule "No Step Rule for E-CAN/5A-YES"
	when
		StepPerformed(stepId=="E-CAN/5A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5A-YES"));
end
rule "Yes Step Rule for E-CAN/5A-NO"
	when
		StepPerformed(stepId=="E-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5B",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5A-NO"));
end
rule "No Step Rule for E-CAN/5A-NO"
	when
		StepPerformed(stepId=="E-CAN/5A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5A-NO"));
end
rule "Yes Step Rule for E-CAN/5B"
	when
		StepPerformed(stepId=="E-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5B"));
end
rule "No Step Rule for E-CAN/5B"
	when
		StepPerformed(stepId=="E-CAN/5B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5B-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5B"));
end
rule "Yes Step Rule for E-CAN/5B-YES"
	when
		StepPerformed(stepId=="E-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5F",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5B-YES"));
end
rule "No Step Rule for E-CAN/5B-YES"
	when
		StepPerformed(stepId=="E-CAN/5B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5B-YES"));
end
rule "Yes Step Rule for E-CAN/5B-NO"
	when
		StepPerformed(stepId=="E-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5C",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5B-NO"));
end
rule "No Step Rule for E-CAN/5B-NO"
	when
		StepPerformed(stepId=="E-CAN/5B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5B-NO"));
end
rule "Yes Step Rule for E-CAN/5C"
	when
		StepPerformed(stepId=="E-CAN/5C", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5C-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5C"));
end
rule "No Step Rule for E-CAN/5C"
	when
		StepPerformed(stepId=="E-CAN/5C", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5C-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5C"));
end
rule "Yes Step Rule for E-CAN/5C-YES"
	when
		StepPerformed(stepId=="E-CAN/5C-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5F",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5C-YES"));
end
rule "No Step Rule for E-CAN/5C-YES"
	when
		StepPerformed(stepId=="E-CAN/5C-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5C-YES"));
end
rule "Yes Step Rule for E-CAN/5C-NO"
	when
		StepPerformed(stepId=="E-CAN/5C-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5D",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5C-NO"));
end
rule "No Step Rule for E-CAN/5C-NO"
	when
		StepPerformed(stepId=="E-CAN/5C-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5C-NO"));
end
rule "Yes Step Rule for E-CAN/5D"
	when
		StepPerformed(stepId=="E-CAN/5D", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5D-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5D"));
end
rule "No Step Rule for E-CAN/5D"
	when
		StepPerformed(stepId=="E-CAN/5D", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5D-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5D"));
end
rule "Yes Step Rule for E-CAN/5D-YES"
	when
		StepPerformed(stepId=="E-CAN/5D-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5F",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5D-YES"));
end
rule "No Step Rule for E-CAN/5D-YES"
	when
		StepPerformed(stepId=="E-CAN/5D-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5D-YES"));
end
rule "Yes Step Rule for E-CAN/5D-NO"
	when
		StepPerformed(stepId=="E-CAN/5D-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5E",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5D-NO"));
end
rule "No Step Rule for E-CAN/5D-NO"
	when
		StepPerformed(stepId=="E-CAN/5D-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5D-NO"));
end
rule "Yes Step Rule for E-CAN/5E"
	when
		StepPerformed(stepId=="E-CAN/5E", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5E-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5E"));
end
rule "No Step Rule for E-CAN/5E"
	when
		StepPerformed(stepId=="E-CAN/5E", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5E-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5E"));
end
rule "Yes Step Rule for E-CAN/5E-YES"
	when
		StepPerformed(stepId=="E-CAN/5E-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5F",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5E-YES"));
end
rule "No Step Rule for E-CAN/5E-YES"
	when
		StepPerformed(stepId=="E-CAN/5E-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5E-YES"));
end
rule "Yes Step Rule for E-CAN/5E-NO"
	when
		StepPerformed(stepId=="E-CAN/5E-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5E-NO"));
end
rule "No Step Rule for E-CAN/5E-NO"
	when
		StepPerformed(stepId=="E-CAN/5E-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5E-NO"));
end
rule "Yes Step Rule for E-CAN/5F"
	when
		StepPerformed(stepId=="E-CAN/5F", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5F-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5F"));
end
rule "No Step Rule for E-CAN/5F"
	when
		StepPerformed(stepId=="E-CAN/5F", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/5F-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5F"));
end
rule "Yes Step Rule for E-CAN/5F-YES"
	when
		StepPerformed(stepId=="E-CAN/5F-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5F-YES"));
end
rule "No Step Rule for E-CAN/5F-YES"
	when
		StepPerformed(stepId=="E-CAN/5F-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5F-YES"));
end
rule "Yes Step Rule for E-CAN/5F-NO"
	when
		StepPerformed(stepId=="E-CAN/5F-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/6A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/5F-NO"));
end
rule "No Step Rule for E-CAN/5F-NO"
	when
		StepPerformed(stepId=="E-CAN/5F-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/5F-NO"));
end
rule "Yes Step Rule for E-CAN/6A"
	when
		StepPerformed(stepId=="E-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/6A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/6A"));
end
rule "No Step Rule for E-CAN/6A"
	when
		StepPerformed(stepId=="E-CAN/6A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/6A-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/6A"));
end
rule "Yes Step Rule for E-CAN/6A-YES"
	when
		StepPerformed(stepId=="E-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/6A-YES"));
end
rule "No Step Rule for E-CAN/6A-YES"
	when
		StepPerformed(stepId=="E-CAN/6A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/6A-YES"));
end
rule "Yes Step Rule for E-CAN/6A-NO"
	when
		StepPerformed(stepId=="E-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/6A-NO"));
end
rule "No Step Rule for E-CAN/6A-NO"
	when
		StepPerformed(stepId=="E-CAN/6A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/6A-NO"));
end
rule "Yes Step Rule for E-CAN/6B"
	when
		StepPerformed(stepId=="E-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/6B-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/6B"));
end
rule "No Step Rule for E-CAN/6B"
	when
		StepPerformed(stepId=="E-CAN/6B", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/2A",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/6B"));
end
rule "Yes Step Rule for E-CAN/6B-YES"
	when
		StepPerformed(stepId=="E-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/6B-YES"));
end
rule "No Step Rule for E-CAN/6B-YES"
	when
		StepPerformed(stepId=="E-CAN/6B-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/6B-YES"));
end
rule "Yes Step Rule for E-CAN/6B-NO"
	when
		StepPerformed(stepId=="E-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/2A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/6B-NO"));
end
rule "No Step Rule for E-CAN/6B-NO"
	when
		StepPerformed(stepId=="E-CAN/6B-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/6B-NO"));
end
rule "Yes Step Rule for E-CAN/7A"
	when
		StepPerformed(stepId=="E-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A-YES",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/7A"));
end
rule "No Step Rule for E-CAN/7A"
	when
		StepPerformed(stepId=="E-CAN/7A", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/7A-NO",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/7A"));
end
rule "Yes Step Rule for E-CAN/7A-YES"
	when
		StepPerformed(stepId=="E-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("diag.rootcause",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/7A-YES"));
end
rule "No Step Rule for E-CAN/7A-YES"
	when
		StepPerformed(stepId=="E-CAN/7A-YES", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/7A-YES"));
end
rule "Yes Step Rule for E-CAN/7A-NO"
	when
		StepPerformed(stepId=="E-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.Yes)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("E-CAN/1A",$sum.doubleValue() + 100.0,"Answered Yes to step E-CAN/7A-NO"));
end
rule "No Step Rule for E-CAN/7A-NO"
	when
		StepPerformed(stepId=="E-CAN/7A-NO", $stepID:stepId, stepAnswer==EYesNo.No)
		accumulate(
			AdjustScore(stepId==$stepID, $score:adjustment, reason!="Step Performed");
			$sum: sum($score)
		)
	then
		insertLogical(new AdjustScore("null",$sum.doubleValue() + 100.0,"Answered No to step E-CAN/7A-NO"));
end
